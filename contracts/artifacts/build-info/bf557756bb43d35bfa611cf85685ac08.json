{
	"id": "bf557756bb43d35bfa611cf85685ac08",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"./SafeBEP20.sol\";\r\n\r\ncontract StakingPlatform is Ownable {\r\n    \r\n    using SafeMath for uint256;\r\n    using SafeBEP20 for IBEP20;\r\n\r\n    // args for _stakers\r\n    struct Staker {\r\n        uint256 stakerCurrentReward;\r\n        uint256 stakedAmount;\r\n        uint256 mode;\r\n        uint256 stakeStartTime;\r\n        uint256 lastUpdatedBlockNumber;\r\n        uint256 staked;\r\n    }   \r\n    \r\n    // refer to CRSFANS token. Address: 0x7AD8A62451f79399c940fC1A6FE96358a80B1931\r\n    \r\n    uint256 private _unstakingFeeRate;\r\n    uint256 private _eventPeriod;\r\n    uint256 private _rewardRate;\r\n    uint256 private _rewardFeeRate;\r\n    uint256 private _lockupPeriod;\r\n    uint256 private _minStakeAmount_g;\r\n    uint256 private _minStakeAmount_s;\r\n    uint256 private _minStakeAmount_c;\r\n    \r\n    address[] private _stakers;\r\n\r\n    mapping(address => Staker) private _staker;\r\n\r\n    // Total amount of token staked in staking pool.\r\n    uint256 public totalStaked;\r\n    IBEP20 public token;\r\n    \r\n    // Events triggered when start, stake, unstake(withdraw), get reward.\r\n    event Staked(address staker, uint256 amount);\r\n    event Harvest(address staker, uint256 rewardToClaim);\r\n    event Withdraw(address staker, uint256 amount);\r\n    event SetRewardRate(uint256 rewardRate);\r\n    event SetEventPeriod(uint256 lockupDuration);\r\n    event SetUnstakingFeeRate(uint256 unstakingFeeRate);\r\n\r\n    constructor(address _token) {\r\n        \r\n        Init();\r\n        token = IBEP20(_token);\r\n    }\r\n\r\n    function Init() internal {\r\n        \r\n        _rewardRate = 200; // per day\r\n        _unstakingFeeRate = 1500;\r\n        _rewardFeeRate = 100;\r\n        _eventPeriod = 7 days;\r\n        _lockupPeriod = 90 days;\r\n        _minStakeAmount_c = 1e24;\r\n        _minStakeAmount_s = 3*1e24;\r\n        _minStakeAmount_g = 7*1e24;\r\n    }\r\n\r\n    function calDaysFromTimestamp(uint256 timedur) internal pure returns (uint256) {\r\n        \r\n        return timedur.div(1 days);\r\n    }\r\n\r\n    // Update rewards for _stakers according to deposited amount.\r\n    function updateReward() private{\r\n        \r\n        uint256 stakerStakedAmount = _staker[msg.sender].stakedAmount;\r\n        \r\n        uint256 newReward = stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div(1e4);\r\n        _staker[msg.sender].stakerCurrentReward = _staker[msg.sender].stakerCurrentReward.add(newReward);\r\n        _staker[msg.sender].lastUpdatedBlockNumber = block.number;\r\n    }\r\n    \r\n    function startStaking(uint256 _amount, uint256 _mode) external {\r\n        \r\n        require(_amount > 0, \"Amount should be greater than 0\");\r\n        require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\");\r\n        require(_staker[msg.sender].staked != 0x55, \"Already started\");\r\n        \r\n        if (_mode == 0) require(_amount > 0);\r\n        else if (_mode == 1) require(_amount >= _minStakeAmount_c, \"Insufficient\");\r\n        else if (_mode == 2) require(_amount >= _minStakeAmount_s, \"Insufficient\");\r\n        else if (_mode == 3) require(_amount >= _minStakeAmount_g, \"Insufficient\");\r\n        else require(_amount < 0, \"Invalid Mode\");\r\n        \r\n        _staker[msg.sender].mode = _mode;\r\n        _staker[msg.sender].stakeStartTime = block.timestamp;\r\n        _staker[msg.sender].staked = 0x55;\r\n        _stakers.push(msg.sender);\r\n        stake(_amount);\r\n    }\r\n    \r\n    // Staker tries to stake specific amount of token.\r\n    function stake(uint256 _amount) public{\r\n        \r\n        require(_amount > 0, \"Amount should be greater than 0\");\r\n        require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\");\r\n        require(_staker[msg.sender].staked == 0x55, \"Error: invalid staker\");\r\n        \r\n        updateReward();\r\n        \r\n        token.safeTransferFrom(msg.sender, address(this), _amount);\r\n        _staker[msg.sender].stakedAmount = _staker[msg.sender].stakedAmount.add(_amount);\r\n        totalStaked = totalStaked.add(_amount);\r\n        \r\n        emit Staked(msg.sender, _amount);\r\n    }\r\n\r\n    function getTotalStaked() public view returns (uint256) {\r\n\r\n        return totalStaked;\r\n    }\r\n\r\n    function getNumberofStakers() public view returns (uint256) {\r\n\r\n        return _stakers.length;\r\n    }\r\n\r\n    function getStakerMode(address _address) public view returns (uint256) {\r\n\r\n        return _staker[_address].mode == 0 ? 0 : 1;\r\n    }\r\n\r\n    function isStartStaking(address _address) public view returns (uint256) {\r\n\r\n        return _staker[_address].staked;\r\n    }\r\n\r\n    function isLocked(address _address) public view returns (uint256) {\r\n\r\n        if (_staker[_address].staked != 0x55)\r\n            return 1;\r\n        if (_staker[_address].mode != 0)\r\n            return block.timestamp.sub(_staker[_address].stakeStartTime) % (7 days) == 0 ? 0 : 1;\r\n        else \r\n            return block.timestamp.sub(_staker[_address].stakeStartTime) >= _lockupPeriod ? 0 : 1;\r\n    }\r\n    \r\n    function stakedAmount(address _address) public view returns (uint256) {\r\n        \r\n        return _staker[_address].stakedAmount;\r\n    }\r\n    \r\n    function rewardAmount(address _address) public view returns (uint256) {\r\n\r\n        return _staker[_address].stakerCurrentReward;\r\n    }\r\n\r\n    function getRewardRate() public view returns (uint256) {\r\n\r\n        return _rewardRate;\r\n    }\r\n\r\n    // Withdraw some of token staked.\r\n    function withdraw(uint256 amount) external{\r\n        \r\n        Staker storage staker = _staker[msg.sender];    \r\n\r\n        require(amount > 0, \"Amount should be greater than 0\");\r\n        require(amount <= staker.stakedAmount, \"Invalid amount\");\r\n\r\n        updateReward();\r\n        uint256 amountTobeWithdrawn = amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this));\r\n        uint256 during = block.timestamp.sub(staker.stakeStartTime).div(1 days);\r\n        uint256 fee = 100;\r\n        bool isLockupTimeOver = staker.mode != 0 ? during % _eventPeriod == 0 && during > 0 :\r\n            block.timestamp >= staker.stakeStartTime.add(_lockupPeriod);\r\n        if (!isLockupTimeOver) {\r\n            fee = _unstakingFeeRate;\r\n        }\r\n        amountTobeWithdrawn = amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4));\r\n        totalStaked = totalStaked.sub(amountTobeWithdrawn);\r\n        staker.stakedAmount = staker.stakedAmount.sub(amountTobeWithdrawn);\r\n        token.safeTransfer(msg.sender, amountTobeWithdrawn);\r\n\r\n        emit Withdraw(msg.sender, amountTobeWithdrawn);\r\n        // return block.timestamp.sub(staker.stakeStartTime);\r\n    }\r\n    \r\n    function setRewardRate(uint256 __rewardRate) external onlyOwner {\r\n        \r\n        require(__rewardRate > 0, \"Invalid value\");\r\n        \r\n        _rewardRate = __rewardRate;\r\n\r\n        emit SetRewardRate(__rewardRate);\r\n    }\r\n\r\n    function setEventPeriod(uint256 __eventPeriod) external onlyOwner {\r\n        \r\n        require(__eventPeriod > 0, \"Invalid Lockup Duration\");\r\n\r\n        _eventPeriod = __eventPeriod.mul(1 days);\r\n\r\n        emit SetEventPeriod(__eventPeriod);\r\n    }\r\n\r\n    function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {\r\n        \r\n        require(__unstakingFeeRate > 0, \"Invalid Unstaking Fee Rate\");\r\n\r\n        _unstakingFeeRate = __unstakingFeeRate;\r\n\r\n        emit SetUnstakingFeeRate(__unstakingFeeRate);\r\n    }\r\n\r\n    function setLockupTime(uint256 lockupTime) external onlyOwner {\r\n\r\n        require(lockupTime > 0, \"Can't be zero\");\r\n\r\n        _lockupPeriod = lockupTime;\r\n    }\r\n    \r\n    // Amount of reward staker can be guaranteed.\r\n    function rewardToHarvest() public view returns (uint256){\r\n        \r\n        // updateReward();\r\n        return _staker[msg.sender].stakerCurrentReward;\r\n    }\r\n\r\n    // Get reward of msg.sender\r\n    function harvest() public{\r\n        \r\n        updateReward();\r\n        Staker storage staker = _staker[msg.sender];\r\n        uint256 rewardToClaim = staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(1e4));\r\n        \r\n        require(rewardToClaim > 0, \"Nothing to claim\");\r\n        if (rewardToClaim > token.balanceOf(address(this)))\r\n            rewardToClaim = token.balanceOf(address(this));\r\n        token.safeTransfer(msg.sender, rewardToClaim);\r\n        staker.stakerCurrentReward = 0;\r\n\r\n        emit Harvest(msg.sender, rewardToClaim);\r\n    }\r\n}\r\n"
			},
			"contracts/SafeBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport \"./IBEP20.sol\";\r\n\r\nlibrary SafeBEP20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(IBEP20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IBEP20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IBEP20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeBEP20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IBEP20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IBEP20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeBEP20: decreased allowance below zero\");\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n    \r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n        \r\n        bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\");\r\n        if (returndata.length > 0) { // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\");\r\n        }\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/IBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IBEP20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT:  Beware that changingan allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x26 0xEF PUSH29 0xF11BBE4053E1F56E9130157B606743914F94CD51F1AADBD16E849D4F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0x26 0xEF PUSH29 0xF11BBE4053E1F56E9130157B606743914F94CD51F1AADBD16E849D4F64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "194:8061:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205826ef7cf11bbe4053e1f56e9130157b606743914f94cd51f1aadbd16e849d4f64736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xE9 CALLER 0xB1 PUSH20 0x6A82AB93B5D11532572AACAA2F67FF8D05DEB581 ISZERO GASLIMIT 0xC2 STOP 0xCB 0x5D SDIV PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "467:6301:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xE9 CALLER 0xB1 PUSH20 0x6A82AB93B5D11532572AACAA2F67FF8D05DEB581 ISZERO GASLIMIT 0xC2 STOP 0xCB 0x5D SDIV PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "467:6301:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4e933b1736a82ab93b5d11532572aacaa2f67ff8d05deb5811545c200cb5d0564736f6c63430008070033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT:  Beware that changingan allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT:  Beware that changingan allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SafeBEP20.sol": {
				"SafeBEP20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SafeBEP20.sol\":198:3371  library SafeBEP20 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SafeBEP20.sol\":198:3371  library SafeBEP20 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220395c0bfb07cefbe564dae5d797a3d9f230d7b2b0b55f590cefefc1e4cadce79764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220395c0bfb07cefbe564dae5d797a3d9f230d7b2b0b55f590cefefc1e4cadce79764736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0x5C SIGNEXTEND 0xFB SMOD 0xCE 0xFB 0xE5 PUSH5 0xDAE5D797A3 0xD9 CALLCODE ADDRESS 0xD7 0xB2 0xB0 0xB5 0x5F MSIZE 0xC 0xEF 0xEF 0xC1 0xE4 0xCA 0xDC 0xE7 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "198:3173:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220395c0bfb07cefbe564dae5d797a3d9f230d7b2b0b55f590cefefc1e4cadce79764736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0x5C SIGNEXTEND 0xFB SMOD 0xCE 0xFB 0xE5 PUSH5 0xDAE5D797A3 0xD9 CALLCODE ADDRESS 0xD7 0xB2 0xB0 0xB5 0x5F MSIZE 0xC 0xEF 0xEF 0xC1 0xE4 0xCA 0xDC 0xE7 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "198:3173:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IBEP20,bytes memory)": "infinite",
								"safeApprove(contract IBEP20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IBEP20,address,uint256)": "infinite",
								"safeTransfer(contract IBEP20,address,uint256)": "infinite",
								"safeTransferFrom(contract IBEP20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 198,
									"end": 3371,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220395c0bfb07cefbe564dae5d797a3d9f230d7b2b0b55f590cefefc1e4cadce79764736f6c63430008070033",
									".code": [
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 198,
											"end": 3371,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeBEP20.sol\":\"SafeBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]},\"contracts/SafeBEP20.sol\":{\"keccak256\":\"0x6ddb1e1687ec39379d8d51c1dd37f9fc5bdbcf76d13b12bb2ef97218f17af728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c317daa7645bea9fb8926f04a64e9dda06454035d35dd618fb8865bead0b343\",\"dweb:/ipfs/QmcGbnJ9k7RVUBh5HyHxzV7u52hykYsHKqi7VRWSLvEjrG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Staking.sol": {
				"StakingPlatform": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardToClaim",
									"type": "uint256"
								}
							],
							"name": "Harvest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockupDuration",
									"type": "uint256"
								}
							],
							"name": "SetEventPeriod",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								}
							],
							"name": "SetRewardRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "unstakingFeeRate",
									"type": "uint256"
								}
							],
							"name": "SetUnstakingFeeRate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getNumberofStakers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "getStakerMode",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "harvest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isLocked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isStartStaking",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "rewardAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToHarvest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__eventPeriod",
									"type": "uint256"
								}
							],
							"name": "setEventPeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "lockupTime",
									"type": "uint256"
								}
							],
							"name": "setLockupTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__rewardRate",
									"type": "uint256"
								}
							],
							"name": "setRewardRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "__unstakingFeeRate",
									"type": "uint256"
								}
							],
							"name": "setUnstakingFeeRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "stakedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_mode",
									"type": "uint256"
								}
							],
							"name": "startStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Staking.sol\":260:8588  contract StakingPlatform is Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Staking.sol\":1629:1725  constructor(address _token) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/Staking.sol\":1678:1684  Init() */\n  tag_12\n    /* \"contracts/Staking.sol\":1678:1682  Init */\n  shl(0x20, tag_13)\n    /* \"contracts/Staking.sol\":1678:1684  Init() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/Staking.sol\":1710:1716  _token */\n  dup1\n    /* \"contracts/Staking.sol\":1695:1700  token */\n  0x0c\n  0x00\n    /* \"contracts/Staking.sol\":1695:1717  token = IBEP20(_token) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1629:1725  constructor(address _token) {\r... */\n  pop\n    /* \"contracts/Staking.sol\":260:8588  contract StakingPlatform is Ownable {\r... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/Staking.sol\":1733:2056  function Init() internal {\r... */\ntag_13:\n    /* \"contracts/Staking.sol\":1793:1796  200 */\n  0xc8\n    /* \"contracts/Staking.sol\":1779:1790  _rewardRate */\n  0x03\n    /* \"contracts/Staking.sol\":1779:1796  _rewardRate = 200 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1838:1842  1500 */\n  0x05dc\n    /* \"contracts/Staking.sol\":1818:1835  _unstakingFeeRate */\n  0x01\n    /* \"contracts/Staking.sol\":1818:1842  _unstakingFeeRate = 1500 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1870:1873  100 */\n  0x64\n    /* \"contracts/Staking.sol\":1853:1867  _rewardFeeRate */\n  0x04\n    /* \"contracts/Staking.sol\":1853:1873  _rewardFeeRate = 100 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1899:1905  7 days */\n  0x093a80\n    /* \"contracts/Staking.sol\":1884:1896  _eventPeriod */\n  0x02\n    /* \"contracts/Staking.sol\":1884:1905  _eventPeriod = 7 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1932:1939  90 days */\n  0x76a700\n    /* \"contracts/Staking.sol\":1916:1929  _lockupPeriod */\n  0x05\n    /* \"contracts/Staking.sol\":1916:1939  _lockupPeriod = 90 days */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1970:1974  1e24 */\n  0xd3c21bcecceda1000000\n    /* \"contracts/Staking.sol\":1950:1967  _minStakeAmount_c */\n  0x08\n    /* \"contracts/Staking.sol\":1950:1974  _minStakeAmount_c = 1e24 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":2005:2011  3*1e24 */\n  0x027b46536c66c8e3000000\n    /* \"contracts/Staking.sol\":1985:2002  _minStakeAmount_s */\n  0x07\n    /* \"contracts/Staking.sol\":1985:2011  _minStakeAmount_s = 3*1e24 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":2042:2048  7*1e24 */\n  0x05ca4ec2a79a7f67000000\n    /* \"contracts/Staking.sol\":2022:2039  _minStakeAmount_g */\n  0x06\n    /* \"contracts/Staking.sol\":2022:2048  _minStakeAmount_g = 7*1e24 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1733:2056  function Init() internal {\r... */\n  jump\t// out\n    /* \"#utility.yul\":7:150   */\ntag_19:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_21\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_25\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":243:362   */\ntag_24:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_27\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_19\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:690   */\ntag_30:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:684   */\n  tag_32\n    /* \"#utility.yul\":678:683   */\n  dup3\n    /* \"#utility.yul\":660:684   */\n  tag_33\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":649:684   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:690   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:822   */\ntag_33:\n    /* \"#utility.yul\":733:740   */\n  0x00\n    /* \"#utility.yul\":773:815   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":766:771   */\n  dup3\n    /* \"#utility.yul\":762:816   */\n  and\n    /* \"#utility.yul\":751:816   */\n  swap1\n  pop\n    /* \"#utility.yul\":696:822   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":951:1068   */\ntag_26:\n    /* \"#utility.yul\":1060:1061   */\n  0x00\n    /* \"#utility.yul\":1057:1058   */\n  dup1\n    /* \"#utility.yul\":1050:1062   */\n  revert\n    /* \"#utility.yul\":1074:1196   */\ntag_22:\n    /* \"#utility.yul\":1147:1171   */\n  tag_39\n    /* \"#utility.yul\":1165:1170   */\n  dup2\n    /* \"#utility.yul\":1147:1171   */\n  tag_30\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1140:1145   */\n  dup2\n    /* \"#utility.yul\":1137:1172   */\n  eq\n    /* \"#utility.yul\":1127:1190   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1186:1187   */\n  0x00\n    /* \"#utility.yul\":1183:1184   */\n  dup1\n    /* \"#utility.yul\":1176:1188   */\n  revert\n    /* \"#utility.yul\":1127:1190   */\ntag_40:\n    /* \"#utility.yul\":1074:1196   */\n  pop\n  jump\t// out\n    /* \"contracts/Staking.sol\":260:8588  contract StakingPlatform is Ownable {\r... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Staking.sol\":260:8588  contract StakingPlatform is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7e1a3786\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xa694fc3a\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xaedf562b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf9931855\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xfe600f84\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x7e1a3786\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x817b1cd2\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x91e07e7a\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x9e447fc6\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x4b77dd9e\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x4b77dd9e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5715ec11\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5d2ec65d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x645a8a56\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x692642e7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x0917e776\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4641257d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4a4fbeec\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4b62b70b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Staking.sol\":4279:4374  function getTotalStaked() public view returns (uint256) {\r... */\n    tag_3:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":5613:6793  function withdraw(uint256 amount) external{\r... */\n    tag_4:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"contracts/Staking.sol\":8003:8585  function harvest() public{\r... */\n    tag_5:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/Staking.sol\":4767:5169  function isLocked(address _address) public view returns (uint256) {\r... */\n    tag_6:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":7578:7740  function setLockupTime(uint256 lockupTime) external onlyOwner {\r... */\n    tag_7:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/Staking.sol\":2742:3621  function startStaking(uint256 _amount, uint256 _mode) external {\r... */\n    tag_8:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/Staking.sol\":4382:4485  function getNumberofStakers() public view returns (uint256) {\r... */\n    tag_9:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":7803:7962  function rewardToHarvest() public view returns (uint256){\r... */\n    tag_10:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":5329:5464  function rewardAmount(address _address) public view returns (uint256) {\r... */\n    tag_11:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":7040:7288  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {\r... */\n    tag_12:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/Staking.sol\":5472:5566  function getRewardRate() public view returns (uint256) {\r... */\n    tag_14:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":1169:1195  uint256 public totalStaked */\n    tag_15:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_16:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":7296:7570  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {\r... */\n    tag_17:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      stop\n        /* \"contracts/Staking.sol\":6805:7032  function setRewardRate(uint256 __rewardRate) external onlyOwner {\r... */\n    tag_18:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      stop\n        /* \"contracts/Staking.sol\":3689:4271  function stake(uint256 _amount) public{\r... */\n    tag_19:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"contracts/Staking.sol\":4493:4627  function getStakerMode(address _address) public view returns (uint256) {\r... */\n    tag_20:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      stop\n        /* \"contracts/Staking.sol\":5181:5317  function stakedAmount(address _address) public view returns (uint256) {\r... */\n    tag_22:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":1202:1221  IBEP20 public token */\n    tag_23:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":4635:4759  function isStartStaking(address _address) public view returns (uint256) {\r... */\n    tag_24:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":4279:4374  function getTotalStaked() public view returns (uint256) {\r... */\n    tag_29:\n        /* \"contracts/Staking.sol\":4326:4333  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":4355:4366  totalStaked */\n      sload(0x0b)\n        /* \"contracts/Staking.sol\":4348:4366  return totalStaked */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4279:4374  function getTotalStaked() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":5613:6793  function withdraw(uint256 amount) external{\r... */\n    tag_35:\n        /* \"contracts/Staking.sol\":5676:5697  Staker storage staker */\n      0x00\n        /* \"contracts/Staking.sol\":5700:5707  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":5700:5719  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":5708:5718  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":5700:5719  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":5676:5719  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5753:5754  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5744:5750  amount */\n      dup3\n        /* \"contracts/Staking.sol\":5744:5754  amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":5736:5790  require(amount > 0, \"Amount should be greater than 0\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"contracts/Staking.sol\":5819:5825  staker */\n      dup1\n        /* \"contracts/Staking.sol\":5819:5838  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":5809:5815  amount */\n      dup3\n        /* \"contracts/Staking.sol\":5809:5838  amount <= staker.stakedAmount */\n      gt\n      iszero\n        /* \"contracts/Staking.sol\":5801:5857  require(amount <= staker.stakedAmount, \"Invalid amount\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"contracts/Staking.sol\":5870:5884  updateReward() */\n      tag_111\n        /* \"contracts/Staking.sol\":5870:5882  updateReward */\n      tag_112\n        /* \"contracts/Staking.sol\":5870:5884  updateReward() */\n      jump\t// in\n    tag_111:\n        /* \"contracts/Staking.sol\":5895:5922  uint256 amountTobeWithdrawn */\n      0x00\n        /* \"contracts/Staking.sol\":5934:5939  token */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":5934:5949  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":5958:5962  this */\n      address\n        /* \"contracts/Staking.sol\":5934:5964  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_113:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_116\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_116:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n        /* \"contracts/Staking.sol\":5925:5931  amount */\n      dup4\n        /* \"contracts/Staking.sol\":5925:5964  amount < token.balanceOf(address(this)) */\n      lt\n        /* \"contracts/Staking.sol\":5925:6006  amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n      tag_119\n      jumpi\n        /* \"contracts/Staking.sol\":5976:5981  token */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":5976:5991  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":6000:6004  this */\n      address\n        /* \"contracts/Staking.sol\":5976:6006  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_120:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_123\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_123:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_124:\n        /* \"contracts/Staking.sol\":5925:6006  amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n      jump(tag_125)\n    tag_119:\n        /* \"contracts/Staking.sol\":5967:5973  amount */\n      dup3\n        /* \"contracts/Staking.sol\":5925:6006  amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n    tag_125:\n        /* \"contracts/Staking.sol\":5895:6006  uint256 amountTobeWithdrawn = amount < token.balanceOf(address(this)) ? amount : token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6017:6031  uint256 during */\n      0x00\n        /* \"contracts/Staking.sol\":6034:6088  block.timestamp.sub(staker.stakeStartTime).div(1 days) */\n      tag_126\n        /* \"contracts/Staking.sol\":6081:6087  1 days */\n      0x015180\n        /* \"contracts/Staking.sol\":6034:6076  block.timestamp.sub(staker.stakeStartTime) */\n      tag_127\n        /* \"contracts/Staking.sol\":6054:6060  staker */\n      dup6\n        /* \"contracts/Staking.sol\":6054:6075  staker.stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":6034:6049  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":6034:6053  block.timestamp.sub */\n      tag_128\n      swap1\n        /* \"contracts/Staking.sol\":6034:6076  block.timestamp.sub(staker.stakeStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_127:\n        /* \"contracts/Staking.sol\":6034:6080  block.timestamp.sub(staker.stakeStartTime).div */\n      tag_129\n      swap1\n        /* \"contracts/Staking.sol\":6034:6088  block.timestamp.sub(staker.stakeStartTime).div(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_126:\n        /* \"contracts/Staking.sol\":6017:6088  uint256 during = block.timestamp.sub(staker.stakeStartTime).div(1 days) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6099:6110  uint256 fee */\n      0x00\n        /* \"contracts/Staking.sol\":6113:6116  100 */\n      0x64\n        /* \"contracts/Staking.sol\":6099:6116  uint256 fee = 100 */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6127:6148  bool isLockupTimeOver */\n      0x00\n        /* \"contracts/Staking.sol\":6166:6167  0 */\n      dup1\n        /* \"contracts/Staking.sol\":6151:6157  staker */\n      dup6\n        /* \"contracts/Staking.sol\":6151:6162  staker.mode */\n      0x02\n      add\n      sload\n        /* \"contracts/Staking.sol\":6151:6167  staker.mode != 0 */\n      eq\n      iszero\n        /* \"contracts/Staking.sol\":6151:6285  staker.mode != 0 ? during % _eventPeriod == 0 && during > 0 :\r... */\n      tag_130\n      jumpi\n        /* \"contracts/Staking.sol\":6245:6285  staker.stakeStartTime.add(_lockupPeriod) */\n      tag_131\n        /* \"contracts/Staking.sol\":6271:6284  _lockupPeriod */\n      sload(0x05)\n        /* \"contracts/Staking.sol\":6245:6251  staker */\n      dup7\n        /* \"contracts/Staking.sol\":6245:6266  staker.stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":6245:6270  staker.stakeStartTime.add */\n      tag_132\n      swap1\n        /* \"contracts/Staking.sol\":6245:6285  staker.stakeStartTime.add(_lockupPeriod) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_131:\n        /* \"contracts/Staking.sol\":6226:6241  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":6226:6285  block.timestamp >= staker.stakeStartTime.add(_lockupPeriod) */\n      lt\n      iszero\n        /* \"contracts/Staking.sol\":6151:6285  staker.mode != 0 ? during % _eventPeriod == 0 && during > 0 :\r... */\n      jump(tag_133)\n    tag_130:\n        /* \"contracts/Staking.sol\":6195:6196  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6179:6191  _eventPeriod */\n      sload(0x02)\n        /* \"contracts/Staking.sol\":6170:6176  during */\n      dup5\n        /* \"contracts/Staking.sol\":6170:6191  during % _eventPeriod */\n      tag_134\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"contracts/Staking.sol\":6170:6196  during % _eventPeriod == 0 */\n      eq\n        /* \"contracts/Staking.sol\":6170:6210  during % _eventPeriod == 0 && during > 0 */\n      dup1\n      iszero\n      tag_136\n      jumpi\n      pop\n        /* \"contracts/Staking.sol\":6209:6210  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6200:6206  during */\n      dup4\n        /* \"contracts/Staking.sol\":6200:6210  during > 0 */\n      gt\n        /* \"contracts/Staking.sol\":6170:6210  during % _eventPeriod == 0 && during > 0 */\n    tag_136:\n        /* \"contracts/Staking.sol\":6151:6285  staker.mode != 0 ? during % _eventPeriod == 0 && during > 0 :\r... */\n    tag_133:\n        /* \"contracts/Staking.sol\":6127:6285  bool isLockupTimeOver = staker.mode != 0 ? during % _eventPeriod == 0 && during > 0 :\r... */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":6301:6317  isLockupTimeOver */\n      dup1\n        /* \"contracts/Staking.sol\":6296:6369  if (!isLockupTimeOver) {\r... */\n      tag_137\n      jumpi\n        /* \"contracts/Staking.sol\":6340:6357  _unstakingFeeRate */\n      sload(0x01)\n        /* \"contracts/Staking.sol\":6334:6357  fee = _unstakingFeeRate */\n      swap2\n      pop\n        /* \"contracts/Staking.sol\":6296:6369  if (!isLockupTimeOver) {\r... */\n    tag_137:\n        /* \"contracts/Staking.sol\":6401:6463  amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4)) */\n      tag_138\n        /* \"contracts/Staking.sol\":6425:6462  amountTobeWithdrawn.mul(fee).div(1e4) */\n      tag_139\n        /* \"contracts/Staking.sol\":6458:6461  1e4 */\n      0x2710\n        /* \"contracts/Staking.sol\":6425:6453  amountTobeWithdrawn.mul(fee) */\n      tag_140\n        /* \"contracts/Staking.sol\":6449:6452  fee */\n      dup6\n        /* \"contracts/Staking.sol\":6425:6444  amountTobeWithdrawn */\n      dup9\n        /* \"contracts/Staking.sol\":6425:6448  amountTobeWithdrawn.mul */\n      tag_141\n      swap1\n        /* \"contracts/Staking.sol\":6425:6453  amountTobeWithdrawn.mul(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_140:\n        /* \"contracts/Staking.sol\":6425:6457  amountTobeWithdrawn.mul(fee).div */\n      tag_129\n      swap1\n        /* \"contracts/Staking.sol\":6425:6462  amountTobeWithdrawn.mul(fee).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_139:\n        /* \"contracts/Staking.sol\":6401:6420  amountTobeWithdrawn */\n      dup6\n        /* \"contracts/Staking.sol\":6401:6424  amountTobeWithdrawn.sub */\n      tag_128\n      swap1\n        /* \"contracts/Staking.sol\":6401:6463  amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_138:\n        /* \"contracts/Staking.sol\":6379:6463  amountTobeWithdrawn = amountTobeWithdrawn.sub(amountTobeWithdrawn.mul(fee).div(1e4)) */\n      swap4\n      pop\n        /* \"contracts/Staking.sol\":6488:6524  totalStaked.sub(amountTobeWithdrawn) */\n      tag_142\n        /* \"contracts/Staking.sol\":6504:6523  amountTobeWithdrawn */\n      dup5\n        /* \"contracts/Staking.sol\":6488:6499  totalStaked */\n      sload(0x0b)\n        /* \"contracts/Staking.sol\":6488:6503  totalStaked.sub */\n      tag_128\n      swap1\n        /* \"contracts/Staking.sol\":6488:6524  totalStaked.sub(amountTobeWithdrawn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_142:\n        /* \"contracts/Staking.sol\":6474:6485  totalStaked */\n      0x0b\n        /* \"contracts/Staking.sol\":6474:6524  totalStaked = totalStaked.sub(amountTobeWithdrawn) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":6557:6601  staker.stakedAmount.sub(amountTobeWithdrawn) */\n      tag_143\n        /* \"contracts/Staking.sol\":6581:6600  amountTobeWithdrawn */\n      dup5\n        /* \"contracts/Staking.sol\":6557:6563  staker */\n      dup7\n        /* \"contracts/Staking.sol\":6557:6576  staker.stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":6557:6580  staker.stakedAmount.sub */\n      tag_128\n      swap1\n        /* \"contracts/Staking.sol\":6557:6601  staker.stakedAmount.sub(amountTobeWithdrawn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_143:\n        /* \"contracts/Staking.sol\":6535:6541  staker */\n      dup6\n        /* \"contracts/Staking.sol\":6535:6554  staker.stakedAmount */\n      0x01\n      add\n        /* \"contracts/Staking.sol\":6535:6601  staker.stakedAmount = staker.stakedAmount.sub(amountTobeWithdrawn) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":6612:6663  token.safeTransfer(msg.sender, amountTobeWithdrawn) */\n      tag_144\n        /* \"contracts/Staking.sol\":6631:6641  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6643:6662  amountTobeWithdrawn */\n      dup6\n        /* \"contracts/Staking.sol\":6612:6617  token */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":6612:6630  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_145\n      swap1\n        /* \"contracts/Staking.sol\":6612:6663  token.safeTransfer(msg.sender, amountTobeWithdrawn) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_144:\n        /* \"contracts/Staking.sol\":6681:6722  Withdraw(msg.sender, amountTobeWithdrawn) */\n      0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364\n        /* \"contracts/Staking.sol\":6690:6700  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":6702:6721  amountTobeWithdrawn */\n      dup6\n        /* \"contracts/Staking.sol\":6681:6722  Withdraw(msg.sender, amountTobeWithdrawn) */\n      mload(0x40)\n      tag_146\n      swap3\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":5655:6793  {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Staking.sol\":5613:6793  function withdraw(uint256 amount) external{\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":8003:8585  function harvest() public{\r... */\n    tag_37:\n        /* \"contracts/Staking.sol\":8049:8063  updateReward() */\n      tag_149\n        /* \"contracts/Staking.sol\":8049:8061  updateReward */\n      tag_112\n        /* \"contracts/Staking.sol\":8049:8063  updateReward() */\n      jump\t// in\n    tag_149:\n        /* \"contracts/Staking.sol\":8074:8095  Staker storage staker */\n      0x00\n        /* \"contracts/Staking.sol\":8098:8105  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":8098:8117  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":8106:8116  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":8098:8117  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":8074:8117  Staker storage staker = _staker[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":8128:8149  uint256 rewardToClaim */\n      0x00\n        /* \"contracts/Staking.sol\":8152:8239  staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(1e4)) */\n      tag_150\n        /* \"contracts/Staking.sol\":8183:8238  staker.stakerCurrentReward.mul(_rewardFeeRate).div(1e4) */\n      tag_151\n        /* \"contracts/Staking.sol\":8234:8237  1e4 */\n      0x2710\n        /* \"contracts/Staking.sol\":8183:8229  staker.stakerCurrentReward.mul(_rewardFeeRate) */\n      tag_152\n        /* \"contracts/Staking.sol\":8214:8228  _rewardFeeRate */\n      sload(0x04)\n        /* \"contracts/Staking.sol\":8183:8189  staker */\n      dup7\n        /* \"contracts/Staking.sol\":8183:8209  staker.stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":8183:8213  staker.stakerCurrentReward.mul */\n      tag_141\n      swap1\n        /* \"contracts/Staking.sol\":8183:8229  staker.stakerCurrentReward.mul(_rewardFeeRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_152:\n        /* \"contracts/Staking.sol\":8183:8233  staker.stakerCurrentReward.mul(_rewardFeeRate).div */\n      tag_129\n      swap1\n        /* \"contracts/Staking.sol\":8183:8238  staker.stakerCurrentReward.mul(_rewardFeeRate).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_151:\n        /* \"contracts/Staking.sol\":8152:8158  staker */\n      dup4\n        /* \"contracts/Staking.sol\":8152:8178  staker.stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":8152:8182  staker.stakerCurrentReward.sub */\n      tag_128\n      swap1\n        /* \"contracts/Staking.sol\":8152:8239  staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(1e4)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"contracts/Staking.sol\":8128:8239  uint256 rewardToClaim = staker.stakerCurrentReward.sub(staker.stakerCurrentReward.mul(_rewardFeeRate).div(1e4)) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":8284:8285  0 */\n      0x00\n        /* \"contracts/Staking.sol\":8268:8281  rewardToClaim */\n      dup2\n        /* \"contracts/Staking.sol\":8268:8285  rewardToClaim > 0 */\n      gt\n        /* \"contracts/Staking.sol\":8260:8306  require(rewardToClaim > 0, \"Nothing to claim\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"contracts/Staking.sol\":8337:8342  token */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":8337:8352  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":8361:8365  this */\n      address\n        /* \"contracts/Staking.sol\":8337:8367  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_156:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_159\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_159:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_160\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_160:\n        /* \"contracts/Staking.sol\":8321:8334  rewardToClaim */\n      dup2\n        /* \"contracts/Staking.sol\":8321:8367  rewardToClaim > token.balanceOf(address(this)) */\n      gt\n        /* \"contracts/Staking.sol\":8317:8428  if (rewardToClaim > token.balanceOf(address(this)))\r... */\n      iszero\n      tag_161\n      jumpi\n        /* \"contracts/Staking.sol\":8398:8403  token */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":8398:8413  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":8422:8426  this */\n      address\n        /* \"contracts/Staking.sol\":8398:8428  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_162:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_165\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_165:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_166\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_166:\n        /* \"contracts/Staking.sol\":8382:8428  rewardToClaim = token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":8317:8428  if (rewardToClaim > token.balanceOf(address(this)))\r... */\n    tag_161:\n        /* \"contracts/Staking.sol\":8439:8484  token.safeTransfer(msg.sender, rewardToClaim) */\n      tag_167\n        /* \"contracts/Staking.sol\":8458:8468  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":8470:8483  rewardToClaim */\n      dup3\n        /* \"contracts/Staking.sol\":8439:8444  token */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":8439:8457  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_145\n      swap1\n        /* \"contracts/Staking.sol\":8439:8484  token.safeTransfer(msg.sender, rewardToClaim) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_167:\n        /* \"contracts/Staking.sol\":8524:8525  0 */\n      0x00\n        /* \"contracts/Staking.sol\":8495:8501  staker */\n      dup3\n        /* \"contracts/Staking.sol\":8495:8521  staker.stakerCurrentReward */\n      0x00\n      add\n        /* \"contracts/Staking.sol\":8495:8525  staker.stakerCurrentReward = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":8543:8577  Harvest(msg.sender, rewardToClaim) */\n      0xc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba\n        /* \"contracts/Staking.sol\":8551:8561  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":8563:8576  rewardToClaim */\n      dup3\n        /* \"contracts/Staking.sol\":8543:8577  Harvest(msg.sender, rewardToClaim) */\n      mload(0x40)\n      tag_168\n      swap3\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":8028:8585  {\r... */\n      pop\n      pop\n        /* \"contracts/Staking.sol\":8003:8585  function harvest() public{\r... */\n      jump\t// out\n        /* \"contracts/Staking.sol\":4767:5169  function isLocked(address _address) public view returns (uint256) {\r... */\n    tag_41:\n        /* \"contracts/Staking.sol\":4824:4831  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":4878:4882  0x55 */\n      0x55\n        /* \"contracts/Staking.sol\":4850:4857  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":4850:4867  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":4858:4866  _address */\n      dup5\n        /* \"contracts/Staking.sol\":4850:4867  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4850:4874  _staker[_address].staked */\n      0x05\n      add\n      sload\n        /* \"contracts/Staking.sol\":4850:4882  _staker[_address].staked != 0x55 */\n      eq\n        /* \"contracts/Staking.sol\":4846:4905  if (_staker[_address].staked != 0x55)\r... */\n      tag_170\n      jumpi\n        /* \"contracts/Staking.sol\":4904:4905  1 */\n      0x01\n        /* \"contracts/Staking.sol\":4897:4905  return 1 */\n      swap1\n      pop\n      jump(tag_169)\n        /* \"contracts/Staking.sol\":4846:4905  if (_staker[_address].staked != 0x55)\r... */\n    tag_170:\n        /* \"contracts/Staking.sol\":4946:4947  0 */\n      0x00\n        /* \"contracts/Staking.sol\":4920:4927  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":4920:4937  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":4928:4936  _address */\n      dup5\n        /* \"contracts/Staking.sol\":4920:4937  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4920:4942  _staker[_address].mode */\n      0x02\n      add\n      sload\n        /* \"contracts/Staking.sol\":4920:4947  _staker[_address].mode != 0 */\n      eq\n        /* \"contracts/Staking.sol\":4916:5161  if (_staker[_address].mode != 0)\r... */\n      tag_171\n      jumpi\n        /* \"contracts/Staking.sol\":5037:5038  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5026:5032  7 days */\n      0x093a80\n        /* \"contracts/Staking.sol\":4969:5022  block.timestamp.sub(_staker[_address].stakeStartTime) */\n      tag_172\n        /* \"contracts/Staking.sol\":4989:4996  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":4989:5006  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":4997:5005  _address */\n      dup7\n        /* \"contracts/Staking.sol\":4989:5006  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4989:5021  _staker[_address].stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":4969:4984  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":4969:4988  block.timestamp.sub */\n      tag_128\n      swap1\n        /* \"contracts/Staking.sol\":4969:5022  block.timestamp.sub(_staker[_address].stakeStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_172:\n        /* \"contracts/Staking.sol\":4969:5033  block.timestamp.sub(_staker[_address].stakeStartTime) % (7 days) */\n      tag_173\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_173:\n        /* \"contracts/Staking.sol\":4969:5038  block.timestamp.sub(_staker[_address].stakeStartTime) % (7 days) == 0 */\n      eq\n        /* \"contracts/Staking.sol\":4969:5046  block.timestamp.sub(_staker[_address].stakeStartTime) % (7 days) == 0 ? 0 : 1 */\n      tag_174\n      jumpi\n        /* \"contracts/Staking.sol\":5045:5046  1 */\n      0x01\n        /* \"contracts/Staking.sol\":4969:5046  block.timestamp.sub(_staker[_address].stakeStartTime) % (7 days) == 0 ? 0 : 1 */\n      jump(tag_175)\n    tag_174:\n        /* \"contracts/Staking.sol\":5041:5042  0 */\n      0x00\n        /* \"contracts/Staking.sol\":4969:5046  block.timestamp.sub(_staker[_address].stakeStartTime) % (7 days) == 0 ? 0 : 1 */\n    tag_175:\n        /* \"contracts/Staking.sol\":4962:5046  return block.timestamp.sub(_staker[_address].stakeStartTime) % (7 days) == 0 ? 0 : 1 */\n      0xff\n      and\n      swap1\n      pop\n      jump(tag_169)\n        /* \"contracts/Staking.sol\":4916:5161  if (_staker[_address].mode != 0)\r... */\n    tag_171:\n        /* \"contracts/Staking.sol\":5140:5153  _lockupPeriod */\n      sload(0x05)\n        /* \"contracts/Staking.sol\":5083:5136  block.timestamp.sub(_staker[_address].stakeStartTime) */\n      tag_177\n        /* \"contracts/Staking.sol\":5103:5110  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":5103:5120  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":5111:5119  _address */\n      dup6\n        /* \"contracts/Staking.sol\":5103:5120  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":5103:5135  _staker[_address].stakeStartTime */\n      0x03\n      add\n      sload\n        /* \"contracts/Staking.sol\":5083:5098  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":5083:5102  block.timestamp.sub */\n      tag_128\n      swap1\n        /* \"contracts/Staking.sol\":5083:5136  block.timestamp.sub(_staker[_address].stakeStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_177:\n        /* \"contracts/Staking.sol\":5083:5153  block.timestamp.sub(_staker[_address].stakeStartTime) >= _lockupPeriod */\n      lt\n      iszero\n        /* \"contracts/Staking.sol\":5083:5161  block.timestamp.sub(_staker[_address].stakeStartTime) >= _lockupPeriod ? 0 : 1 */\n      tag_178\n      jumpi\n        /* \"contracts/Staking.sol\":5160:5161  1 */\n      0x01\n        /* \"contracts/Staking.sol\":5083:5161  block.timestamp.sub(_staker[_address].stakeStartTime) >= _lockupPeriod ? 0 : 1 */\n      jump(tag_179)\n    tag_178:\n        /* \"contracts/Staking.sol\":5156:5157  0 */\n      0x00\n        /* \"contracts/Staking.sol\":5083:5161  block.timestamp.sub(_staker[_address].stakeStartTime) >= _lockupPeriod ? 0 : 1 */\n    tag_179:\n        /* \"contracts/Staking.sol\":5076:5161  return block.timestamp.sub(_staker[_address].stakeStartTime) >= _lockupPeriod ? 0 : 1 */\n      0xff\n      and\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4767:5169  function isLocked(address _address) public view returns (uint256) {\r... */\n    tag_169:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":7578:7740  function setLockupTime(uint256 lockupTime) external onlyOwner {\r... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"contracts/Staking.sol\":7674:7675  0 */\n      0x00\n        /* \"contracts/Staking.sol\":7661:7671  lockupTime */\n      dup2\n        /* \"contracts/Staking.sol\":7661:7675  lockupTime > 0 */\n      gt\n        /* \"contracts/Staking.sol\":7653:7693  require(lockupTime > 0, \"Can't be zero\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"contracts/Staking.sol\":7722:7732  lockupTime */\n      dup1\n        /* \"contracts/Staking.sol\":7706:7719  _lockupPeriod */\n      0x05\n        /* \"contracts/Staking.sol\":7706:7732  _lockupPeriod = lockupTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":7578:7740  function setLockupTime(uint256 lockupTime) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":2742:3621  function startStaking(uint256 _amount, uint256 _mode) external {\r... */\n    tag_49:\n        /* \"contracts/Staking.sol\":2844:2845  0 */\n      0x00\n        /* \"contracts/Staking.sol\":2834:2841  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":2834:2845  _amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":2826:2881  require(_amount > 0, \"Amount should be greater than 0\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_107\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"contracts/Staking.sol\":2930:2937  _amount */\n      dup2\n        /* \"contracts/Staking.sol\":2900:2905  token */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":2900:2915  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":2916:2926  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2900:2927  token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_194:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_195\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_195:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_197\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_197:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_198\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_198:\n        /* \"contracts/Staking.sol\":2900:2937  token.balanceOf(msg.sender) > _amount */\n      gt\n        /* \"contracts/Staking.sol\":2892:2955  require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n        /* \"contracts/Staking.sol\":3004:3008  0x55 */\n      0x55\n        /* \"contracts/Staking.sol\":2974:2981  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":2974:2993  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2982:2992  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2974:2993  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2974:3000  _staker[msg.sender].staked */\n      0x05\n      add\n      sload\n        /* \"contracts/Staking.sol\":2974:3008  _staker[msg.sender].staked != 0x55 */\n      eq\n      iszero\n        /* \"contracts/Staking.sol\":2966:3028  require(_staker[msg.sender].staked != 0x55, \"Already started\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_202:\n        /* \"contracts/Staking.sol\":3062:3063  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3053:3058  _mode */\n      dup2\n        /* \"contracts/Staking.sol\":3053:3063  _mode == 0 */\n      eq\n        /* \"contracts/Staking.sol\":3049:3392  if (_mode == 0) require(_amount > 0);\r... */\n      iszero\n      tag_205\n      jumpi\n        /* \"contracts/Staking.sol\":3083:3084  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3073:3080  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3073:3084  _amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":3065:3085  require(_amount > 0) */\n      tag_206\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_206:\n        /* \"contracts/Staking.sol\":3049:3392  if (_mode == 0) require(_amount > 0);\r... */\n      jump(tag_207)\n    tag_205:\n        /* \"contracts/Staking.sol\":3114:3115  1 */\n      0x01\n        /* \"contracts/Staking.sol\":3105:3110  _mode */\n      dup2\n        /* \"contracts/Staking.sol\":3105:3115  _mode == 1 */\n      eq\n        /* \"contracts/Staking.sol\":3101:3392  if (_mode == 1) require(_amount >= _minStakeAmount_c, \"Insufficient\");\r... */\n      iszero\n      tag_208\n      jumpi\n        /* \"contracts/Staking.sol\":3136:3153  _minStakeAmount_c */\n      sload(0x08)\n        /* \"contracts/Staking.sol\":3125:3132  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3125:3153  _amount >= _minStakeAmount_c */\n      lt\n      iszero\n        /* \"contracts/Staking.sol\":3117:3170  require(_amount >= _minStakeAmount_c, \"Insufficient\") */\n      tag_209\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_209:\n        /* \"contracts/Staking.sol\":3101:3392  if (_mode == 1) require(_amount >= _minStakeAmount_c, \"Insufficient\");\r... */\n      jump(tag_212)\n    tag_208:\n        /* \"contracts/Staking.sol\":3199:3200  2 */\n      0x02\n        /* \"contracts/Staking.sol\":3190:3195  _mode */\n      dup2\n        /* \"contracts/Staking.sol\":3190:3200  _mode == 2 */\n      eq\n        /* \"contracts/Staking.sol\":3186:3392  if (_mode == 2) require(_amount >= _minStakeAmount_s, \"Insufficient\");\r... */\n      iszero\n      tag_213\n      jumpi\n        /* \"contracts/Staking.sol\":3221:3238  _minStakeAmount_s */\n      sload(0x07)\n        /* \"contracts/Staking.sol\":3210:3217  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3210:3238  _amount >= _minStakeAmount_s */\n      lt\n      iszero\n        /* \"contracts/Staking.sol\":3202:3255  require(_amount >= _minStakeAmount_s, \"Insufficient\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap1\n      tag_211\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_214:\n        /* \"contracts/Staking.sol\":3186:3392  if (_mode == 2) require(_amount >= _minStakeAmount_s, \"Insufficient\");\r... */\n      jump(tag_216)\n    tag_213:\n        /* \"contracts/Staking.sol\":3284:3285  3 */\n      0x03\n        /* \"contracts/Staking.sol\":3275:3280  _mode */\n      dup2\n        /* \"contracts/Staking.sol\":3275:3285  _mode == 3 */\n      eq\n        /* \"contracts/Staking.sol\":3271:3392  if (_mode == 3) require(_amount >= _minStakeAmount_g, \"Insufficient\");\r... */\n      iszero\n      tag_217\n      jumpi\n        /* \"contracts/Staking.sol\":3306:3323  _minStakeAmount_g */\n      sload(0x06)\n        /* \"contracts/Staking.sol\":3295:3302  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3295:3323  _amount >= _minStakeAmount_g */\n      lt\n      iszero\n        /* \"contracts/Staking.sol\":3287:3340  require(_amount >= _minStakeAmount_g, \"Insufficient\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap1\n      tag_211\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_218:\n        /* \"contracts/Staking.sol\":3271:3392  if (_mode == 3) require(_amount >= _minStakeAmount_g, \"Insufficient\");\r... */\n      jump(tag_220)\n    tag_217:\n        /* \"contracts/Staking.sol\":3374:3375  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3364:3371  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3364:3375  _amount < 0 */\n      lt\n        /* \"contracts/Staking.sol\":3356:3392  require(_amount < 0, \"Invalid Mode\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_221:\n        /* \"contracts/Staking.sol\":3271:3392  if (_mode == 3) require(_amount >= _minStakeAmount_g, \"Insufficient\");\r... */\n    tag_220:\n        /* \"contracts/Staking.sol\":3186:3392  if (_mode == 2) require(_amount >= _minStakeAmount_s, \"Insufficient\");\r... */\n    tag_216:\n        /* \"contracts/Staking.sol\":3101:3392  if (_mode == 1) require(_amount >= _minStakeAmount_c, \"Insufficient\");\r... */\n    tag_212:\n        /* \"contracts/Staking.sol\":3049:3392  if (_mode == 0) require(_amount > 0);\r... */\n    tag_207:\n        /* \"contracts/Staking.sol\":3440:3445  _mode */\n      dup1\n        /* \"contracts/Staking.sol\":3413:3420  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":3413:3432  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3421:3431  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3413:3432  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3413:3437  _staker[msg.sender].mode */\n      0x02\n      add\n        /* \"contracts/Staking.sol\":3413:3445  _staker[msg.sender].mode = _mode */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3493:3508  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":3456:3463  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":3456:3475  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3464:3474  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3456:3475  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3456:3490  _staker[msg.sender].stakeStartTime */\n      0x03\n      add\n        /* \"contracts/Staking.sol\":3456:3508  _staker[msg.sender].stakeStartTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3548:3552  0x55 */\n      0x55\n        /* \"contracts/Staking.sol\":3519:3526  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":3519:3538  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3527:3537  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3519:3538  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3519:3545  _staker[msg.sender].staked */\n      0x05\n      add\n        /* \"contracts/Staking.sol\":3519:3552  _staker[msg.sender].staked = 0x55 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3563:3571  _stakers */\n      0x09\n        /* \"contracts/Staking.sol\":3577:3587  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3563:3588  _stakers.push(msg.sender) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":3599:3613  stake(_amount) */\n      tag_225\n        /* \"contracts/Staking.sol\":3605:3612  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":3599:3604  stake */\n      tag_83\n        /* \"contracts/Staking.sol\":3599:3613  stake(_amount) */\n      jump\t// in\n    tag_225:\n        /* \"contracts/Staking.sol\":2742:3621  function startStaking(uint256 _amount, uint256 _mode) external {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":4382:4485  function getNumberofStakers() public view returns (uint256) {\r... */\n    tag_51:\n        /* \"contracts/Staking.sol\":4433:4440  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":4462:4470  _stakers */\n      0x09\n        /* \"contracts/Staking.sol\":4462:4477  _stakers.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4455:4477  return _stakers.length */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4382:4485  function getNumberofStakers() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":7803:7962  function rewardToHarvest() public view returns (uint256){\r... */\n    tag_54:\n        /* \"contracts/Staking.sol\":7851:7858  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":7915:7922  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":7915:7934  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":7923:7933  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":7915:7934  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":7915:7954  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":7908:7954  return _staker[msg.sender].stakerCurrentReward */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":7803:7962  function rewardToHarvest() public view returns (uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":5329:5464  function rewardAmount(address _address) public view returns (uint256) {\r... */\n    tag_58:\n        /* \"contracts/Staking.sol\":5390:5397  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":5419:5426  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":5419:5436  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":5427:5435  _address */\n      dup4\n        /* \"contracts/Staking.sol\":5419:5436  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":5419:5456  _staker[_address].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":5412:5456  return _staker[_address].stakerCurrentReward */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5329:5464  function rewardAmount(address _address) public view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":7040:7288  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {\r... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_230\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_231\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_233\n      swap1\n      tag_186\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_232:\n        /* \"contracts/Staking.sol\":7151:7152  0 */\n      0x00\n        /* \"contracts/Staking.sol\":7135:7148  __eventPeriod */\n      dup2\n        /* \"contracts/Staking.sol\":7135:7152  __eventPeriod > 0 */\n      gt\n        /* \"contracts/Staking.sol\":7127:7180  require(__eventPeriod > 0, \"Invalid Lockup Duration\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_235:\n        /* \"contracts/Staking.sol\":7208:7233  __eventPeriod.mul(1 days) */\n      tag_238\n        /* \"contracts/Staking.sol\":7226:7232  1 days */\n      0x015180\n        /* \"contracts/Staking.sol\":7208:7221  __eventPeriod */\n      dup3\n        /* \"contracts/Staking.sol\":7208:7225  __eventPeriod.mul */\n      tag_141\n      swap1\n        /* \"contracts/Staking.sol\":7208:7233  __eventPeriod.mul(1 days) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_238:\n        /* \"contracts/Staking.sol\":7193:7205  _eventPeriod */\n      0x02\n        /* \"contracts/Staking.sol\":7193:7233  _eventPeriod = __eventPeriod.mul(1 days) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":7251:7280  SetEventPeriod(__eventPeriod) */\n      0x189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c\n        /* \"contracts/Staking.sol\":7266:7279  __eventPeriod */\n      dup2\n        /* \"contracts/Staking.sol\":7251:7280  SetEventPeriod(__eventPeriod) */\n      mload(0x40)\n      tag_239\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":7040:7288  function setEventPeriod(uint256 __eventPeriod) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_241\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_242\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_244\n      swap1\n      tag_186\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_243:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_246\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_247\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Staking.sol\":5472:5566  function getRewardRate() public view returns (uint256) {\r... */\n    tag_66:\n        /* \"contracts/Staking.sol\":5518:5525  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":5547:5558  _rewardRate */\n      sload(0x03)\n        /* \"contracts/Staking.sol\":5540:5558  return _rewardRate */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5472:5566  function getRewardRate() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":1169:1195  uint256 public totalStaked */\n    tag_69:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":7296:7570  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {\r... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_251\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_252\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap1\n      tag_186\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_253:\n        /* \"contracts/Staking.sol\":7422:7423  0 */\n      0x00\n        /* \"contracts/Staking.sol\":7401:7419  __unstakingFeeRate */\n      dup2\n        /* \"contracts/Staking.sol\":7401:7423  __unstakingFeeRate > 0 */\n      gt\n        /* \"contracts/Staking.sol\":7393:7454  require(__unstakingFeeRate > 0, \"Invalid Unstaking Fee Rate\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_256:\n        /* \"contracts/Staking.sol\":7487:7505  __unstakingFeeRate */\n      dup1\n        /* \"contracts/Staking.sol\":7467:7484  _unstakingFeeRate */\n      0x01\n        /* \"contracts/Staking.sol\":7467:7505  _unstakingFeeRate = __unstakingFeeRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":7523:7562  SetUnstakingFeeRate(__unstakingFeeRate) */\n      0x150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b81\n        /* \"contracts/Staking.sol\":7543:7561  __unstakingFeeRate */\n      dup2\n        /* \"contracts/Staking.sol\":7523:7562  SetUnstakingFeeRate(__unstakingFeeRate) */\n      mload(0x40)\n      tag_259\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_259:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":7296:7570  function setUnstakingFeeRate(uint256 __unstakingFeeRate) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":6805:7032  function setRewardRate(uint256 __rewardRate) external onlyOwner {\r... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_261\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_262\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_263\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_186\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_263:\n        /* \"contracts/Staking.sol\":6913:6914  0 */\n      0x00\n        /* \"contracts/Staking.sol\":6898:6910  __rewardRate */\n      dup2\n        /* \"contracts/Staking.sol\":6898:6914  __rewardRate > 0 */\n      gt\n        /* \"contracts/Staking.sol\":6890:6932  require(__rewardRate > 0, \"Invalid value\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_267\n      swap1\n      tag_268\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_266:\n        /* \"contracts/Staking.sol\":6967:6979  __rewardRate */\n      dup1\n        /* \"contracts/Staking.sol\":6953:6964  _rewardRate */\n      0x03\n        /* \"contracts/Staking.sol\":6953:6979  _rewardRate = __rewardRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":6997:7024  SetRewardRate(__rewardRate) */\n      0x1946fb78c7ca778b54d82cabaac5ba67cf446f58d0ff1f8ceaebb6150e54e44f\n        /* \"contracts/Staking.sol\":7011:7023  __rewardRate */\n      dup2\n        /* \"contracts/Staking.sol\":6997:7024  SetRewardRate(__rewardRate) */\n      mload(0x40)\n      tag_269\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":6805:7032  function setRewardRate(uint256 __rewardRate) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":3689:4271  function stake(uint256 _amount) public{\r... */\n    tag_83:\n        /* \"contracts/Staking.sol\":3766:3767  0 */\n      0x00\n        /* \"contracts/Staking.sol\":3756:3763  _amount */\n      dup2\n        /* \"contracts/Staking.sol\":3756:3767  _amount > 0 */\n      gt\n        /* \"contracts/Staking.sol\":3748:3803  require(_amount > 0, \"Amount should be greater than 0\") */\n      tag_271\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap1\n      tag_107\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_271:\n        /* \"contracts/Staking.sol\":3852:3859  _amount */\n      dup1\n        /* \"contracts/Staking.sol\":3822:3827  token */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":3822:3837  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Staking.sol\":3838:3848  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3822:3849  token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_273\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_273:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_274\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_274:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_276\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_276:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_277\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_277:\n        /* \"contracts/Staking.sol\":3822:3859  token.balanceOf(msg.sender) > _amount */\n      gt\n        /* \"contracts/Staking.sol\":3814:3877  require(token.balanceOf(msg.sender) > _amount, \"Insufficient!\") */\n      tag_278\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_279\n      swap1\n      tag_201\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_278:\n        /* \"contracts/Staking.sol\":3926:3930  0x55 */\n      0x55\n        /* \"contracts/Staking.sol\":3896:3903  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":3896:3915  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":3904:3914  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":3896:3915  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":3896:3922  _staker[msg.sender].staked */\n      0x05\n      add\n      sload\n        /* \"contracts/Staking.sol\":3896:3930  _staker[msg.sender].staked == 0x55 */\n      eq\n        /* \"contracts/Staking.sol\":3888:3956  require(_staker[msg.sender].staked == 0x55, \"Error: invalid staker\") */\n      tag_280\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_281\n      swap1\n      tag_282\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_280:\n        /* \"contracts/Staking.sol\":3977:3991  updateReward() */\n      tag_283\n        /* \"contracts/Staking.sol\":3977:3989  updateReward */\n      tag_112\n        /* \"contracts/Staking.sol\":3977:3991  updateReward() */\n      jump\t// in\n    tag_283:\n        /* \"contracts/Staking.sol\":4012:4070  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_284\n        /* \"contracts/Staking.sol\":4035:4045  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4055:4059  this */\n      address\n        /* \"contracts/Staking.sol\":4062:4069  _amount */\n      dup4\n        /* \"contracts/Staking.sol\":4012:4017  token */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Staking.sol\":4012:4034  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_285\n      swap1\n        /* \"contracts/Staking.sol\":4012:4070  token.safeTransferFrom(msg.sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_284:\n        /* \"contracts/Staking.sol\":4116:4161  _staker[msg.sender].stakedAmount.add(_amount) */\n      tag_286\n        /* \"contracts/Staking.sol\":4153:4160  _amount */\n      dup2\n        /* \"contracts/Staking.sol\":4116:4123  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":4116:4135  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":4124:4134  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4116:4135  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4116:4148  _staker[msg.sender].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":4116:4152  _staker[msg.sender].stakedAmount.add */\n      tag_132\n      swap1\n        /* \"contracts/Staking.sol\":4116:4161  _staker[msg.sender].stakedAmount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_286:\n        /* \"contracts/Staking.sol\":4081:4088  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":4081:4100  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":4089:4099  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4081:4100  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4081:4113  _staker[msg.sender].stakedAmount */\n      0x01\n      add\n        /* \"contracts/Staking.sol\":4081:4161  _staker[msg.sender].stakedAmount = _staker[msg.sender].stakedAmount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":4186:4210  totalStaked.add(_amount) */\n      tag_287\n        /* \"contracts/Staking.sol\":4202:4209  _amount */\n      dup2\n        /* \"contracts/Staking.sol\":4186:4197  totalStaked */\n      sload(0x0b)\n        /* \"contracts/Staking.sol\":4186:4201  totalStaked.add */\n      tag_132\n      swap1\n        /* \"contracts/Staking.sol\":4186:4210  totalStaked.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_287:\n        /* \"contracts/Staking.sol\":4172:4183  totalStaked */\n      0x0b\n        /* \"contracts/Staking.sol\":4172:4210  totalStaked = totalStaked.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":4236:4263  Staked(msg.sender, _amount) */\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"contracts/Staking.sol\":4243:4253  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":4255:4262  _amount */\n      dup3\n        /* \"contracts/Staking.sol\":4236:4263  Staked(msg.sender, _amount) */\n      mload(0x40)\n      tag_288\n      swap3\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Staking.sol\":3689:4271  function stake(uint256 _amount) public{\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":4493:4627  function getStakerMode(address _address) public view returns (uint256) {\r... */\n    tag_86:\n        /* \"contracts/Staking.sol\":4555:4562  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":4610:4611  0 */\n      dup1\n        /* \"contracts/Staking.sol\":4584:4591  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":4584:4601  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":4592:4600  _address */\n      dup5\n        /* \"contracts/Staking.sol\":4584:4601  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4584:4606  _staker[_address].mode */\n      0x02\n      add\n      sload\n        /* \"contracts/Staking.sol\":4584:4611  _staker[_address].mode == 0 */\n      eq\n        /* \"contracts/Staking.sol\":4584:4619  _staker[_address].mode == 0 ? 0 : 1 */\n      tag_290\n      jumpi\n        /* \"contracts/Staking.sol\":4618:4619  1 */\n      0x01\n        /* \"contracts/Staking.sol\":4584:4619  _staker[_address].mode == 0 ? 0 : 1 */\n      jump(tag_291)\n    tag_290:\n        /* \"contracts/Staking.sol\":4614:4615  0 */\n      0x00\n        /* \"contracts/Staking.sol\":4584:4619  _staker[_address].mode == 0 ? 0 : 1 */\n    tag_291:\n        /* \"contracts/Staking.sol\":4577:4619  return _staker[_address].mode == 0 ? 0 : 1 */\n      0xff\n      and\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4493:4627  function getStakerMode(address _address) public view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_293\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_294\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_295\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap1\n      tag_186\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_295:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_298\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_299\n      swap1\n      tag_300\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_298:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_301\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_247\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_301:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":5181:5317  function stakedAmount(address _address) public view returns (uint256) {\r... */\n    tag_93:\n        /* \"contracts/Staking.sol\":5242:5249  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":5279:5286  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":5279:5296  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":5287:5295  _address */\n      dup4\n        /* \"contracts/Staking.sol\":5279:5296  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":5279:5309  _staker[_address].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":5272:5309  return _staker[_address].stakedAmount */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":5181:5317  function stakedAmount(address _address) public view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":1202:1221  IBEP20 public token */\n    tag_96:\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":4635:4759  function isStartStaking(address _address) public view returns (uint256) {\r... */\n    tag_101:\n        /* \"contracts/Staking.sol\":4698:4705  uint256 */\n      0x00\n        /* \"contracts/Staking.sol\":4727:4734  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":4727:4744  _staker[_address] */\n      0x00\n        /* \"contracts/Staking.sol\":4735:4743  _address */\n      dup4\n        /* \"contracts/Staking.sol\":4727:4744  _staker[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":4727:4751  _staker[_address].staked */\n      0x05\n      add\n      sload\n        /* \"contracts/Staking.sol\":4720:4751  return _staker[_address].staked */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":4635:4759  function isStartStaking(address _address) public view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":2273:2730  function updateReward() private{\r... */\n    tag_112:\n        /* \"contracts/Staking.sol\":2325:2351  uint256 stakerStakedAmount */\n      0x00\n        /* \"contracts/Staking.sol\":2354:2361  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":2354:2373  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2362:2372  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2354:2373  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2354:2386  _staker[msg.sender].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"contracts/Staking.sol\":2325:2386  uint256 stakerStakedAmount = _staker[msg.sender].stakedAmount */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2407:2424  uint256 newReward */\n      0x00\n        /* \"contracts/Staking.sol\":2427:2547  stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div(1e4) */\n      tag_305\n        /* \"contracts/Staking.sol\":2543:2546  1e4 */\n      0x2710\n        /* \"contracts/Staking.sol\":2427:2538  stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)).mul(_rewardRate) */\n      tag_306\n        /* \"contracts/Staking.sol\":2526:2537  _rewardRate */\n      sload(0x03)\n        /* \"contracts/Staking.sol\":2427:2521  stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)) */\n      tag_307\n        /* \"contracts/Staking.sol\":2450:2520  block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640) */\n      tag_308\n        /* \"contracts/Staking.sol\":2515:2519  8640 */\n      0x21c0\n        /* \"contracts/Staking.sol\":2450:2510  block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber) */\n      tag_309\n        /* \"contracts/Staking.sol\":2467:2474  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":2467:2486  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2475:2485  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2467:2486  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2467:2509  _staker[msg.sender].lastUpdatedBlockNumber */\n      0x04\n      add\n      sload\n        /* \"contracts/Staking.sol\":2450:2462  block.number */\n      number\n        /* \"contracts/Staking.sol\":2450:2466  block.number.sub */\n      tag_128\n      swap1\n        /* \"contracts/Staking.sol\":2450:2510  block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_309:\n        /* \"contracts/Staking.sol\":2450:2514  block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div */\n      tag_129\n      swap1\n        /* \"contracts/Staking.sol\":2450:2520  block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_308:\n        /* \"contracts/Staking.sol\":2427:2445  stakerStakedAmount */\n      dup8\n        /* \"contracts/Staking.sol\":2427:2449  stakerStakedAmount.mul */\n      tag_141\n      swap1\n        /* \"contracts/Staking.sol\":2427:2521  stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_307:\n        /* \"contracts/Staking.sol\":2427:2525  stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)).mul */\n      tag_141\n      swap1\n        /* \"contracts/Staking.sol\":2427:2538  stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)).mul(_rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_306:\n        /* \"contracts/Staking.sol\":2427:2542  stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div */\n      tag_129\n      swap1\n        /* \"contracts/Staking.sol\":2427:2547  stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div(1e4) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_305:\n        /* \"contracts/Staking.sol\":2407:2547  uint256 newReward = stakerStakedAmount.mul(block.number.sub(_staker[msg.sender].lastUpdatedBlockNumber).div(8640)).mul(_rewardRate).div(1e4) */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":2600:2654  _staker[msg.sender].stakerCurrentReward.add(newReward) */\n      tag_310\n        /* \"contracts/Staking.sol\":2644:2653  newReward */\n      dup2\n        /* \"contracts/Staking.sol\":2600:2607  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":2600:2619  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2608:2618  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2600:2619  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2600:2639  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n      sload\n        /* \"contracts/Staking.sol\":2600:2643  _staker[msg.sender].stakerCurrentReward.add */\n      tag_132\n      swap1\n        /* \"contracts/Staking.sol\":2600:2654  _staker[msg.sender].stakerCurrentReward.add(newReward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_310:\n        /* \"contracts/Staking.sol\":2558:2565  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":2558:2577  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2566:2576  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2558:2577  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2558:2597  _staker[msg.sender].stakerCurrentReward */\n      0x00\n      add\n        /* \"contracts/Staking.sol\":2558:2654  _staker[msg.sender].stakerCurrentReward = _staker[msg.sender].stakerCurrentReward.add(newReward) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2710:2722  block.number */\n      number\n        /* \"contracts/Staking.sol\":2665:2672  _staker */\n      0x0a\n        /* \"contracts/Staking.sol\":2665:2684  _staker[msg.sender] */\n      0x00\n        /* \"contracts/Staking.sol\":2673:2683  msg.sender */\n      caller\n        /* \"contracts/Staking.sol\":2665:2684  _staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Staking.sol\":2665:2707  _staker[msg.sender].lastUpdatedBlockNumber */\n      0x04\n      add\n        /* \"contracts/Staking.sol\":2665:2722  _staker[msg.sender].lastUpdatedBlockNumber = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Staking.sol\":2304:2730  {\r... */\n      pop\n      pop\n        /* \"contracts/Staking.sol\":2273:2730  function updateReward() private{\r... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3166:3173  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3196:3197  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3193  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_312\n      swap2\n      swap1\n      tag_313\n      jump\t// in\n    tag_312:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3185:3197  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3924:3925  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3921  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_315\n      swap2\n      swap1\n      tag_316\n      jump\t// in\n    tag_315:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3913:3925  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2799:2806  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2829:2830  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2826  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_318\n      swap2\n      swap1\n      tag_319\n      jump\t// in\n    tag_318:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2818:2830  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3509:3516  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3539:3540  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3536  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_321\n      swap2\n      swap1\n      tag_322\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3528:3540  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":290:467  function safeTransfer(IBEP20 token, address to, uint256 value) internal {\r... */\n    tag_145:\n        /* \"contracts/SafeBEP20.sol\":373:459  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_324\n        /* \"contracts/SafeBEP20.sol\":393:398  token */\n      dup4\n        /* \"contracts/SafeBEP20.sol\":423:446  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/SafeBEP20.sol\":448:450  to */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":452:457  value */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":400:458  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_325\n      swap3\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_325:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SafeBEP20.sol\":373:392  _callOptionalReturn */\n      tag_326\n        /* \"contracts/SafeBEP20.sol\":373:459  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_324:\n        /* \"contracts/SafeBEP20.sol\":290:467  function safeTransfer(IBEP20 token, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":475:680  function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\r... */\n    tag_285:\n        /* \"contracts/SafeBEP20.sol\":576:672  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_330\n        /* \"contracts/SafeBEP20.sol\":596:601  token */\n      dup5\n        /* \"contracts/SafeBEP20.sol\":626:653  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/SafeBEP20.sol\":655:659  from */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":661:663  to */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":665:670  value */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":603:671  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_331\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_332\n      jump\t// in\n    tag_331:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SafeBEP20.sol\":576:595  _callOptionalReturn */\n      tag_326\n        /* \"contracts/SafeBEP20.sol\":576:672  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_330:\n        /* \"contracts/SafeBEP20.sol\":475:680  function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SafeBEP20.sol\":2599:3368  function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r... */\n    tag_326:\n        /* \"contracts/SafeBEP20.sol\":3031:3054  bytes memory returndata */\n      0x00\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      tag_334\n        /* \"contracts/SafeBEP20.sol\":3085:3089  data */\n      dup3\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"contracts/SafeBEP20.sol\":3065:3070  token */\n      dup6\n        /* \"contracts/SafeBEP20.sol\":3057:3084  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_335\n      swap1\n        /* \"contracts/SafeBEP20.sol\":3057:3126  address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_334:\n        /* \"contracts/SafeBEP20.sol\":3031:3126  bytes memory returndata = address(token).functionCall(data, \"SafeBEP20: low-level call failed\") */\n      swap1\n      pop\n        /* \"contracts/SafeBEP20.sol\":3161:3162  0 */\n      0x00\n        /* \"contracts/SafeBEP20.sol\":3141:3151  returndata */\n      dup2\n        /* \"contracts/SafeBEP20.sol\":3141:3158  returndata.length */\n      mload\n        /* \"contracts/SafeBEP20.sol\":3141:3162  returndata.length > 0 */\n      gt\n        /* \"contracts/SafeBEP20.sol\":3137:3361  if (returndata.length > 0) { // Return data is optional\r... */\n      iszero\n      tag_336\n      jumpi\n        /* \"contracts/SafeBEP20.sol\":3283:3293  returndata */\n      dup1\n        /* \"contracts/SafeBEP20.sol\":3272:3302  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_337\n      swap2\n      swap1\n      tag_338\n      jump\t// in\n    tag_337:\n        /* \"contracts/SafeBEP20.sol\":3264:3349  require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\") */\n      tag_339\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_340\n      swap1\n      tag_341\n      jump\t// in\n    tag_340:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_339:\n        /* \"contracts/SafeBEP20.sol\":3137:3361  if (returndata.length > 0) { // Return data is optional\r... */\n    tag_336:\n        /* \"contracts/SafeBEP20.sol\":2669:3368  {\r... */\n      pop\n        /* \"contracts/SafeBEP20.sol\":2599:3368  function _callOptionalReturn(IBEP20 token, bytes memory data) private {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n    tag_335:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3994:4006  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_343\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4047:4053  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4055:4059  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4061:4062  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4064:4076  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4046  functionCallWithValue */\n      tag_344\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4025:4077  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_343:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4018:4077  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3861:4084  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n    tag_344:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5113:5125  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5170:5175  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5166  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5145:5175  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5137:5218  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_346\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_347\n      swap1\n      tag_348\n      jump\t// in\n    tag_347:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_346:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      tag_349\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5247:5253  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5246  isContract */\n      tag_350\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5236:5254  isContract(target) */\n      jump\t// in\n    tag_349:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5228:5288  require(isContract(target), \"Address: call to non-contract\") */\n      tag_351\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_352\n      swap1\n      tag_353\n      jump\t// in\n    tag_352:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_351:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5300:5312  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5314:5337  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5347  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5352  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5360:5365  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5367:5371  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5341:5372  target.call{value: value}(data) */\n      mload(0x40)\n      tag_354\n      swap2\n      swap1\n      tag_355\n      jump\t// in\n    tag_354:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_358\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_357)\n    tag_358:\n      0x60\n      swap2\n      pop\n    tag_357:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5299:5372  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      tag_359\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5406:5413  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5415:5425  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5427:5439  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5405  verifyCallResult */\n      tag_360\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5389:5440  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_359:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5382:5440  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4948:5447  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_350:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_360:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7707:7719  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7735:7742  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n      iszero\n      tag_363\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7765:7775  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7758:7775  return returndata */\n      swap1\n      pop\n      jump(tag_362)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7731:8247  if (success) {... */\n    tag_363:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7886  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7893  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7876:7897  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n      iszero\n      tag_365\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8070:8080  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8081  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8130:8145  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8117:8127  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8115  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8109:8128  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8102:8146  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7872:8237  if (returndata.length > 0) {... */\n    tag_365:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8209:8221  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8202:8222  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_367\n      swap2\n      swap1\n      tag_368\n      jump\t// in\n    tag_367:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7561:8253  function verifyCallResult(... */\n    tag_362:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_370:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_372\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_373\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_374:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_376\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_377\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_378:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_380\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_381\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:583   */\n    tag_382:\n        /* \"#utility.yul\":497:502   */\n      0x00\n        /* \"#utility.yul\":528:534   */\n      dup2\n        /* \"#utility.yul\":522:535   */\n      mload\n        /* \"#utility.yul\":513:535   */\n      swap1\n      pop\n        /* \"#utility.yul\":544:577   */\n      tag_384\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":544:577   */\n      tag_381\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":440:583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:918   */\n    tag_40:\n        /* \"#utility.yul\":648:654   */\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:784   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":703:782   */\n      tag_387\n      tag_388\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":665:784   */\n    tag_386:\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":848:901   */\n      tag_389\n        /* \"#utility.yul\":893:900   */\n      dup5\n        /* \"#utility.yul\":884:890   */\n      dup3\n        /* \"#utility.yul\":873:882   */\n      dup6\n        /* \"#utility.yul\":869:891   */\n      add\n        /* \"#utility.yul\":848:901   */\n      tag_370\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":838:901   */\n      swap2\n      pop\n        /* \"#utility.yul\":794:911   */\n      pop\n        /* \"#utility.yul\":589:918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1269   */\n    tag_338:\n        /* \"#utility.yul\":991:997   */\n      0x00\n        /* \"#utility.yul\":1040:1042   */\n      0x20\n        /* \"#utility.yul\":1028:1037   */\n      dup3\n        /* \"#utility.yul\":1019:1026   */\n      dup5\n        /* \"#utility.yul\":1015:1038   */\n      sub\n        /* \"#utility.yul\":1011:1043   */\n      slt\n        /* \"#utility.yul\":1008:1127   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":1046:1125   */\n      tag_392\n      tag_388\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":1008:1127   */\n    tag_391:\n        /* \"#utility.yul\":1166:1167   */\n      0x00\n        /* \"#utility.yul\":1191:1252   */\n      tag_393\n        /* \"#utility.yul\":1244:1251   */\n      dup5\n        /* \"#utility.yul\":1235:1241   */\n      dup3\n        /* \"#utility.yul\":1224:1233   */\n      dup6\n        /* \"#utility.yul\":1220:1242   */\n      add\n        /* \"#utility.yul\":1191:1252   */\n      tag_374\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":1181:1252   */\n      swap2\n      pop\n        /* \"#utility.yul\":1137:1262   */\n      pop\n        /* \"#utility.yul\":924:1269   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1275:1604   */\n    tag_34:\n        /* \"#utility.yul\":1334:1340   */\n      0x00\n        /* \"#utility.yul\":1383:1385   */\n      0x20\n        /* \"#utility.yul\":1371:1380   */\n      dup3\n        /* \"#utility.yul\":1362:1369   */\n      dup5\n        /* \"#utility.yul\":1358:1381   */\n      sub\n        /* \"#utility.yul\":1354:1386   */\n      slt\n        /* \"#utility.yul\":1351:1470   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":1389:1468   */\n      tag_396\n      tag_388\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":1351:1470   */\n    tag_395:\n        /* \"#utility.yul\":1509:1510   */\n      0x00\n        /* \"#utility.yul\":1534:1587   */\n      tag_397\n        /* \"#utility.yul\":1579:1586   */\n      dup5\n        /* \"#utility.yul\":1570:1576   */\n      dup3\n        /* \"#utility.yul\":1559:1568   */\n      dup6\n        /* \"#utility.yul\":1555:1577   */\n      add\n        /* \"#utility.yul\":1534:1587   */\n      tag_378\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":1524:1587   */\n      swap2\n      pop\n        /* \"#utility.yul\":1480:1597   */\n      pop\n        /* \"#utility.yul\":1275:1604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1961   */\n    tag_118:\n        /* \"#utility.yul\":1680:1686   */\n      0x00\n        /* \"#utility.yul\":1729:1731   */\n      0x20\n        /* \"#utility.yul\":1717:1726   */\n      dup3\n        /* \"#utility.yul\":1708:1715   */\n      dup5\n        /* \"#utility.yul\":1704:1727   */\n      sub\n        /* \"#utility.yul\":1700:1732   */\n      slt\n        /* \"#utility.yul\":1697:1816   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":1735:1814   */\n      tag_400\n      tag_388\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":1697:1816   */\n    tag_399:\n        /* \"#utility.yul\":1855:1856   */\n      0x00\n        /* \"#utility.yul\":1880:1944   */\n      tag_401\n        /* \"#utility.yul\":1936:1943   */\n      dup5\n        /* \"#utility.yul\":1927:1933   */\n      dup3\n        /* \"#utility.yul\":1916:1925   */\n      dup6\n        /* \"#utility.yul\":1912:1934   */\n      add\n        /* \"#utility.yul\":1880:1944   */\n      tag_382\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":1870:1944   */\n      swap2\n      pop\n        /* \"#utility.yul\":1826:1954   */\n      pop\n        /* \"#utility.yul\":1610:1961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1967:2441   */\n    tag_48:\n        /* \"#utility.yul\":2035:2041   */\n      0x00\n        /* \"#utility.yul\":2043:2049   */\n      dup1\n        /* \"#utility.yul\":2092:2094   */\n      0x40\n        /* \"#utility.yul\":2080:2089   */\n      dup4\n        /* \"#utility.yul\":2071:2078   */\n      dup6\n        /* \"#utility.yul\":2067:2090   */\n      sub\n        /* \"#utility.yul\":2063:2095   */\n      slt\n        /* \"#utility.yul\":2060:2179   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":2098:2177   */\n      tag_404\n      tag_388\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":2060:2179   */\n    tag_403:\n        /* \"#utility.yul\":2218:2219   */\n      0x00\n        /* \"#utility.yul\":2243:2296   */\n      tag_405\n        /* \"#utility.yul\":2288:2295   */\n      dup6\n        /* \"#utility.yul\":2279:2285   */\n      dup3\n        /* \"#utility.yul\":2268:2277   */\n      dup7\n        /* \"#utility.yul\":2264:2286   */\n      add\n        /* \"#utility.yul\":2243:2296   */\n      tag_378\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":2233:2296   */\n      swap3\n      pop\n        /* \"#utility.yul\":2189:2306   */\n      pop\n        /* \"#utility.yul\":2345:2347   */\n      0x20\n        /* \"#utility.yul\":2371:2424   */\n      tag_406\n        /* \"#utility.yul\":2416:2423   */\n      dup6\n        /* \"#utility.yul\":2407:2413   */\n      dup3\n        /* \"#utility.yul\":2396:2405   */\n      dup7\n        /* \"#utility.yul\":2392:2414   */\n      add\n        /* \"#utility.yul\":2371:2424   */\n      tag_378\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":2361:2424   */\n      swap2\n      pop\n        /* \"#utility.yul\":2316:2434   */\n      pop\n        /* \"#utility.yul\":1967:2441   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2447:2565   */\n    tag_407:\n        /* \"#utility.yul\":2534:2558   */\n      tag_409\n        /* \"#utility.yul\":2552:2557   */\n      dup2\n        /* \"#utility.yul\":2534:2558   */\n      tag_410\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":2529:2532   */\n      dup3\n        /* \"#utility.yul\":2522:2559   */\n      mstore\n        /* \"#utility.yul\":2447:2565   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:2944   */\n    tag_411:\n        /* \"#utility.yul\":2675:2678   */\n      0x00\n        /* \"#utility.yul\":2703:2741   */\n      tag_413\n        /* \"#utility.yul\":2735:2740   */\n      dup3\n        /* \"#utility.yul\":2703:2741   */\n      tag_414\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":2757:2845   */\n      tag_415\n        /* \"#utility.yul\":2838:2844   */\n      dup2\n        /* \"#utility.yul\":2833:2836   */\n      dup6\n        /* \"#utility.yul\":2757:2845   */\n      tag_416\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":2750:2845   */\n      swap4\n      pop\n        /* \"#utility.yul\":2854:2906   */\n      tag_417\n        /* \"#utility.yul\":2899:2905   */\n      dup2\n        /* \"#utility.yul\":2894:2897   */\n      dup6\n        /* \"#utility.yul\":2887:2891   */\n      0x20\n        /* \"#utility.yul\":2880:2885   */\n      dup7\n        /* \"#utility.yul\":2876:2892   */\n      add\n        /* \"#utility.yul\":2854:2906   */\n      tag_418\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":2931:2937   */\n      dup1\n        /* \"#utility.yul\":2926:2929   */\n      dup5\n        /* \"#utility.yul\":2922:2938   */\n      add\n        /* \"#utility.yul\":2915:2938   */\n      swap2\n      pop\n        /* \"#utility.yul\":2679:2944   */\n      pop\n        /* \"#utility.yul\":2571:2944   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2950:3109   */\n    tag_419:\n        /* \"#utility.yul\":3051:3102   */\n      tag_421\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3051:3102   */\n      tag_422\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":3046:3049   */\n      dup3\n        /* \"#utility.yul\":3039:3103   */\n      mstore\n        /* \"#utility.yul\":2950:3109   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3479   */\n    tag_423:\n        /* \"#utility.yul\":3203:3206   */\n      0x00\n        /* \"#utility.yul\":3231:3270   */\n      tag_425\n        /* \"#utility.yul\":3264:3269   */\n      dup3\n        /* \"#utility.yul\":3231:3270   */\n      tag_426\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":3286:3357   */\n      tag_427\n        /* \"#utility.yul\":3350:3356   */\n      dup2\n        /* \"#utility.yul\":3345:3348   */\n      dup6\n        /* \"#utility.yul\":3286:3357   */\n      tag_428\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":3279:3357   */\n      swap4\n      pop\n        /* \"#utility.yul\":3366:3418   */\n      tag_429\n        /* \"#utility.yul\":3411:3417   */\n      dup2\n        /* \"#utility.yul\":3406:3409   */\n      dup6\n        /* \"#utility.yul\":3399:3403   */\n      0x20\n        /* \"#utility.yul\":3392:3397   */\n      dup7\n        /* \"#utility.yul\":3388:3404   */\n      add\n        /* \"#utility.yul\":3366:3418   */\n      tag_418\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":3443:3472   */\n      tag_430\n        /* \"#utility.yul\":3465:3471   */\n      dup2\n        /* \"#utility.yul\":3443:3472   */\n      tag_431\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":3438:3441   */\n      dup5\n        /* \"#utility.yul\":3434:3473   */\n      add\n        /* \"#utility.yul\":3427:3473   */\n      swap2\n      pop\n        /* \"#utility.yul\":3207:3479   */\n      pop\n        /* \"#utility.yul\":3115:3479   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3485:3851   */\n    tag_432:\n        /* \"#utility.yul\":3627:3630   */\n      0x00\n        /* \"#utility.yul\":3648:3715   */\n      tag_434\n        /* \"#utility.yul\":3712:3714   */\n      0x0c\n        /* \"#utility.yul\":3707:3710   */\n      dup4\n        /* \"#utility.yul\":3648:3715   */\n      tag_428\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":3641:3715   */\n      swap2\n      pop\n        /* \"#utility.yul\":3724:3817   */\n      tag_435\n        /* \"#utility.yul\":3813:3816   */\n      dup3\n        /* \"#utility.yul\":3724:3817   */\n      tag_436\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":3842:3844   */\n      0x20\n        /* \"#utility.yul\":3837:3840   */\n      dup3\n        /* \"#utility.yul\":3833:3845   */\n      add\n        /* \"#utility.yul\":3826:3845   */\n      swap1\n      pop\n        /* \"#utility.yul\":3485:3851   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3857:4223   */\n    tag_437:\n        /* \"#utility.yul\":3999:4002   */\n      0x00\n        /* \"#utility.yul\":4020:4087   */\n      tag_439\n        /* \"#utility.yul\":4084:4086   */\n      0x10\n        /* \"#utility.yul\":4079:4082   */\n      dup4\n        /* \"#utility.yul\":4020:4087   */\n      tag_428\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":4013:4087   */\n      swap2\n      pop\n        /* \"#utility.yul\":4096:4189   */\n      tag_440\n        /* \"#utility.yul\":4185:4188   */\n      dup3\n        /* \"#utility.yul\":4096:4189   */\n      tag_441\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":4214:4216   */\n      0x20\n        /* \"#utility.yul\":4209:4212   */\n      dup3\n        /* \"#utility.yul\":4205:4217   */\n      add\n        /* \"#utility.yul\":4198:4217   */\n      swap1\n      pop\n        /* \"#utility.yul\":3857:4223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4229:4595   */\n    tag_442:\n        /* \"#utility.yul\":4371:4374   */\n      0x00\n        /* \"#utility.yul\":4392:4459   */\n      tag_444\n        /* \"#utility.yul\":4456:4458   */\n      0x15\n        /* \"#utility.yul\":4451:4454   */\n      dup4\n        /* \"#utility.yul\":4392:4459   */\n      tag_428\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":4385:4459   */\n      swap2\n      pop\n        /* \"#utility.yul\":4468:4561   */\n      tag_445\n        /* \"#utility.yul\":4557:4560   */\n      dup3\n        /* \"#utility.yul\":4468:4561   */\n      tag_446\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":4586:4588   */\n      0x20\n        /* \"#utility.yul\":4581:4584   */\n      dup3\n        /* \"#utility.yul\":4577:4589   */\n      add\n        /* \"#utility.yul\":4570:4589   */\n      swap1\n      pop\n        /* \"#utility.yul\":4229:4595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4601:4967   */\n    tag_447:\n        /* \"#utility.yul\":4743:4746   */\n      0x00\n        /* \"#utility.yul\":4764:4831   */\n      tag_449\n        /* \"#utility.yul\":4828:4830   */\n      0x2a\n        /* \"#utility.yul\":4823:4826   */\n      dup4\n        /* \"#utility.yul\":4764:4831   */\n      tag_428\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":4757:4831   */\n      swap2\n      pop\n        /* \"#utility.yul\":4840:4933   */\n      tag_450\n        /* \"#utility.yul\":4929:4932   */\n      dup3\n        /* \"#utility.yul\":4840:4933   */\n      tag_451\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":4958:4960   */\n      0x40\n        /* \"#utility.yul\":4953:4956   */\n      dup3\n        /* \"#utility.yul\":4949:4961   */\n      add\n        /* \"#utility.yul\":4942:4961   */\n      swap1\n      pop\n        /* \"#utility.yul\":4601:4967   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4973:5339   */\n    tag_452:\n        /* \"#utility.yul\":5115:5118   */\n      0x00\n        /* \"#utility.yul\":5136:5203   */\n      tag_454\n        /* \"#utility.yul\":5200:5202   */\n      0x26\n        /* \"#utility.yul\":5195:5198   */\n      dup4\n        /* \"#utility.yul\":5136:5203   */\n      tag_428\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":5129:5203   */\n      swap2\n      pop\n        /* \"#utility.yul\":5212:5305   */\n      tag_455\n        /* \"#utility.yul\":5301:5304   */\n      dup3\n        /* \"#utility.yul\":5212:5305   */\n      tag_456\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":5330:5332   */\n      0x40\n        /* \"#utility.yul\":5325:5328   */\n      dup3\n        /* \"#utility.yul\":5321:5333   */\n      add\n        /* \"#utility.yul\":5314:5333   */\n      swap1\n      pop\n        /* \"#utility.yul\":4973:5339   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5345:5711   */\n    tag_457:\n        /* \"#utility.yul\":5487:5490   */\n      0x00\n        /* \"#utility.yul\":5508:5575   */\n      tag_459\n        /* \"#utility.yul\":5572:5574   */\n      0x0e\n        /* \"#utility.yul\":5567:5570   */\n      dup4\n        /* \"#utility.yul\":5508:5575   */\n      tag_428\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":5501:5575   */\n      swap2\n      pop\n        /* \"#utility.yul\":5584:5677   */\n      tag_460\n        /* \"#utility.yul\":5673:5676   */\n      dup3\n        /* \"#utility.yul\":5584:5677   */\n      tag_461\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":5702:5704   */\n      0x20\n        /* \"#utility.yul\":5697:5700   */\n      dup3\n        /* \"#utility.yul\":5693:5705   */\n      add\n        /* \"#utility.yul\":5686:5705   */\n      swap1\n      pop\n        /* \"#utility.yul\":5345:5711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5717:6083   */\n    tag_462:\n        /* \"#utility.yul\":5859:5862   */\n      0x00\n        /* \"#utility.yul\":5880:5947   */\n      tag_464\n        /* \"#utility.yul\":5944:5946   */\n      0x0f\n        /* \"#utility.yul\":5939:5942   */\n      dup4\n        /* \"#utility.yul\":5880:5947   */\n      tag_428\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":5873:5947   */\n      swap2\n      pop\n        /* \"#utility.yul\":5956:6049   */\n      tag_465\n        /* \"#utility.yul\":6045:6048   */\n      dup3\n        /* \"#utility.yul\":5956:6049   */\n      tag_466\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":6074:6076   */\n      0x20\n        /* \"#utility.yul\":6069:6072   */\n      dup3\n        /* \"#utility.yul\":6065:6077   */\n      add\n        /* \"#utility.yul\":6058:6077   */\n      swap1\n      pop\n        /* \"#utility.yul\":5717:6083   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6089:6455   */\n    tag_467:\n        /* \"#utility.yul\":6231:6234   */\n      0x00\n        /* \"#utility.yul\":6252:6319   */\n      tag_469\n        /* \"#utility.yul\":6316:6318   */\n      0x26\n        /* \"#utility.yul\":6311:6314   */\n      dup4\n        /* \"#utility.yul\":6252:6319   */\n      tag_428\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":6245:6319   */\n      swap2\n      pop\n        /* \"#utility.yul\":6328:6421   */\n      tag_470\n        /* \"#utility.yul\":6417:6420   */\n      dup3\n        /* \"#utility.yul\":6328:6421   */\n      tag_471\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":6446:6448   */\n      0x40\n        /* \"#utility.yul\":6441:6444   */\n      dup3\n        /* \"#utility.yul\":6437:6449   */\n      add\n        /* \"#utility.yul\":6430:6449   */\n      swap1\n      pop\n        /* \"#utility.yul\":6089:6455   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6461:6827   */\n    tag_472:\n        /* \"#utility.yul\":6603:6606   */\n      0x00\n        /* \"#utility.yul\":6624:6691   */\n      tag_474\n        /* \"#utility.yul\":6688:6690   */\n      0x1f\n        /* \"#utility.yul\":6683:6686   */\n      dup4\n        /* \"#utility.yul\":6624:6691   */\n      tag_428\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":6617:6691   */\n      swap2\n      pop\n        /* \"#utility.yul\":6700:6793   */\n      tag_475\n        /* \"#utility.yul\":6789:6792   */\n      dup3\n        /* \"#utility.yul\":6700:6793   */\n      tag_476\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":6818:6820   */\n      0x20\n        /* \"#utility.yul\":6813:6816   */\n      dup3\n        /* \"#utility.yul\":6809:6821   */\n      add\n        /* \"#utility.yul\":6802:6821   */\n      swap1\n      pop\n        /* \"#utility.yul\":6461:6827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6833:7199   */\n    tag_477:\n        /* \"#utility.yul\":6975:6978   */\n      0x00\n        /* \"#utility.yul\":6996:7063   */\n      tag_479\n        /* \"#utility.yul\":7060:7062   */\n      0x20\n        /* \"#utility.yul\":7055:7058   */\n      dup4\n        /* \"#utility.yul\":6996:7063   */\n      tag_428\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":6989:7063   */\n      swap2\n      pop\n        /* \"#utility.yul\":7072:7165   */\n      tag_480\n        /* \"#utility.yul\":7161:7164   */\n      dup3\n        /* \"#utility.yul\":7072:7165   */\n      tag_481\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":7190:7192   */\n      0x20\n        /* \"#utility.yul\":7185:7188   */\n      dup3\n        /* \"#utility.yul\":7181:7193   */\n      add\n        /* \"#utility.yul\":7174:7193   */\n      swap1\n      pop\n        /* \"#utility.yul\":6833:7199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7205:7571   */\n    tag_482:\n        /* \"#utility.yul\":7347:7350   */\n      0x00\n        /* \"#utility.yul\":7368:7435   */\n      tag_484\n        /* \"#utility.yul\":7432:7434   */\n      0x0d\n        /* \"#utility.yul\":7427:7430   */\n      dup4\n        /* \"#utility.yul\":7368:7435   */\n      tag_428\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":7361:7435   */\n      swap2\n      pop\n        /* \"#utility.yul\":7444:7537   */\n      tag_485\n        /* \"#utility.yul\":7533:7536   */\n      dup3\n        /* \"#utility.yul\":7444:7537   */\n      tag_486\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":7562:7564   */\n      0x20\n        /* \"#utility.yul\":7557:7560   */\n      dup3\n        /* \"#utility.yul\":7553:7565   */\n      add\n        /* \"#utility.yul\":7546:7565   */\n      swap1\n      pop\n        /* \"#utility.yul\":7205:7571   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7577:7943   */\n    tag_487:\n        /* \"#utility.yul\":7719:7722   */\n      0x00\n        /* \"#utility.yul\":7740:7807   */\n      tag_489\n        /* \"#utility.yul\":7804:7806   */\n      0x1d\n        /* \"#utility.yul\":7799:7802   */\n      dup4\n        /* \"#utility.yul\":7740:7807   */\n      tag_428\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":7733:7807   */\n      swap2\n      pop\n        /* \"#utility.yul\":7816:7909   */\n      tag_490\n        /* \"#utility.yul\":7905:7908   */\n      dup3\n        /* \"#utility.yul\":7816:7909   */\n      tag_491\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":7934:7936   */\n      0x20\n        /* \"#utility.yul\":7929:7932   */\n      dup3\n        /* \"#utility.yul\":7925:7937   */\n      add\n        /* \"#utility.yul\":7918:7937   */\n      swap1\n      pop\n        /* \"#utility.yul\":7577:7943   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7949:8315   */\n    tag_492:\n        /* \"#utility.yul\":8091:8094   */\n      0x00\n        /* \"#utility.yul\":8112:8179   */\n      tag_494\n        /* \"#utility.yul\":8176:8178   */\n      0x1a\n        /* \"#utility.yul\":8171:8174   */\n      dup4\n        /* \"#utility.yul\":8112:8179   */\n      tag_428\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":8105:8179   */\n      swap2\n      pop\n        /* \"#utility.yul\":8188:8281   */\n      tag_495\n        /* \"#utility.yul\":8277:8280   */\n      dup3\n        /* \"#utility.yul\":8188:8281   */\n      tag_496\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":8306:8308   */\n      0x20\n        /* \"#utility.yul\":8301:8304   */\n      dup3\n        /* \"#utility.yul\":8297:8309   */\n      add\n        /* \"#utility.yul\":8290:8309   */\n      swap1\n      pop\n        /* \"#utility.yul\":7949:8315   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8321:8687   */\n    tag_497:\n        /* \"#utility.yul\":8463:8466   */\n      0x00\n        /* \"#utility.yul\":8484:8551   */\n      tag_499\n        /* \"#utility.yul\":8548:8550   */\n      0x17\n        /* \"#utility.yul\":8543:8546   */\n      dup4\n        /* \"#utility.yul\":8484:8551   */\n      tag_428\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":8477:8551   */\n      swap2\n      pop\n        /* \"#utility.yul\":8560:8653   */\n      tag_500\n        /* \"#utility.yul\":8649:8652   */\n      dup3\n        /* \"#utility.yul\":8560:8653   */\n      tag_501\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":8678:8680   */\n      0x20\n        /* \"#utility.yul\":8673:8676   */\n      dup3\n        /* \"#utility.yul\":8669:8681   */\n      add\n        /* \"#utility.yul\":8662:8681   */\n      swap1\n      pop\n        /* \"#utility.yul\":8321:8687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8693:9059   */\n    tag_502:\n        /* \"#utility.yul\":8835:8838   */\n      0x00\n        /* \"#utility.yul\":8856:8923   */\n      tag_504\n        /* \"#utility.yul\":8920:8922   */\n      0x0d\n        /* \"#utility.yul\":8915:8918   */\n      dup4\n        /* \"#utility.yul\":8856:8923   */\n      tag_428\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":8849:8923   */\n      swap2\n      pop\n        /* \"#utility.yul\":8932:9025   */\n      tag_505\n        /* \"#utility.yul\":9021:9024   */\n      dup3\n        /* \"#utility.yul\":8932:9025   */\n      tag_506\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":9050:9052   */\n      0x20\n        /* \"#utility.yul\":9045:9048   */\n      dup3\n        /* \"#utility.yul\":9041:9053   */\n      add\n        /* \"#utility.yul\":9034:9053   */\n      swap1\n      pop\n        /* \"#utility.yul\":8693:9059   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9065:9431   */\n    tag_507:\n        /* \"#utility.yul\":9207:9210   */\n      0x00\n        /* \"#utility.yul\":9228:9295   */\n      tag_509\n        /* \"#utility.yul\":9292:9294   */\n      0x0c\n        /* \"#utility.yul\":9287:9290   */\n      dup4\n        /* \"#utility.yul\":9228:9295   */\n      tag_428\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":9221:9295   */\n      swap2\n      pop\n        /* \"#utility.yul\":9304:9397   */\n      tag_510\n        /* \"#utility.yul\":9393:9396   */\n      dup3\n        /* \"#utility.yul\":9304:9397   */\n      tag_511\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":9422:9424   */\n      0x20\n        /* \"#utility.yul\":9417:9420   */\n      dup3\n        /* \"#utility.yul\":9413:9425   */\n      add\n        /* \"#utility.yul\":9406:9425   */\n      swap1\n      pop\n        /* \"#utility.yul\":9065:9431   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9437:9803   */\n    tag_512:\n        /* \"#utility.yul\":9579:9582   */\n      0x00\n        /* \"#utility.yul\":9600:9667   */\n      tag_514\n        /* \"#utility.yul\":9664:9666   */\n      0x0d\n        /* \"#utility.yul\":9659:9662   */\n      dup4\n        /* \"#utility.yul\":9600:9667   */\n      tag_428\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":9593:9667   */\n      swap2\n      pop\n        /* \"#utility.yul\":9676:9769   */\n      tag_515\n        /* \"#utility.yul\":9765:9768   */\n      dup3\n        /* \"#utility.yul\":9676:9769   */\n      tag_516\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":9794:9796   */\n      0x20\n        /* \"#utility.yul\":9789:9792   */\n      dup3\n        /* \"#utility.yul\":9785:9797   */\n      add\n        /* \"#utility.yul\":9778:9797   */\n      swap1\n      pop\n        /* \"#utility.yul\":9437:9803   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9809:9927   */\n    tag_517:\n        /* \"#utility.yul\":9896:9920   */\n      tag_519\n        /* \"#utility.yul\":9914:9919   */\n      dup2\n        /* \"#utility.yul\":9896:9920   */\n      tag_520\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":9891:9894   */\n      dup3\n        /* \"#utility.yul\":9884:9921   */\n      mstore\n        /* \"#utility.yul\":9809:9927   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9933:10204   */\n    tag_355:\n        /* \"#utility.yul\":10063:10066   */\n      0x00\n        /* \"#utility.yul\":10085:10178   */\n      tag_522\n        /* \"#utility.yul\":10174:10177   */\n      dup3\n        /* \"#utility.yul\":10165:10171   */\n      dup5\n        /* \"#utility.yul\":10085:10178   */\n      tag_411\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":10078:10178   */\n      swap2\n      pop\n        /* \"#utility.yul\":10195:10198   */\n      dup2\n        /* \"#utility.yul\":10188:10198   */\n      swap1\n      pop\n        /* \"#utility.yul\":9933:10204   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10210:10432   */\n    tag_74:\n        /* \"#utility.yul\":10303:10307   */\n      0x00\n        /* \"#utility.yul\":10341:10343   */\n      0x20\n        /* \"#utility.yul\":10330:10339   */\n      dup3\n        /* \"#utility.yul\":10326:10344   */\n      add\n        /* \"#utility.yul\":10318:10344   */\n      swap1\n      pop\n        /* \"#utility.yul\":10354:10425   */\n      tag_524\n        /* \"#utility.yul\":10422:10423   */\n      0x00\n        /* \"#utility.yul\":10411:10420   */\n      dup4\n        /* \"#utility.yul\":10407:10424   */\n      add\n        /* \"#utility.yul\":10398:10404   */\n      dup5\n        /* \"#utility.yul\":10354:10425   */\n      tag_407\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":10210:10432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10438:10880   */\n    tag_332:\n        /* \"#utility.yul\":10587:10591   */\n      0x00\n        /* \"#utility.yul\":10625:10627   */\n      0x60\n        /* \"#utility.yul\":10614:10623   */\n      dup3\n        /* \"#utility.yul\":10610:10628   */\n      add\n        /* \"#utility.yul\":10602:10628   */\n      swap1\n      pop\n        /* \"#utility.yul\":10638:10709   */\n      tag_526\n        /* \"#utility.yul\":10706:10707   */\n      0x00\n        /* \"#utility.yul\":10695:10704   */\n      dup4\n        /* \"#utility.yul\":10691:10708   */\n      add\n        /* \"#utility.yul\":10682:10688   */\n      dup7\n        /* \"#utility.yul\":10638:10709   */\n      tag_407\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":10719:10791   */\n      tag_527\n        /* \"#utility.yul\":10787:10789   */\n      0x20\n        /* \"#utility.yul\":10776:10785   */\n      dup4\n        /* \"#utility.yul\":10772:10790   */\n      add\n        /* \"#utility.yul\":10763:10769   */\n      dup6\n        /* \"#utility.yul\":10719:10791   */\n      tag_407\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":10801:10873   */\n      tag_528\n        /* \"#utility.yul\":10869:10871   */\n      0x40\n        /* \"#utility.yul\":10858:10867   */\n      dup4\n        /* \"#utility.yul\":10854:10872   */\n      add\n        /* \"#utility.yul\":10845:10851   */\n      dup5\n        /* \"#utility.yul\":10801:10873   */\n      tag_517\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":10438:10880   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10886:11218   */\n    tag_147:\n        /* \"#utility.yul\":11007:11011   */\n      0x00\n        /* \"#utility.yul\":11045:11047   */\n      0x40\n        /* \"#utility.yul\":11034:11043   */\n      dup3\n        /* \"#utility.yul\":11030:11048   */\n      add\n        /* \"#utility.yul\":11022:11048   */\n      swap1\n      pop\n        /* \"#utility.yul\":11058:11129   */\n      tag_530\n        /* \"#utility.yul\":11126:11127   */\n      0x00\n        /* \"#utility.yul\":11115:11124   */\n      dup4\n        /* \"#utility.yul\":11111:11128   */\n      add\n        /* \"#utility.yul\":11102:11108   */\n      dup6\n        /* \"#utility.yul\":11058:11129   */\n      tag_407\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":11139:11211   */\n      tag_531\n        /* \"#utility.yul\":11207:11209   */\n      0x20\n        /* \"#utility.yul\":11196:11205   */\n      dup4\n        /* \"#utility.yul\":11192:11210   */\n      add\n        /* \"#utility.yul\":11183:11189   */\n      dup5\n        /* \"#utility.yul\":11139:11211   */\n      tag_517\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":10886:11218   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11224:11474   */\n    tag_98:\n        /* \"#utility.yul\":11331:11335   */\n      0x00\n        /* \"#utility.yul\":11369:11371   */\n      0x20\n        /* \"#utility.yul\":11358:11367   */\n      dup3\n        /* \"#utility.yul\":11354:11372   */\n      add\n        /* \"#utility.yul\":11346:11372   */\n      swap1\n      pop\n        /* \"#utility.yul\":11382:11467   */\n      tag_533\n        /* \"#utility.yul\":11464:11465   */\n      0x00\n        /* \"#utility.yul\":11453:11462   */\n      dup4\n        /* \"#utility.yul\":11449:11466   */\n      add\n        /* \"#utility.yul\":11440:11446   */\n      dup5\n        /* \"#utility.yul\":11382:11467   */\n      tag_419\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":11224:11474   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11480:11793   */\n    tag_368:\n        /* \"#utility.yul\":11593:11597   */\n      0x00\n        /* \"#utility.yul\":11631:11633   */\n      0x20\n        /* \"#utility.yul\":11620:11629   */\n      dup3\n        /* \"#utility.yul\":11616:11634   */\n      add\n        /* \"#utility.yul\":11608:11634   */\n      swap1\n      pop\n        /* \"#utility.yul\":11680:11689   */\n      dup2\n        /* \"#utility.yul\":11674:11678   */\n      dup2\n        /* \"#utility.yul\":11670:11690   */\n      sub\n        /* \"#utility.yul\":11666:11667   */\n      0x00\n        /* \"#utility.yul\":11655:11664   */\n      dup4\n        /* \"#utility.yul\":11651:11668   */\n      add\n        /* \"#utility.yul\":11644:11691   */\n      mstore\n        /* \"#utility.yul\":11708:11786   */\n      tag_535\n        /* \"#utility.yul\":11781:11785   */\n      dup2\n        /* \"#utility.yul\":11772:11778   */\n      dup5\n        /* \"#utility.yul\":11708:11786   */\n      tag_423\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":11700:11786   */\n      swap1\n      pop\n        /* \"#utility.yul\":11480:11793   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11799:12218   */\n    tag_211:\n        /* \"#utility.yul\":11965:11969   */\n      0x00\n        /* \"#utility.yul\":12003:12005   */\n      0x20\n        /* \"#utility.yul\":11992:12001   */\n      dup3\n        /* \"#utility.yul\":11988:12006   */\n      add\n        /* \"#utility.yul\":11980:12006   */\n      swap1\n      pop\n        /* \"#utility.yul\":12052:12061   */\n      dup2\n        /* \"#utility.yul\":12046:12050   */\n      dup2\n        /* \"#utility.yul\":12042:12062   */\n      sub\n        /* \"#utility.yul\":12038:12039   */\n      0x00\n        /* \"#utility.yul\":12027:12036   */\n      dup4\n        /* \"#utility.yul\":12023:12040   */\n      add\n        /* \"#utility.yul\":12016:12063   */\n      mstore\n        /* \"#utility.yul\":12080:12211   */\n      tag_537\n        /* \"#utility.yul\":12206:12210   */\n      dup2\n        /* \"#utility.yul\":12080:12211   */\n      tag_432\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":12072:12211   */\n      swap1\n      pop\n        /* \"#utility.yul\":11799:12218   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12224:12643   */\n    tag_155:\n        /* \"#utility.yul\":12390:12394   */\n      0x00\n        /* \"#utility.yul\":12428:12430   */\n      0x20\n        /* \"#utility.yul\":12417:12426   */\n      dup3\n        /* \"#utility.yul\":12413:12431   */\n      add\n        /* \"#utility.yul\":12405:12431   */\n      swap1\n      pop\n        /* \"#utility.yul\":12477:12486   */\n      dup2\n        /* \"#utility.yul\":12471:12475   */\n      dup2\n        /* \"#utility.yul\":12467:12487   */\n      sub\n        /* \"#utility.yul\":12463:12464   */\n      0x00\n        /* \"#utility.yul\":12452:12461   */\n      dup4\n        /* \"#utility.yul\":12448:12465   */\n      add\n        /* \"#utility.yul\":12441:12488   */\n      mstore\n        /* \"#utility.yul\":12505:12636   */\n      tag_539\n        /* \"#utility.yul\":12631:12635   */\n      dup2\n        /* \"#utility.yul\":12505:12636   */\n      tag_437\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":12497:12636   */\n      swap1\n      pop\n        /* \"#utility.yul\":12224:12643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12649:13068   */\n    tag_282:\n        /* \"#utility.yul\":12815:12819   */\n      0x00\n        /* \"#utility.yul\":12853:12855   */\n      0x20\n        /* \"#utility.yul\":12842:12851   */\n      dup3\n        /* \"#utility.yul\":12838:12856   */\n      add\n        /* \"#utility.yul\":12830:12856   */\n      swap1\n      pop\n        /* \"#utility.yul\":12902:12911   */\n      dup2\n        /* \"#utility.yul\":12896:12900   */\n      dup2\n        /* \"#utility.yul\":12892:12912   */\n      sub\n        /* \"#utility.yul\":12888:12889   */\n      0x00\n        /* \"#utility.yul\":12877:12886   */\n      dup4\n        /* \"#utility.yul\":12873:12890   */\n      add\n        /* \"#utility.yul\":12866:12913   */\n      mstore\n        /* \"#utility.yul\":12930:13061   */\n      tag_541\n        /* \"#utility.yul\":13056:13060   */\n      dup2\n        /* \"#utility.yul\":12930:13061   */\n      tag_442\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":12922:13061   */\n      swap1\n      pop\n        /* \"#utility.yul\":12649:13068   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13074:13493   */\n    tag_341:\n        /* \"#utility.yul\":13240:13244   */\n      0x00\n        /* \"#utility.yul\":13278:13280   */\n      0x20\n        /* \"#utility.yul\":13267:13276   */\n      dup3\n        /* \"#utility.yul\":13263:13281   */\n      add\n        /* \"#utility.yul\":13255:13281   */\n      swap1\n      pop\n        /* \"#utility.yul\":13327:13336   */\n      dup2\n        /* \"#utility.yul\":13321:13325   */\n      dup2\n        /* \"#utility.yul\":13317:13337   */\n      sub\n        /* \"#utility.yul\":13313:13314   */\n      0x00\n        /* \"#utility.yul\":13302:13311   */\n      dup4\n        /* \"#utility.yul\":13298:13315   */\n      add\n        /* \"#utility.yul\":13291:13338   */\n      mstore\n        /* \"#utility.yul\":13355:13486   */\n      tag_543\n        /* \"#utility.yul\":13481:13485   */\n      dup2\n        /* \"#utility.yul\":13355:13486   */\n      tag_447\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":13347:13486   */\n      swap1\n      pop\n        /* \"#utility.yul\":13074:13493   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13499:13918   */\n    tag_300:\n        /* \"#utility.yul\":13665:13669   */\n      0x00\n        /* \"#utility.yul\":13703:13705   */\n      0x20\n        /* \"#utility.yul\":13692:13701   */\n      dup3\n        /* \"#utility.yul\":13688:13706   */\n      add\n        /* \"#utility.yul\":13680:13706   */\n      swap1\n      pop\n        /* \"#utility.yul\":13752:13761   */\n      dup2\n        /* \"#utility.yul\":13746:13750   */\n      dup2\n        /* \"#utility.yul\":13742:13762   */\n      sub\n        /* \"#utility.yul\":13738:13739   */\n      0x00\n        /* \"#utility.yul\":13727:13736   */\n      dup4\n        /* \"#utility.yul\":13723:13740   */\n      add\n        /* \"#utility.yul\":13716:13763   */\n      mstore\n        /* \"#utility.yul\":13780:13911   */\n      tag_545\n        /* \"#utility.yul\":13906:13910   */\n      dup2\n        /* \"#utility.yul\":13780:13911   */\n      tag_452\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":13772:13911   */\n      swap1\n      pop\n        /* \"#utility.yul\":13499:13918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13924:14343   */\n    tag_110:\n        /* \"#utility.yul\":14090:14094   */\n      0x00\n        /* \"#utility.yul\":14128:14130   */\n      0x20\n        /* \"#utility.yul\":14117:14126   */\n      dup3\n        /* \"#utility.yul\":14113:14131   */\n      add\n        /* \"#utility.yul\":14105:14131   */\n      swap1\n      pop\n        /* \"#utility.yul\":14177:14186   */\n      dup2\n        /* \"#utility.yul\":14171:14175   */\n      dup2\n        /* \"#utility.yul\":14167:14187   */\n      sub\n        /* \"#utility.yul\":14163:14164   */\n      0x00\n        /* \"#utility.yul\":14152:14161   */\n      dup4\n        /* \"#utility.yul\":14148:14165   */\n      add\n        /* \"#utility.yul\":14141:14188   */\n      mstore\n        /* \"#utility.yul\":14205:14336   */\n      tag_547\n        /* \"#utility.yul\":14331:14335   */\n      dup2\n        /* \"#utility.yul\":14205:14336   */\n      tag_457\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":14197:14336   */\n      swap1\n      pop\n        /* \"#utility.yul\":13924:14343   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14349:14768   */\n    tag_204:\n        /* \"#utility.yul\":14515:14519   */\n      0x00\n        /* \"#utility.yul\":14553:14555   */\n      0x20\n        /* \"#utility.yul\":14542:14551   */\n      dup3\n        /* \"#utility.yul\":14538:14556   */\n      add\n        /* \"#utility.yul\":14530:14556   */\n      swap1\n      pop\n        /* \"#utility.yul\":14602:14611   */\n      dup2\n        /* \"#utility.yul\":14596:14600   */\n      dup2\n        /* \"#utility.yul\":14592:14612   */\n      sub\n        /* \"#utility.yul\":14588:14589   */\n      0x00\n        /* \"#utility.yul\":14577:14586   */\n      dup4\n        /* \"#utility.yul\":14573:14590   */\n      add\n        /* \"#utility.yul\":14566:14613   */\n      mstore\n        /* \"#utility.yul\":14630:14761   */\n      tag_549\n        /* \"#utility.yul\":14756:14760   */\n      dup2\n        /* \"#utility.yul\":14630:14761   */\n      tag_462\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":14622:14761   */\n      swap1\n      pop\n        /* \"#utility.yul\":14349:14768   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14774:15193   */\n    tag_348:\n        /* \"#utility.yul\":14940:14944   */\n      0x00\n        /* \"#utility.yul\":14978:14980   */\n      0x20\n        /* \"#utility.yul\":14967:14976   */\n      dup3\n        /* \"#utility.yul\":14963:14981   */\n      add\n        /* \"#utility.yul\":14955:14981   */\n      swap1\n      pop\n        /* \"#utility.yul\":15027:15036   */\n      dup2\n        /* \"#utility.yul\":15021:15025   */\n      dup2\n        /* \"#utility.yul\":15017:15037   */\n      sub\n        /* \"#utility.yul\":15013:15014   */\n      0x00\n        /* \"#utility.yul\":15002:15011   */\n      dup4\n        /* \"#utility.yul\":14998:15015   */\n      add\n        /* \"#utility.yul\":14991:15038   */\n      mstore\n        /* \"#utility.yul\":15055:15186   */\n      tag_551\n        /* \"#utility.yul\":15181:15185   */\n      dup2\n        /* \"#utility.yul\":15055:15186   */\n      tag_467\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":15047:15186   */\n      swap1\n      pop\n        /* \"#utility.yul\":14774:15193   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15199:15618   */\n    tag_107:\n        /* \"#utility.yul\":15365:15369   */\n      0x00\n        /* \"#utility.yul\":15403:15405   */\n      0x20\n        /* \"#utility.yul\":15392:15401   */\n      dup3\n        /* \"#utility.yul\":15388:15406   */\n      add\n        /* \"#utility.yul\":15380:15406   */\n      swap1\n      pop\n        /* \"#utility.yul\":15452:15461   */\n      dup2\n        /* \"#utility.yul\":15446:15450   */\n      dup2\n        /* \"#utility.yul\":15442:15462   */\n      sub\n        /* \"#utility.yul\":15438:15439   */\n      0x00\n        /* \"#utility.yul\":15427:15436   */\n      dup4\n        /* \"#utility.yul\":15423:15440   */\n      add\n        /* \"#utility.yul\":15416:15463   */\n      mstore\n        /* \"#utility.yul\":15480:15611   */\n      tag_553\n        /* \"#utility.yul\":15606:15610   */\n      dup2\n        /* \"#utility.yul\":15480:15611   */\n      tag_472\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":15472:15611   */\n      swap1\n      pop\n        /* \"#utility.yul\":15199:15618   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15624:16043   */\n    tag_186:\n        /* \"#utility.yul\":15790:15794   */\n      0x00\n        /* \"#utility.yul\":15828:15830   */\n      0x20\n        /* \"#utility.yul\":15817:15826   */\n      dup3\n        /* \"#utility.yul\":15813:15831   */\n      add\n        /* \"#utility.yul\":15805:15831   */\n      swap1\n      pop\n        /* \"#utility.yul\":15877:15886   */\n      dup2\n        /* \"#utility.yul\":15871:15875   */\n      dup2\n        /* \"#utility.yul\":15867:15887   */\n      sub\n        /* \"#utility.yul\":15863:15864   */\n      0x00\n        /* \"#utility.yul\":15852:15861   */\n      dup4\n        /* \"#utility.yul\":15848:15865   */\n      add\n        /* \"#utility.yul\":15841:15888   */\n      mstore\n        /* \"#utility.yul\":15905:16036   */\n      tag_555\n        /* \"#utility.yul\":16031:16035   */\n      dup2\n        /* \"#utility.yul\":15905:16036   */\n      tag_477\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":15897:16036   */\n      swap1\n      pop\n        /* \"#utility.yul\":15624:16043   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16049:16468   */\n    tag_268:\n        /* \"#utility.yul\":16215:16219   */\n      0x00\n        /* \"#utility.yul\":16253:16255   */\n      0x20\n        /* \"#utility.yul\":16242:16251   */\n      dup3\n        /* \"#utility.yul\":16238:16256   */\n      add\n        /* \"#utility.yul\":16230:16256   */\n      swap1\n      pop\n        /* \"#utility.yul\":16302:16311   */\n      dup2\n        /* \"#utility.yul\":16296:16300   */\n      dup2\n        /* \"#utility.yul\":16292:16312   */\n      sub\n        /* \"#utility.yul\":16288:16289   */\n      0x00\n        /* \"#utility.yul\":16277:16286   */\n      dup4\n        /* \"#utility.yul\":16273:16290   */\n      add\n        /* \"#utility.yul\":16266:16313   */\n      mstore\n        /* \"#utility.yul\":16330:16461   */\n      tag_557\n        /* \"#utility.yul\":16456:16460   */\n      dup2\n        /* \"#utility.yul\":16330:16461   */\n      tag_482\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":16322:16461   */\n      swap1\n      pop\n        /* \"#utility.yul\":16049:16468   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16474:16893   */\n    tag_353:\n        /* \"#utility.yul\":16640:16644   */\n      0x00\n        /* \"#utility.yul\":16678:16680   */\n      0x20\n        /* \"#utility.yul\":16667:16676   */\n      dup3\n        /* \"#utility.yul\":16663:16681   */\n      add\n        /* \"#utility.yul\":16655:16681   */\n      swap1\n      pop\n        /* \"#utility.yul\":16727:16736   */\n      dup2\n        /* \"#utility.yul\":16721:16725   */\n      dup2\n        /* \"#utility.yul\":16717:16737   */\n      sub\n        /* \"#utility.yul\":16713:16714   */\n      0x00\n        /* \"#utility.yul\":16702:16711   */\n      dup4\n        /* \"#utility.yul\":16698:16715   */\n      add\n        /* \"#utility.yul\":16691:16738   */\n      mstore\n        /* \"#utility.yul\":16755:16886   */\n      tag_559\n        /* \"#utility.yul\":16881:16885   */\n      dup2\n        /* \"#utility.yul\":16755:16886   */\n      tag_487\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":16747:16886   */\n      swap1\n      pop\n        /* \"#utility.yul\":16474:16893   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16899:17318   */\n    tag_258:\n        /* \"#utility.yul\":17065:17069   */\n      0x00\n        /* \"#utility.yul\":17103:17105   */\n      0x20\n        /* \"#utility.yul\":17092:17101   */\n      dup3\n        /* \"#utility.yul\":17088:17106   */\n      add\n        /* \"#utility.yul\":17080:17106   */\n      swap1\n      pop\n        /* \"#utility.yul\":17152:17161   */\n      dup2\n        /* \"#utility.yul\":17146:17150   */\n      dup2\n        /* \"#utility.yul\":17142:17162   */\n      sub\n        /* \"#utility.yul\":17138:17139   */\n      0x00\n        /* \"#utility.yul\":17127:17136   */\n      dup4\n        /* \"#utility.yul\":17123:17140   */\n      add\n        /* \"#utility.yul\":17116:17163   */\n      mstore\n        /* \"#utility.yul\":17180:17311   */\n      tag_561\n        /* \"#utility.yul\":17306:17310   */\n      dup2\n        /* \"#utility.yul\":17180:17311   */\n      tag_492\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":17172:17311   */\n      swap1\n      pop\n        /* \"#utility.yul\":16899:17318   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17324:17743   */\n    tag_237:\n        /* \"#utility.yul\":17490:17494   */\n      0x00\n        /* \"#utility.yul\":17528:17530   */\n      0x20\n        /* \"#utility.yul\":17517:17526   */\n      dup3\n        /* \"#utility.yul\":17513:17531   */\n      add\n        /* \"#utility.yul\":17505:17531   */\n      swap1\n      pop\n        /* \"#utility.yul\":17577:17586   */\n      dup2\n        /* \"#utility.yul\":17571:17575   */\n      dup2\n        /* \"#utility.yul\":17567:17587   */\n      sub\n        /* \"#utility.yul\":17563:17564   */\n      0x00\n        /* \"#utility.yul\":17552:17561   */\n      dup4\n        /* \"#utility.yul\":17548:17565   */\n      add\n        /* \"#utility.yul\":17541:17588   */\n      mstore\n        /* \"#utility.yul\":17605:17736   */\n      tag_563\n        /* \"#utility.yul\":17731:17735   */\n      dup2\n        /* \"#utility.yul\":17605:17736   */\n      tag_497\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":17597:17736   */\n      swap1\n      pop\n        /* \"#utility.yul\":17324:17743   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17749:18168   */\n    tag_190:\n        /* \"#utility.yul\":17915:17919   */\n      0x00\n        /* \"#utility.yul\":17953:17955   */\n      0x20\n        /* \"#utility.yul\":17942:17951   */\n      dup3\n        /* \"#utility.yul\":17938:17956   */\n      add\n        /* \"#utility.yul\":17930:17956   */\n      swap1\n      pop\n        /* \"#utility.yul\":18002:18011   */\n      dup2\n        /* \"#utility.yul\":17996:18000   */\n      dup2\n        /* \"#utility.yul\":17992:18012   */\n      sub\n        /* \"#utility.yul\":17988:17989   */\n      0x00\n        /* \"#utility.yul\":17977:17986   */\n      dup4\n        /* \"#utility.yul\":17973:17990   */\n      add\n        /* \"#utility.yul\":17966:18013   */\n      mstore\n        /* \"#utility.yul\":18030:18161   */\n      tag_565\n        /* \"#utility.yul\":18156:18160   */\n      dup2\n        /* \"#utility.yul\":18030:18161   */\n      tag_502\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":18022:18161   */\n      swap1\n      pop\n        /* \"#utility.yul\":17749:18168   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18174:18593   */\n    tag_223:\n        /* \"#utility.yul\":18340:18344   */\n      0x00\n        /* \"#utility.yul\":18378:18380   */\n      0x20\n        /* \"#utility.yul\":18367:18376   */\n      dup3\n        /* \"#utility.yul\":18363:18381   */\n      add\n        /* \"#utility.yul\":18355:18381   */\n      swap1\n      pop\n        /* \"#utility.yul\":18427:18436   */\n      dup2\n        /* \"#utility.yul\":18421:18425   */\n      dup2\n        /* \"#utility.yul\":18417:18437   */\n      sub\n        /* \"#utility.yul\":18413:18414   */\n      0x00\n        /* \"#utility.yul\":18402:18411   */\n      dup4\n        /* \"#utility.yul\":18398:18415   */\n      add\n        /* \"#utility.yul\":18391:18438   */\n      mstore\n        /* \"#utility.yul\":18455:18586   */\n      tag_567\n        /* \"#utility.yul\":18581:18585   */\n      dup2\n        /* \"#utility.yul\":18455:18586   */\n      tag_507\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":18447:18586   */\n      swap1\n      pop\n        /* \"#utility.yul\":18174:18593   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18599:19018   */\n    tag_201:\n        /* \"#utility.yul\":18765:18769   */\n      0x00\n        /* \"#utility.yul\":18803:18805   */\n      0x20\n        /* \"#utility.yul\":18792:18801   */\n      dup3\n        /* \"#utility.yul\":18788:18806   */\n      add\n        /* \"#utility.yul\":18780:18806   */\n      swap1\n      pop\n        /* \"#utility.yul\":18852:18861   */\n      dup2\n        /* \"#utility.yul\":18846:18850   */\n      dup2\n        /* \"#utility.yul\":18842:18862   */\n      sub\n        /* \"#utility.yul\":18838:18839   */\n      0x00\n        /* \"#utility.yul\":18827:18836   */\n      dup4\n        /* \"#utility.yul\":18823:18840   */\n      add\n        /* \"#utility.yul\":18816:18863   */\n      mstore\n        /* \"#utility.yul\":18880:19011   */\n      tag_569\n        /* \"#utility.yul\":19006:19010   */\n      dup2\n        /* \"#utility.yul\":18880:19011   */\n      tag_512\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":18872:19011   */\n      swap1\n      pop\n        /* \"#utility.yul\":18599:19018   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19024:19246   */\n    tag_31:\n        /* \"#utility.yul\":19117:19121   */\n      0x00\n        /* \"#utility.yul\":19155:19157   */\n      0x20\n        /* \"#utility.yul\":19144:19153   */\n      dup3\n        /* \"#utility.yul\":19140:19158   */\n      add\n        /* \"#utility.yul\":19132:19158   */\n      swap1\n      pop\n        /* \"#utility.yul\":19168:19239   */\n      tag_571\n        /* \"#utility.yul\":19236:19237   */\n      0x00\n        /* \"#utility.yul\":19225:19234   */\n      dup4\n        /* \"#utility.yul\":19221:19238   */\n      add\n        /* \"#utility.yul\":19212:19218   */\n      dup5\n        /* \"#utility.yul\":19168:19239   */\n      tag_517\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":19024:19246   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19333:19431   */\n    tag_414:\n        /* \"#utility.yul\":19384:19390   */\n      0x00\n        /* \"#utility.yul\":19418:19423   */\n      dup2\n        /* \"#utility.yul\":19412:19424   */\n      mload\n        /* \"#utility.yul\":19402:19424   */\n      swap1\n      pop\n        /* \"#utility.yul\":19333:19431   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19437:19536   */\n    tag_426:\n        /* \"#utility.yul\":19489:19495   */\n      0x00\n        /* \"#utility.yul\":19523:19528   */\n      dup2\n        /* \"#utility.yul\":19517:19529   */\n      mload\n        /* \"#utility.yul\":19507:19529   */\n      swap1\n      pop\n        /* \"#utility.yul\":19437:19536   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19542:19689   */\n    tag_416:\n        /* \"#utility.yul\":19643:19654   */\n      0x00\n        /* \"#utility.yul\":19680:19683   */\n      dup2\n        /* \"#utility.yul\":19665:19683   */\n      swap1\n      pop\n        /* \"#utility.yul\":19542:19689   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19695:19864   */\n    tag_428:\n        /* \"#utility.yul\":19779:19790   */\n      0x00\n        /* \"#utility.yul\":19813:19819   */\n      dup3\n        /* \"#utility.yul\":19808:19811   */\n      dup3\n        /* \"#utility.yul\":19801:19820   */\n      mstore\n        /* \"#utility.yul\":19853:19857   */\n      0x20\n        /* \"#utility.yul\":19848:19851   */\n      dup3\n        /* \"#utility.yul\":19844:19858   */\n      add\n        /* \"#utility.yul\":19829:19858   */\n      swap1\n      pop\n        /* \"#utility.yul\":19695:19864   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19870:20175   */\n    tag_319:\n        /* \"#utility.yul\":19910:19913   */\n      0x00\n        /* \"#utility.yul\":19929:19949   */\n      tag_579\n        /* \"#utility.yul\":19947:19948   */\n      dup3\n        /* \"#utility.yul\":19929:19949   */\n      tag_520\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":19924:19949   */\n      swap2\n      pop\n        /* \"#utility.yul\":19963:19983   */\n      tag_580\n        /* \"#utility.yul\":19981:19982   */\n      dup4\n        /* \"#utility.yul\":19963:19983   */\n      tag_520\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":19958:19983   */\n      swap3\n      pop\n        /* \"#utility.yul\":20117:20118   */\n      dup3\n        /* \"#utility.yul\":20049:20115   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20045:20119   */\n      sub\n        /* \"#utility.yul\":20042:20043   */\n      dup3\n        /* \"#utility.yul\":20039:20120   */\n      gt\n        /* \"#utility.yul\":20036:20143   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":20123:20141   */\n      tag_582\n      tag_583\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":20036:20143   */\n    tag_581:\n        /* \"#utility.yul\":20167:20168   */\n      dup3\n        /* \"#utility.yul\":20164:20165   */\n      dup3\n        /* \"#utility.yul\":20160:20169   */\n      add\n        /* \"#utility.yul\":20153:20169   */\n      swap1\n      pop\n        /* \"#utility.yul\":19870:20175   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20181:20366   */\n    tag_316:\n        /* \"#utility.yul\":20221:20222   */\n      0x00\n        /* \"#utility.yul\":20238:20258   */\n      tag_585\n        /* \"#utility.yul\":20256:20257   */\n      dup3\n        /* \"#utility.yul\":20238:20258   */\n      tag_520\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":20233:20258   */\n      swap2\n      pop\n        /* \"#utility.yul\":20272:20292   */\n      tag_586\n        /* \"#utility.yul\":20290:20291   */\n      dup4\n        /* \"#utility.yul\":20272:20292   */\n      tag_520\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":20267:20292   */\n      swap3\n      pop\n        /* \"#utility.yul\":20311:20312   */\n      dup3\n        /* \"#utility.yul\":20301:20336   */\n      tag_587\n      jumpi\n        /* \"#utility.yul\":20316:20334   */\n      tag_588\n      tag_589\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":20301:20336   */\n    tag_587:\n        /* \"#utility.yul\":20358:20359   */\n      dup3\n        /* \"#utility.yul\":20355:20356   */\n      dup3\n        /* \"#utility.yul\":20351:20360   */\n      div\n        /* \"#utility.yul\":20346:20360   */\n      swap1\n      pop\n        /* \"#utility.yul\":20181:20366   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20372:20720   */\n    tag_322:\n        /* \"#utility.yul\":20412:20419   */\n      0x00\n        /* \"#utility.yul\":20435:20455   */\n      tag_591\n        /* \"#utility.yul\":20453:20454   */\n      dup3\n        /* \"#utility.yul\":20435:20455   */\n      tag_520\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":20430:20455   */\n      swap2\n      pop\n        /* \"#utility.yul\":20469:20489   */\n      tag_592\n        /* \"#utility.yul\":20487:20488   */\n      dup4\n        /* \"#utility.yul\":20469:20489   */\n      tag_520\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":20464:20489   */\n      swap3\n      pop\n        /* \"#utility.yul\":20657:20658   */\n      dup2\n        /* \"#utility.yul\":20589:20655   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20585:20659   */\n      div\n        /* \"#utility.yul\":20582:20583   */\n      dup4\n        /* \"#utility.yul\":20579:20660   */\n      gt\n        /* \"#utility.yul\":20574:20575   */\n      dup3\n        /* \"#utility.yul\":20567:20576   */\n      iszero\n        /* \"#utility.yul\":20560:20577   */\n      iszero\n        /* \"#utility.yul\":20556:20661   */\n      and\n        /* \"#utility.yul\":20553:20684   */\n      iszero\n      tag_593\n      jumpi\n        /* \"#utility.yul\":20664:20682   */\n      tag_594\n      tag_583\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":20553:20684   */\n    tag_593:\n        /* \"#utility.yul\":20712:20713   */\n      dup3\n        /* \"#utility.yul\":20709:20710   */\n      dup3\n        /* \"#utility.yul\":20705:20714   */\n      mul\n        /* \"#utility.yul\":20694:20714   */\n      swap1\n      pop\n        /* \"#utility.yul\":20372:20720   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20726:20917   */\n    tag_313:\n        /* \"#utility.yul\":20766:20770   */\n      0x00\n        /* \"#utility.yul\":20786:20806   */\n      tag_596\n        /* \"#utility.yul\":20804:20805   */\n      dup3\n        /* \"#utility.yul\":20786:20806   */\n      tag_520\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":20781:20806   */\n      swap2\n      pop\n        /* \"#utility.yul\":20820:20840   */\n      tag_597\n        /* \"#utility.yul\":20838:20839   */\n      dup4\n        /* \"#utility.yul\":20820:20840   */\n      tag_520\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":20815:20840   */\n      swap3\n      pop\n        /* \"#utility.yul\":20859:20860   */\n      dup3\n        /* \"#utility.yul\":20856:20857   */\n      dup3\n        /* \"#utility.yul\":20853:20861   */\n      lt\n        /* \"#utility.yul\":20850:20884   */\n      iszero\n      tag_598\n      jumpi\n        /* \"#utility.yul\":20864:20882   */\n      tag_599\n      tag_583\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":20850:20884   */\n    tag_598:\n        /* \"#utility.yul\":20909:20910   */\n      dup3\n        /* \"#utility.yul\":20906:20907   */\n      dup3\n        /* \"#utility.yul\":20902:20911   */\n      sub\n        /* \"#utility.yul\":20894:20911   */\n      swap1\n      pop\n        /* \"#utility.yul\":20726:20917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20923:21019   */\n    tag_410:\n        /* \"#utility.yul\":20960:20967   */\n      0x00\n        /* \"#utility.yul\":20989:21013   */\n      tag_601\n        /* \"#utility.yul\":21007:21012   */\n      dup3\n        /* \"#utility.yul\":20989:21013   */\n      tag_602\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":20978:21013   */\n      swap1\n      pop\n        /* \"#utility.yul\":20923:21019   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21025:21115   */\n    tag_603:\n        /* \"#utility.yul\":21059:21066   */\n      0x00\n        /* \"#utility.yul\":21102:21107   */\n      dup2\n        /* \"#utility.yul\":21095:21108   */\n      iszero\n        /* \"#utility.yul\":21088:21109   */\n      iszero\n        /* \"#utility.yul\":21077:21109   */\n      swap1\n      pop\n        /* \"#utility.yul\":21025:21115   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21121:21247   */\n    tag_602:\n        /* \"#utility.yul\":21158:21165   */\n      0x00\n        /* \"#utility.yul\":21198:21240   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":21191:21196   */\n      dup3\n        /* \"#utility.yul\":21187:21241   */\n      and\n        /* \"#utility.yul\":21176:21241   */\n      swap1\n      pop\n        /* \"#utility.yul\":21121:21247   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21253:21330   */\n    tag_520:\n        /* \"#utility.yul\":21290:21297   */\n      0x00\n        /* \"#utility.yul\":21319:21324   */\n      dup2\n        /* \"#utility.yul\":21308:21324   */\n      swap1\n      pop\n        /* \"#utility.yul\":21253:21330   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21336:21476   */\n    tag_422:\n        /* \"#utility.yul\":21400:21409   */\n      0x00\n        /* \"#utility.yul\":21433:21470   */\n      tag_608\n        /* \"#utility.yul\":21464:21469   */\n      dup3\n        /* \"#utility.yul\":21433:21470   */\n      tag_609\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":21420:21470   */\n      swap1\n      pop\n        /* \"#utility.yul\":21336:21476   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21482:21608   */\n    tag_609:\n        /* \"#utility.yul\":21532:21541   */\n      0x00\n        /* \"#utility.yul\":21565:21602   */\n      tag_611\n        /* \"#utility.yul\":21596:21601   */\n      dup3\n        /* \"#utility.yul\":21565:21602   */\n      tag_612\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":21552:21602   */\n      swap1\n      pop\n        /* \"#utility.yul\":21482:21608   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21614:21727   */\n    tag_612:\n        /* \"#utility.yul\":21664:21673   */\n      0x00\n        /* \"#utility.yul\":21697:21721   */\n      tag_614\n        /* \"#utility.yul\":21715:21720   */\n      dup3\n        /* \"#utility.yul\":21697:21721   */\n      tag_602\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":21684:21721   */\n      swap1\n      pop\n        /* \"#utility.yul\":21614:21727   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21733:22040   */\n    tag_418:\n        /* \"#utility.yul\":21801:21802   */\n      0x00\n        /* \"#utility.yul\":21811:21924   */\n    tag_616:\n        /* \"#utility.yul\":21825:21831   */\n      dup4\n        /* \"#utility.yul\":21822:21823   */\n      dup2\n        /* \"#utility.yul\":21819:21832   */\n      lt\n        /* \"#utility.yul\":21811:21924   */\n      iszero\n      tag_618\n      jumpi\n        /* \"#utility.yul\":21910:21911   */\n      dup1\n        /* \"#utility.yul\":21905:21908   */\n      dup3\n        /* \"#utility.yul\":21901:21912   */\n      add\n        /* \"#utility.yul\":21895:21913   */\n      mload\n        /* \"#utility.yul\":21891:21892   */\n      dup2\n        /* \"#utility.yul\":21886:21889   */\n      dup5\n        /* \"#utility.yul\":21882:21893   */\n      add\n        /* \"#utility.yul\":21875:21914   */\n      mstore\n        /* \"#utility.yul\":21847:21849   */\n      0x20\n        /* \"#utility.yul\":21844:21845   */\n      dup2\n        /* \"#utility.yul\":21840:21850   */\n      add\n        /* \"#utility.yul\":21835:21850   */\n      swap1\n      pop\n        /* \"#utility.yul\":21811:21924   */\n      jump(tag_616)\n    tag_618:\n        /* \"#utility.yul\":21942:21948   */\n      dup4\n        /* \"#utility.yul\":21939:21940   */\n      dup2\n        /* \"#utility.yul\":21936:21949   */\n      gt\n        /* \"#utility.yul\":21933:22034   */\n      iszero\n      tag_619\n      jumpi\n        /* \"#utility.yul\":22022:22023   */\n      0x00\n        /* \"#utility.yul\":22013:22019   */\n      dup5\n        /* \"#utility.yul\":22008:22011   */\n      dup5\n        /* \"#utility.yul\":22004:22020   */\n      add\n        /* \"#utility.yul\":21997:22024   */\n      mstore\n        /* \"#utility.yul\":21933:22034   */\n    tag_619:\n        /* \"#utility.yul\":21782:22040   */\n      pop\n        /* \"#utility.yul\":21733:22040   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22046:22222   */\n    tag_135:\n        /* \"#utility.yul\":22078:22079   */\n      0x00\n        /* \"#utility.yul\":22095:22115   */\n      tag_621\n        /* \"#utility.yul\":22113:22114   */\n      dup3\n        /* \"#utility.yul\":22095:22115   */\n      tag_520\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":22090:22115   */\n      swap2\n      pop\n        /* \"#utility.yul\":22129:22149   */\n      tag_622\n        /* \"#utility.yul\":22147:22148   */\n      dup4\n        /* \"#utility.yul\":22129:22149   */\n      tag_520\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":22124:22149   */\n      swap3\n      pop\n        /* \"#utility.yul\":22168:22169   */\n      dup3\n        /* \"#utility.yul\":22158:22193   */\n      tag_623\n      jumpi\n        /* \"#utility.yul\":22173:22191   */\n      tag_624\n      tag_589\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":22158:22193   */\n    tag_623:\n        /* \"#utility.yul\":22214:22215   */\n      dup3\n        /* \"#utility.yul\":22211:22212   */\n      dup3\n        /* \"#utility.yul\":22207:22216   */\n      mod\n        /* \"#utility.yul\":22202:22216   */\n      swap1\n      pop\n        /* \"#utility.yul\":22046:22222   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22228:22408   */\n    tag_583:\n        /* \"#utility.yul\":22276:22353   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22273:22274   */\n      0x00\n        /* \"#utility.yul\":22266:22354   */\n      mstore\n        /* \"#utility.yul\":22373:22377   */\n      0x11\n        /* \"#utility.yul\":22370:22371   */\n      0x04\n        /* \"#utility.yul\":22363:22378   */\n      mstore\n        /* \"#utility.yul\":22397:22401   */\n      0x24\n        /* \"#utility.yul\":22394:22395   */\n      0x00\n        /* \"#utility.yul\":22387:22402   */\n      revert\n        /* \"#utility.yul\":22414:22594   */\n    tag_589:\n        /* \"#utility.yul\":22462:22539   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22459:22460   */\n      0x00\n        /* \"#utility.yul\":22452:22540   */\n      mstore\n        /* \"#utility.yul\":22559:22563   */\n      0x12\n        /* \"#utility.yul\":22556:22557   */\n      0x04\n        /* \"#utility.yul\":22549:22564   */\n      mstore\n        /* \"#utility.yul\":22583:22587   */\n      0x24\n        /* \"#utility.yul\":22580:22581   */\n      0x00\n        /* \"#utility.yul\":22573:22588   */\n      revert\n        /* \"#utility.yul\":22723:22840   */\n    tag_388:\n        /* \"#utility.yul\":22832:22833   */\n      0x00\n        /* \"#utility.yul\":22829:22830   */\n      dup1\n        /* \"#utility.yul\":22822:22834   */\n      revert\n        /* \"#utility.yul\":22846:22948   */\n    tag_431:\n        /* \"#utility.yul\":22887:22893   */\n      0x00\n        /* \"#utility.yul\":22938:22940   */\n      0x1f\n        /* \"#utility.yul\":22934:22941   */\n      not\n        /* \"#utility.yul\":22929:22931   */\n      0x1f\n        /* \"#utility.yul\":22922:22927   */\n      dup4\n        /* \"#utility.yul\":22918:22932   */\n      add\n        /* \"#utility.yul\":22914:22942   */\n      and\n        /* \"#utility.yul\":22904:22942   */\n      swap1\n      pop\n        /* \"#utility.yul\":22846:22948   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22954:23116   */\n    tag_436:\n        /* \"#utility.yul\":23094:23108   */\n      0x496e73756666696369656e740000000000000000000000000000000000000000\n        /* \"#utility.yul\":23090:23091   */\n      0x00\n        /* \"#utility.yul\":23082:23088   */\n      dup3\n        /* \"#utility.yul\":23078:23092   */\n      add\n        /* \"#utility.yul\":23071:23109   */\n      mstore\n        /* \"#utility.yul\":22954:23116   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23122:23288   */\n    tag_441:\n        /* \"#utility.yul\":23262:23280   */\n      0x4e6f7468696e6720746f20636c61696d00000000000000000000000000000000\n        /* \"#utility.yul\":23258:23259   */\n      0x00\n        /* \"#utility.yul\":23250:23256   */\n      dup3\n        /* \"#utility.yul\":23246:23260   */\n      add\n        /* \"#utility.yul\":23239:23281   */\n      mstore\n        /* \"#utility.yul\":23122:23288   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23294:23465   */\n    tag_446:\n        /* \"#utility.yul\":23434:23457   */\n      0x4572726f723a20696e76616c6964207374616b65720000000000000000000000\n        /* \"#utility.yul\":23430:23431   */\n      0x00\n        /* \"#utility.yul\":23422:23428   */\n      dup3\n        /* \"#utility.yul\":23418:23432   */\n      add\n        /* \"#utility.yul\":23411:23458   */\n      mstore\n        /* \"#utility.yul\":23294:23465   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23471:23700   */\n    tag_451:\n        /* \"#utility.yul\":23611:23645   */\n      0x5361666542455032303a204245503230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":23607:23608   */\n      0x00\n        /* \"#utility.yul\":23599:23605   */\n      dup3\n        /* \"#utility.yul\":23595:23609   */\n      add\n        /* \"#utility.yul\":23588:23646   */\n      mstore\n        /* \"#utility.yul\":23680:23692   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23675:23677   */\n      0x20\n        /* \"#utility.yul\":23667:23673   */\n      dup3\n        /* \"#utility.yul\":23663:23678   */\n      add\n        /* \"#utility.yul\":23656:23693   */\n      mstore\n        /* \"#utility.yul\":23471:23700   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23706:23931   */\n    tag_456:\n        /* \"#utility.yul\":23846:23880   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":23842:23843   */\n      0x00\n        /* \"#utility.yul\":23834:23840   */\n      dup3\n        /* \"#utility.yul\":23830:23844   */\n      add\n        /* \"#utility.yul\":23823:23881   */\n      mstore\n        /* \"#utility.yul\":23915:23923   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23910:23912   */\n      0x20\n        /* \"#utility.yul\":23902:23908   */\n      dup3\n        /* \"#utility.yul\":23898:23913   */\n      add\n        /* \"#utility.yul\":23891:23924   */\n      mstore\n        /* \"#utility.yul\":23706:23931   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23937:24101   */\n    tag_461:\n        /* \"#utility.yul\":24077:24093   */\n      0x496e76616c696420616d6f756e74000000000000000000000000000000000000\n        /* \"#utility.yul\":24073:24074   */\n      0x00\n        /* \"#utility.yul\":24065:24071   */\n      dup3\n        /* \"#utility.yul\":24061:24075   */\n      add\n        /* \"#utility.yul\":24054:24094   */\n      mstore\n        /* \"#utility.yul\":23937:24101   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24107:24272   */\n    tag_466:\n        /* \"#utility.yul\":24247:24264   */\n      0x416c726561647920737461727465640000000000000000000000000000000000\n        /* \"#utility.yul\":24243:24244   */\n      0x00\n        /* \"#utility.yul\":24235:24241   */\n      dup3\n        /* \"#utility.yul\":24231:24245   */\n      add\n        /* \"#utility.yul\":24224:24265   */\n      mstore\n        /* \"#utility.yul\":24107:24272   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24278:24503   */\n    tag_471:\n        /* \"#utility.yul\":24418:24452   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":24414:24415   */\n      0x00\n        /* \"#utility.yul\":24406:24412   */\n      dup3\n        /* \"#utility.yul\":24402:24416   */\n      add\n        /* \"#utility.yul\":24395:24453   */\n      mstore\n        /* \"#utility.yul\":24487:24495   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24482:24484   */\n      0x20\n        /* \"#utility.yul\":24474:24480   */\n      dup3\n        /* \"#utility.yul\":24470:24485   */\n      add\n        /* \"#utility.yul\":24463:24496   */\n      mstore\n        /* \"#utility.yul\":24278:24503   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24509:24690   */\n    tag_476:\n        /* \"#utility.yul\":24649:24682   */\n      0x416d6f756e742073686f756c642062652067726561746572207468616e203000\n        /* \"#utility.yul\":24645:24646   */\n      0x00\n        /* \"#utility.yul\":24637:24643   */\n      dup3\n        /* \"#utility.yul\":24633:24647   */\n      add\n        /* \"#utility.yul\":24626:24683   */\n      mstore\n        /* \"#utility.yul\":24509:24690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24696:24878   */\n    tag_481:\n        /* \"#utility.yul\":24836:24870   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":24832:24833   */\n      0x00\n        /* \"#utility.yul\":24824:24830   */\n      dup3\n        /* \"#utility.yul\":24820:24834   */\n      add\n        /* \"#utility.yul\":24813:24871   */\n      mstore\n        /* \"#utility.yul\":24696:24878   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24884:25047   */\n    tag_486:\n        /* \"#utility.yul\":25024:25039   */\n      0x496e76616c69642076616c756500000000000000000000000000000000000000\n        /* \"#utility.yul\":25020:25021   */\n      0x00\n        /* \"#utility.yul\":25012:25018   */\n      dup3\n        /* \"#utility.yul\":25008:25022   */\n      add\n        /* \"#utility.yul\":25001:25040   */\n      mstore\n        /* \"#utility.yul\":24884:25047   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25053:25232   */\n    tag_491:\n        /* \"#utility.yul\":25193:25224   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":25189:25190   */\n      0x00\n        /* \"#utility.yul\":25181:25187   */\n      dup3\n        /* \"#utility.yul\":25177:25191   */\n      add\n        /* \"#utility.yul\":25170:25225   */\n      mstore\n        /* \"#utility.yul\":25053:25232   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25238:25414   */\n    tag_496:\n        /* \"#utility.yul\":25378:25406   */\n      0x496e76616c696420556e7374616b696e67204665652052617465000000000000\n        /* \"#utility.yul\":25374:25375   */\n      0x00\n        /* \"#utility.yul\":25366:25372   */\n      dup3\n        /* \"#utility.yul\":25362:25376   */\n      add\n        /* \"#utility.yul\":25355:25407   */\n      mstore\n        /* \"#utility.yul\":25238:25414   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25420:25593   */\n    tag_501:\n        /* \"#utility.yul\":25560:25585   */\n      0x496e76616c6964204c6f636b7570204475726174696f6e000000000000000000\n        /* \"#utility.yul\":25556:25557   */\n      0x00\n        /* \"#utility.yul\":25548:25554   */\n      dup3\n        /* \"#utility.yul\":25544:25558   */\n      add\n        /* \"#utility.yul\":25537:25586   */\n      mstore\n        /* \"#utility.yul\":25420:25593   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25599:25762   */\n    tag_506:\n        /* \"#utility.yul\":25739:25754   */\n      0x43616e2774206265207a65726f00000000000000000000000000000000000000\n        /* \"#utility.yul\":25735:25736   */\n      0x00\n        /* \"#utility.yul\":25727:25733   */\n      dup3\n        /* \"#utility.yul\":25723:25737   */\n      add\n        /* \"#utility.yul\":25716:25755   */\n      mstore\n        /* \"#utility.yul\":25599:25762   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25768:25930   */\n    tag_511:\n        /* \"#utility.yul\":25908:25922   */\n      0x496e76616c6964204d6f64650000000000000000000000000000000000000000\n        /* \"#utility.yul\":25904:25905   */\n      0x00\n        /* \"#utility.yul\":25896:25902   */\n      dup3\n        /* \"#utility.yul\":25892:25906   */\n      add\n        /* \"#utility.yul\":25885:25923   */\n      mstore\n        /* \"#utility.yul\":25768:25930   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25936:26099   */\n    tag_516:\n        /* \"#utility.yul\":26076:26091   */\n      0x496e73756666696369656e742100000000000000000000000000000000000000\n        /* \"#utility.yul\":26072:26073   */\n      0x00\n        /* \"#utility.yul\":26064:26070   */\n      dup3\n        /* \"#utility.yul\":26060:26074   */\n      add\n        /* \"#utility.yul\":26053:26092   */\n      mstore\n        /* \"#utility.yul\":25936:26099   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26105:26227   */\n    tag_373:\n        /* \"#utility.yul\":26178:26202   */\n      tag_649\n        /* \"#utility.yul\":26196:26201   */\n      dup2\n        /* \"#utility.yul\":26178:26202   */\n      tag_410\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":26171:26176   */\n      dup2\n        /* \"#utility.yul\":26168:26203   */\n      eq\n        /* \"#utility.yul\":26158:26221   */\n      tag_650\n      jumpi\n        /* \"#utility.yul\":26217:26218   */\n      0x00\n        /* \"#utility.yul\":26214:26215   */\n      dup1\n        /* \"#utility.yul\":26207:26219   */\n      revert\n        /* \"#utility.yul\":26158:26221   */\n    tag_650:\n        /* \"#utility.yul\":26105:26227   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26233:26349   */\n    tag_377:\n        /* \"#utility.yul\":26303:26324   */\n      tag_652\n        /* \"#utility.yul\":26318:26323   */\n      dup2\n        /* \"#utility.yul\":26303:26324   */\n      tag_603\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":26296:26301   */\n      dup2\n        /* \"#utility.yul\":26293:26325   */\n      eq\n        /* \"#utility.yul\":26283:26343   */\n      tag_653\n      jumpi\n        /* \"#utility.yul\":26339:26340   */\n      0x00\n        /* \"#utility.yul\":26336:26337   */\n      dup1\n        /* \"#utility.yul\":26329:26341   */\n      revert\n        /* \"#utility.yul\":26283:26343   */\n    tag_653:\n        /* \"#utility.yul\":26233:26349   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26355:26477   */\n    tag_381:\n        /* \"#utility.yul\":26428:26452   */\n      tag_655\n        /* \"#utility.yul\":26446:26451   */\n      dup2\n        /* \"#utility.yul\":26428:26452   */\n      tag_520\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":26421:26426   */\n      dup2\n        /* \"#utility.yul\":26418:26453   */\n      eq\n        /* \"#utility.yul\":26408:26471   */\n      tag_656\n      jumpi\n        /* \"#utility.yul\":26467:26468   */\n      0x00\n        /* \"#utility.yul\":26464:26465   */\n      dup1\n        /* \"#utility.yul\":26457:26469   */\n      revert\n        /* \"#utility.yul\":26408:26471   */\n    tag_656:\n        /* \"#utility.yul\":26355:26477   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cfe1e5f4e11b46453a16babb249a34295c1e092ff3669509da0360b08189778664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@Init_1272": {
									"entryPoint": 379,
									"id": 1272,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1232": {
									"entryPoint": null,
									"id": 1232,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_489": {
									"entryPoint": 175,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 183,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:8",
														"type": ""
													}
												],
												"src": "7:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:8"
															},
															"nodeType": "YulIf",
															"src": "243:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:8",
														"type": ""
													}
												],
												"src": "156:351:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:8",
														"type": ""
													}
												],
												"src": "513:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "678:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "660:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:8",
														"type": ""
													}
												],
												"src": "594:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "751:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "766:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "773:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "751:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "723:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "733:7:8",
														"type": ""
													}
												],
												"src": "696:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "828:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1057:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1050:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1050:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "951:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1117:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1174:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1183:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1186:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1176:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1176:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1140:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1165:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1147:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1137:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1130:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:43:8"
															},
															"nodeType": "YulIf",
															"src": "1127:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1110:5:8",
														"type": ""
													}
												],
												"src": "1074:122:8"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162003167380380620031678339818101604052810190620000379190620001f6565b620000576200004b620000af60201b60201c565b620000b760201b60201c565b620000676200017b60201b60201c565b80600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200027b565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60c86003819055506105dc600181905550606460048190555062093a806002819055506276a70060058190555069d3c21bcecceda10000006008819055506a027b46536c66c8e30000006007819055506a05ca4ec2a79a7f67000000600681905550565b600081519050620001f08162000261565b92915050565b6000602082840312156200020f576200020e6200025c565b5b60006200021f84828501620001df565b91505092915050565b600062000235826200023c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200026c8162000228565b81146200027857600080fd5b50565b612edc806200028b6000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80637e1a3786116100b8578063a694fc3a1161007c578063a694fc3a14610317578063aedf562b14610333578063f2fde38b14610363578063f99318551461037f578063fc0c546a146103af578063fe600f84146103cd57610142565b80637e1a378614610285578063817b1cd2146102a35780638da5cb5b146102c157806391e07e7a146102df5780639e447fc6146102fb57610142565b80634b77dd9e1161010a5780634b77dd9e146101d75780635715ec11146101f35780635d2ec65d14610211578063645a8a561461022f578063692642e71461025f578063715018a61461027b57610142565b80630917e776146101475780632e1a7d4d146101655780634641257d146101815780634a4fbeec1461018b5780634b62b70b146101bb575b600080fd5b61014f6103fd565b60405161015c919061287e565b60405180910390f35b61017f600480360381019061017a919061220b565b610407565b005b6101896107d6565b005b6101a560048036038101906101a091906121b1565b610a9f565b6040516101b2919061287e565b60405180910390f35b6101d560048036038101906101d0919061220b565b610c2f565b005b6101f160048036038101906101ec9190612265565b610cf8565b005b6101fb61114e565b604051610208919061287e565b60405180910390f35b61021961115b565b604051610226919061287e565b60405180910390f35b610249600480360381019061024491906121b1565b6111a5565b604051610256919061287e565b60405180910390f35b6102796004803603810190610274919061220b565b6111f1565b005b610283611306565b005b61028d61138e565b60405161029a919061287e565b60405180910390f35b6102ab611398565b6040516102b8919061287e565b60405180910390f35b6102c961139e565b6040516102d691906125a6565b60405180910390f35b6102f960048036038101906102f4919061220b565b6113c7565b005b6103156004803603810190610310919061220b565b6114c7565b005b610331600480360381019061032c919061220b565b6115c7565b005b61034d600480360381019061034891906121b1565b6118c4565b60405161035a919061287e565b60405180910390f35b61037d600480360381019061037891906121b1565b611923565b005b610399600480360381019061039491906121b1565b611a1b565b6040516103a6919061287e565b60405180910390f35b6103b7611a67565b6040516103c49190612621565b60405180910390f35b6103e760048036038101906103e291906121b1565b611a8d565b6040516103f4919061287e565b60405180910390f35b6000600b54905090565b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000821161048d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104849061275e565b60405180910390fd5b80600101548211156104d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cb906126fe565b60405180910390fd5b6104dc611ad9565b6000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161053991906125a6565b60206040518083038186803b15801561055157600080fd5b505afa158015610565573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105899190612238565b831061063f57600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105ea91906125a6565b60206040518083038186803b15801561060257600080fd5b505afa158015610616573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063a9190612238565b610641565b825b9050600061067162015180610663856003015442611cad90919063ffffffff16565b611cc390919063ffffffff16565b9050600060649050600080856002015414156106a8576106a06005548660030154611cd990919063ffffffff16565b4210156106c6565b6000600254846106b89190612a91565b1480156106c55750600083115b5b9050806106d35760015491505b61070c6106fd6127106106ef8588611cef90919063ffffffff16565b611cc390919063ffffffff16565b85611cad90919063ffffffff16565b935061072384600b54611cad90919063ffffffff16565b600b81905550610740848660010154611cad90919063ffffffff16565b85600101819055506107953385600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d059092919063ffffffff16565b7f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436433856040516107c69291906125f8565b60405180910390a1505050505050565b6107de611ad9565b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060006108666108536127106108456004548660000154611cef90919063ffffffff16565b611cc390919063ffffffff16565b8360000154611cad90919063ffffffff16565b9050600081116108ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a29061267e565b60405180910390fd5b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161090691906125a6565b60206040518083038186803b15801561091e57600080fd5b505afa158015610932573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109569190612238565b811115610a0b57600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109b891906125a6565b60206040518083038186803b1580156109d057600080fd5b505afa1580156109e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a089190612238565b90505b610a583382600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d059092919063ffffffff16565b600082600001819055507fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba3382604051610a939291906125f8565b60405180910390a15050565b60006055600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005015414610af45760019050610c2a565b6000600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015414610bbc57600062093a80610b99600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015442611cad90919063ffffffff16565b610ba39190612a91565b14610baf576001610bb2565b60005b60ff169050610c2a565b600554610c14600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015442611cad90919063ffffffff16565b1015610c21576001610c24565b60005b60ff1690505b919050565b610c37611d8b565b73ffffffffffffffffffffffffffffffffffffffff16610c5561139e565b73ffffffffffffffffffffffffffffffffffffffff1614610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca29061277e565b60405180910390fd5b60008111610cee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce59061281e565b60405180910390fd5b8060058190555050565b60008211610d3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d329061275e565b60405180910390fd5b81600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610d9791906125a6565b60206040518083038186803b158015610daf57600080fd5b505afa158015610dc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de79190612238565b11610e27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1e9061285e565b60405180910390fd5b6055600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501541415610ead576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea49061271e565b60405180910390fd5b6000811415610ec85760008211610ec357600080fd5b611008565b6001811415610f1b57600854821015610f16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0d9061265e565b60405180910390fd5b611007565b6002811415610f6e57600754821015610f69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f609061265e565b60405180910390fd5b611006565b6003811415610fc157600654821015610fbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb39061265e565b60405180910390fd5b611005565b60008210611004576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ffb9061283e565b60405180910390fd5b5b5b5b5b80600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555042600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506055600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501819055506009339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061114a826115c7565b5050565b6000600980549050905090565b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b6111f9611d8b565b73ffffffffffffffffffffffffffffffffffffffff1661121761139e565b73ffffffffffffffffffffffffffffffffffffffff161461126d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112649061277e565b60405180910390fd5b600081116112b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a7906127fe565b60405180910390fd5b6112c66201518082611cef90919063ffffffff16565b6002819055507f189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c816040516112fb919061287e565b60405180910390a150565b61130e611d8b565b73ffffffffffffffffffffffffffffffffffffffff1661132c61139e565b73ffffffffffffffffffffffffffffffffffffffff1614611382576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113799061277e565b60405180910390fd5b61138c6000611d93565b565b6000600354905090565b600b5481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6113cf611d8b565b73ffffffffffffffffffffffffffffffffffffffff166113ed61139e565b73ffffffffffffffffffffffffffffffffffffffff1614611443576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143a9061277e565b60405180910390fd5b60008111611486576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147d906127de565b60405180910390fd5b806001819055507f150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b81816040516114bc919061287e565b60405180910390a150565b6114cf611d8b565b73ffffffffffffffffffffffffffffffffffffffff166114ed61139e565b73ffffffffffffffffffffffffffffffffffffffff1614611543576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153a9061277e565b60405180910390fd5b60008111611586576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157d9061279e565b60405180910390fd5b806003819055507f1946fb78c7ca778b54d82cabaac5ba67cf446f58d0ff1f8ceaebb6150e54e44f816040516115bc919061287e565b60405180910390a150565b6000811161160a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116019061275e565b60405180910390fd5b80600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161166691906125a6565b60206040518083038186803b15801561167e57600080fd5b505afa158015611692573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b69190612238565b116116f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ed9061285e565b60405180910390fd5b6055600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501541461177b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117729061269e565b60405180910390fd5b611783611ad9565b6117d2333083600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611e57909392919063ffffffff16565b61182781600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154611cd990919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555061188281600b54611cd990919063ffffffff16565b600b819055507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d33826040516118b99291906125f8565b60405180910390a150565b600080600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015414611916576001611919565b60005b60ff169050919050565b61192b611d8b565b73ffffffffffffffffffffffffffffffffffffffff1661194961139e565b73ffffffffffffffffffffffffffffffffffffffff161461199f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119969061277e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611a0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a06906126de565b60405180910390fd5b611a1881611d93565b50565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501549050919050565b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490506000611bc5612710611bb7600354611ba9611b9a6121c0611b8c600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004015443611cad90919063ffffffff16565b611cc390919063ffffffff16565b87611cef90919063ffffffff16565b611cef90919063ffffffff16565b611cc390919063ffffffff16565b9050611c1c81600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154611cd990919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555043600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401819055505050565b60008183611cbb91906129ac565b905092915050565b60008183611cd19190612921565b905092915050565b60008183611ce791906128cb565b905092915050565b60008183611cfd9190612952565b905092915050565b611d868363a9059cbb60e01b8484604051602401611d249291906125f8565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611ee0565b505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611eda846323b872dd60e01b858585604051602401611e78939291906125c1565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611ee0565b50505050565b6000611f42826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611fa79092919063ffffffff16565b9050600081511115611fa25780806020019051810190611f6291906121de565b611fa1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f98906126be565b60405180910390fd5b5b505050565b6060611fb68484600085611fbf565b90509392505050565b606082471015612004576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ffb9061273e565b60405180910390fd5b61200d856120d3565b61204c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612043906127be565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051612075919061258f565b60006040518083038185875af1925050503d80600081146120b2576040519150601f19603f3d011682016040523d82523d6000602084013e6120b7565b606091505b50915091506120c78282866120f6565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060831561210657829050612156565b6000835111156121195782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161214d919061263c565b60405180910390fd5b9392505050565b60008135905061216c81612e61565b92915050565b60008151905061218181612e78565b92915050565b60008135905061219681612e8f565b92915050565b6000815190506121ab81612e8f565b92915050565b6000602082840312156121c7576121c6612b20565b5b60006121d58482850161215d565b91505092915050565b6000602082840312156121f4576121f3612b20565b5b600061220284828501612172565b91505092915050565b60006020828403121561222157612220612b20565b5b600061222f84828501612187565b91505092915050565b60006020828403121561224e5761224d612b20565b5b600061225c8482850161219c565b91505092915050565b6000806040838503121561227c5761227b612b20565b5b600061228a85828601612187565b925050602061229b85828601612187565b9150509250929050565b6122ae816129e0565b82525050565b60006122bf82612899565b6122c981856128af565b93506122d9818560208601612a5e565b80840191505092915050565b6122ee81612a28565b82525050565b60006122ff826128a4565b61230981856128ba565b9350612319818560208601612a5e565b61232281612b25565b840191505092915050565b600061233a600c836128ba565b915061234582612b36565b602082019050919050565b600061235d6010836128ba565b915061236882612b5f565b602082019050919050565b60006123806015836128ba565b915061238b82612b88565b602082019050919050565b60006123a3602a836128ba565b91506123ae82612bb1565b604082019050919050565b60006123c66026836128ba565b91506123d182612c00565b604082019050919050565b60006123e9600e836128ba565b91506123f482612c4f565b602082019050919050565b600061240c600f836128ba565b915061241782612c78565b602082019050919050565b600061242f6026836128ba565b915061243a82612ca1565b604082019050919050565b6000612452601f836128ba565b915061245d82612cf0565b602082019050919050565b60006124756020836128ba565b915061248082612d19565b602082019050919050565b6000612498600d836128ba565b91506124a382612d42565b602082019050919050565b60006124bb601d836128ba565b91506124c682612d6b565b602082019050919050565b60006124de601a836128ba565b91506124e982612d94565b602082019050919050565b60006125016017836128ba565b915061250c82612dbd565b602082019050919050565b6000612524600d836128ba565b915061252f82612de6565b602082019050919050565b6000612547600c836128ba565b915061255282612e0f565b602082019050919050565b600061256a600d836128ba565b915061257582612e38565b602082019050919050565b61258981612a1e565b82525050565b600061259b82846122b4565b915081905092915050565b60006020820190506125bb60008301846122a5565b92915050565b60006060820190506125d660008301866122a5565b6125e360208301856122a5565b6125f06040830184612580565b949350505050565b600060408201905061260d60008301856122a5565b61261a6020830184612580565b9392505050565b600060208201905061263660008301846122e5565b92915050565b6000602082019050818103600083015261265681846122f4565b905092915050565b600060208201905081810360008301526126778161232d565b9050919050565b6000602082019050818103600083015261269781612350565b9050919050565b600060208201905081810360008301526126b781612373565b9050919050565b600060208201905081810360008301526126d781612396565b9050919050565b600060208201905081810360008301526126f7816123b9565b9050919050565b60006020820190508181036000830152612717816123dc565b9050919050565b60006020820190508181036000830152612737816123ff565b9050919050565b6000602082019050818103600083015261275781612422565b9050919050565b6000602082019050818103600083015261277781612445565b9050919050565b6000602082019050818103600083015261279781612468565b9050919050565b600060208201905081810360008301526127b78161248b565b9050919050565b600060208201905081810360008301526127d7816124ae565b9050919050565b600060208201905081810360008301526127f7816124d1565b9050919050565b60006020820190508181036000830152612817816124f4565b9050919050565b6000602082019050818103600083015261283781612517565b9050919050565b600060208201905081810360008301526128578161253a565b9050919050565b600060208201905081810360008301526128778161255d565b9050919050565b60006020820190506128936000830184612580565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006128d682612a1e565b91506128e183612a1e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561291657612915612ac2565b5b828201905092915050565b600061292c82612a1e565b915061293783612a1e565b92508261294757612946612af1565b5b828204905092915050565b600061295d82612a1e565b915061296883612a1e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156129a1576129a0612ac2565b5b828202905092915050565b60006129b782612a1e565b91506129c283612a1e565b9250828210156129d5576129d4612ac2565b5b828203905092915050565b60006129eb826129fe565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612a3382612a3a565b9050919050565b6000612a4582612a4c565b9050919050565b6000612a57826129fe565b9050919050565b60005b83811015612a7c578082015181840152602081019050612a61565b83811115612a8b576000848401525b50505050565b6000612a9c82612a1e565b9150612aa783612a1e565b925082612ab757612ab6612af1565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f496e73756666696369656e740000000000000000000000000000000000000000600082015250565b7f4e6f7468696e6720746f20636c61696d00000000000000000000000000000000600082015250565b7f4572726f723a20696e76616c6964207374616b65720000000000000000000000600082015250565b7f5361666542455032303a204245503230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b7f416c726561647920737461727465640000000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f416d6f756e742073686f756c642062652067726561746572207468616e203000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e76616c69642076616c756500000000000000000000000000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f496e76616c696420556e7374616b696e67204665652052617465000000000000600082015250565b7f496e76616c6964204c6f636b7570204475726174696f6e000000000000000000600082015250565b7f43616e2774206265207a65726f00000000000000000000000000000000000000600082015250565b7f496e76616c6964204d6f64650000000000000000000000000000000000000000600082015250565b7f496e73756666696369656e742100000000000000000000000000000000000000600082015250565b612e6a816129e0565b8114612e7557600080fd5b50565b612e81816129f2565b8114612e8c57600080fd5b50565b612e9881612a1e565b8114612ea357600080fd5b5056fea2646970667358221220cfe1e5f4e11b46453a16babb249a34295c1e092ff3669509da0360b08189778664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3167 CODESIZE SUB DUP1 PUSH3 0x3167 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xAF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xB7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x67 PUSH3 0x17B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x27B JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xC8 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x5DC PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH3 0x93A80 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH3 0x76A700 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH11 0x27B46536C66C8E3000000 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH11 0x5CA4EC2A79A7F67000000 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1F0 DUP2 PUSH3 0x261 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x20F JUMPI PUSH3 0x20E PUSH3 0x25C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x21F DUP5 DUP3 DUP6 ADD PUSH3 0x1DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x235 DUP3 PUSH3 0x23C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x26C DUP2 PUSH3 0x228 JUMP JUMPDEST DUP2 EQ PUSH3 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2EDC DUP1 PUSH3 0x28B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E1A3786 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xAEDF562B EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xF9931855 EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0xFE600F84 EQ PUSH2 0x3CD JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x7E1A3786 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x91E07E7A EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x2FB JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x4B77DD9E GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x4B77DD9E EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x5715EC11 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x5D2EC65D EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x645A8A56 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x692642E7 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x27B JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x917E776 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x4A4FBEEC EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x4B62B70B EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x220B JUMP JUMPDEST PUSH2 0x407 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x189 PUSH2 0x7D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x21B1 JUMP JUMPDEST PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x220B JUMP JUMPDEST PUSH2 0xC2F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x2265 JUMP JUMPDEST PUSH2 0xCF8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FB PUSH2 0x114E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH2 0x115B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x21B1 JUMP JUMPDEST PUSH2 0x11A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x220B JUMP JUMPDEST PUSH2 0x11F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x283 PUSH2 0x1306 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28D PUSH2 0x138E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x1398 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C9 PUSH2 0x139E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x220B JUMP JUMPDEST PUSH2 0x13C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x220B JUMP JUMPDEST PUSH2 0x14C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x220B JUMP JUMPDEST PUSH2 0x15C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x21B1 JUMP JUMPDEST PUSH2 0x18C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x21B1 JUMP JUMPDEST PUSH2 0x1923 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x399 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x21B1 JUMP JUMPDEST PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B7 PUSH2 0x1A67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x2621 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x21B1 JUMP JUMPDEST PUSH2 0x1A8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x48D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x484 SWAP1 PUSH2 0x275E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP3 GT ISZERO PUSH2 0x4D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CB SWAP1 PUSH2 0x26FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4DC PUSH2 0x1AD9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x539 SWAP2 SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x565 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x2238 JUMP JUMPDEST DUP4 LT PUSH2 0x63F JUMPI PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EA SWAP2 SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x616 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63A SWAP2 SWAP1 PUSH2 0x2238 JUMP JUMPDEST PUSH2 0x641 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x671 PUSH3 0x15180 PUSH2 0x663 DUP6 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x1CAD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 SWAP1 POP PUSH1 0x0 DUP1 DUP6 PUSH1 0x2 ADD SLOAD EQ ISZERO PUSH2 0x6A8 JUMPI PUSH2 0x6A0 PUSH1 0x5 SLOAD DUP7 PUSH1 0x3 ADD SLOAD PUSH2 0x1CD9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP5 PUSH2 0x6B8 SWAP2 SWAP1 PUSH2 0x2A91 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x6C5 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST JUMPDEST SWAP1 POP DUP1 PUSH2 0x6D3 JUMPI PUSH1 0x1 SLOAD SWAP2 POP JUMPDEST PUSH2 0x70C PUSH2 0x6FD PUSH2 0x2710 PUSH2 0x6EF DUP6 DUP9 PUSH2 0x1CEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x1CAD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP PUSH2 0x723 DUP5 PUSH1 0xB SLOAD PUSH2 0x1CAD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x740 DUP5 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x1CAD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x795 CALLER DUP6 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D05 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0x7C6 SWAP3 SWAP2 SWAP1 PUSH2 0x25F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7DE PUSH2 0x1AD9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x866 PUSH2 0x853 PUSH2 0x2710 PUSH2 0x845 PUSH1 0x4 SLOAD DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x1CEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x1CAD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x8AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A2 SWAP1 PUSH2 0x267E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x906 SWAP2 SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x91E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x932 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x956 SWAP2 SWAP1 PUSH2 0x2238 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xA0B JUMPI PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B8 SWAP2 SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA08 SWAP2 SWAP1 PUSH2 0x2238 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xA58 CALLER DUP3 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D05 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0xA93 SWAP3 SWAP2 SWAP1 PUSH2 0x25F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x55 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0xAF4 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ PUSH2 0xBBC JUMPI PUSH1 0x0 PUSH3 0x93A80 PUSH2 0xB99 PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x1CAD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xBA3 SWAP2 SWAP1 PUSH2 0x2A91 JUMP JUMPDEST EQ PUSH2 0xBAF JUMPI PUSH1 0x1 PUSH2 0xBB2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xC14 PUSH1 0xA PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x1CAD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0xC21 JUMPI PUSH1 0x1 PUSH2 0xC24 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC37 PUSH2 0x1D8B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC55 PUSH2 0x139E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA2 SWAP1 PUSH2 0x277E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xCEE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE5 SWAP1 PUSH2 0x281E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xD3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD32 SWAP1 PUSH2 0x275E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD97 SWAP2 SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDC3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDE7 SWAP2 SWAP1 PUSH2 0x2238 JUMP JUMPDEST GT PUSH2 0xE27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE1E SWAP1 PUSH2 0x285E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ ISZERO PUSH2 0xEAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA4 SWAP1 PUSH2 0x271E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xEC8 JUMPI PUSH1 0x0 DUP3 GT PUSH2 0xEC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1008 JUMP JUMPDEST PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xF1B JUMPI PUSH1 0x8 SLOAD DUP3 LT ISZERO PUSH2 0xF16 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0D SWAP1 PUSH2 0x265E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1007 JUMP JUMPDEST PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0xF6E JUMPI PUSH1 0x7 SLOAD DUP3 LT ISZERO PUSH2 0xF69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF60 SWAP1 PUSH2 0x265E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x3 DUP2 EQ ISZERO PUSH2 0xFC1 JUMPI PUSH1 0x6 SLOAD DUP3 LT ISZERO PUSH2 0xFBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB3 SWAP1 PUSH2 0x265E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x0 DUP3 LT PUSH2 0x1004 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFB SWAP1 PUSH2 0x283E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x55 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x9 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x114A DUP3 PUSH2 0x15C7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11F9 PUSH2 0x1D8B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1217 PUSH2 0x139E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x126D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1264 SWAP1 PUSH2 0x277E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x12B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A7 SWAP1 PUSH2 0x27FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12C6 PUSH3 0x15180 DUP3 PUSH2 0x1CEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C DUP2 PUSH1 0x40 MLOAD PUSH2 0x12FB SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x130E PUSH2 0x1D8B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x132C PUSH2 0x139E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1382 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1379 SWAP1 PUSH2 0x277E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x138C PUSH1 0x0 PUSH2 0x1D93 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13CF PUSH2 0x1D8B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13ED PUSH2 0x139E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1443 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x143A SWAP1 PUSH2 0x277E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1486 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x147D SWAP1 PUSH2 0x27DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81 DUP2 PUSH1 0x40 MLOAD PUSH2 0x14BC SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x14CF PUSH2 0x1D8B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14ED PUSH2 0x139E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1543 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153A SWAP1 PUSH2 0x277E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1586 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x157D SWAP1 PUSH2 0x279E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x1946FB78C7CA778B54D82CABAAC5BA67CF446F58D0FF1F8CEAEBB6150E54E44F DUP2 PUSH1 0x40 MLOAD PUSH2 0x15BC SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x160A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1601 SWAP1 PUSH2 0x275E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1666 SWAP2 SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x167E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1692 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16B6 SWAP2 SWAP1 PUSH2 0x2238 JUMP JUMPDEST GT PUSH2 0x16F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16ED SWAP1 PUSH2 0x285E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0x177B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1772 SWAP1 PUSH2 0x269E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1783 PUSH2 0x1AD9 JUMP JUMPDEST PUSH2 0x17D2 CALLER ADDRESS DUP4 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E57 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1827 DUP2 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1CD9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1882 DUP2 PUSH1 0xB SLOAD PUSH2 0x1CD9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x18B9 SWAP3 SWAP2 SWAP1 PUSH2 0x25F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ PUSH2 0x1916 JUMPI PUSH1 0x1 PUSH2 0x1919 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x192B PUSH2 0x1D8B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1949 PUSH2 0x139E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x199F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1996 SWAP1 PUSH2 0x277E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A06 SWAP1 PUSH2 0x26DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A18 DUP2 PUSH2 0x1D93 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x1BC5 PUSH2 0x2710 PUSH2 0x1BB7 PUSH1 0x3 SLOAD PUSH2 0x1BA9 PUSH2 0x1B9A PUSH2 0x21C0 PUSH2 0x1B8C PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD NUMBER PUSH2 0x1CAD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH2 0x1CEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1C1C DUP2 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1CD9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1CBB SWAP2 SWAP1 PUSH2 0x29AC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1CD1 SWAP2 SWAP1 PUSH2 0x2921 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1CE7 SWAP2 SWAP1 PUSH2 0x28CB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1CFD SWAP2 SWAP1 PUSH2 0x2952 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D86 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1D24 SWAP3 SWAP2 SWAP1 PUSH2 0x25F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1EE0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1EDA DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1E78 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1EE0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F42 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FA7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1FA2 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1F62 SWAP2 SWAP1 PUSH2 0x21DE JUMP JUMPDEST PUSH2 0x1FA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F98 SWAP1 PUSH2 0x26BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1FB6 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1FBF JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2004 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FFB SWAP1 PUSH2 0x273E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x200D DUP6 PUSH2 0x20D3 JUMP JUMPDEST PUSH2 0x204C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2043 SWAP1 PUSH2 0x27BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2075 SWAP2 SWAP1 PUSH2 0x258F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x20B2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x20B7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x20C7 DUP3 DUP3 DUP7 PUSH2 0x20F6 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2106 JUMPI DUP3 SWAP1 POP PUSH2 0x2156 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x2119 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x214D SWAP2 SWAP1 PUSH2 0x263C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x216C DUP2 PUSH2 0x2E61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2181 DUP2 PUSH2 0x2E78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2196 DUP2 PUSH2 0x2E8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x21AB DUP2 PUSH2 0x2E8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21C7 JUMPI PUSH2 0x21C6 PUSH2 0x2B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21D5 DUP5 DUP3 DUP6 ADD PUSH2 0x215D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21F4 JUMPI PUSH2 0x21F3 PUSH2 0x2B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2202 DUP5 DUP3 DUP6 ADD PUSH2 0x2172 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2221 JUMPI PUSH2 0x2220 PUSH2 0x2B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x222F DUP5 DUP3 DUP6 ADD PUSH2 0x2187 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x224E JUMPI PUSH2 0x224D PUSH2 0x2B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x225C DUP5 DUP3 DUP6 ADD PUSH2 0x219C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x227C JUMPI PUSH2 0x227B PUSH2 0x2B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x228A DUP6 DUP3 DUP7 ADD PUSH2 0x2187 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x229B DUP6 DUP3 DUP7 ADD PUSH2 0x2187 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x22AE DUP2 PUSH2 0x29E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BF DUP3 PUSH2 0x2899 JUMP JUMPDEST PUSH2 0x22C9 DUP2 DUP6 PUSH2 0x28AF JUMP JUMPDEST SWAP4 POP PUSH2 0x22D9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2A5E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22EE DUP2 PUSH2 0x2A28 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22FF DUP3 PUSH2 0x28A4 JUMP JUMPDEST PUSH2 0x2309 DUP2 DUP6 PUSH2 0x28BA JUMP JUMPDEST SWAP4 POP PUSH2 0x2319 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2A5E JUMP JUMPDEST PUSH2 0x2322 DUP2 PUSH2 0x2B25 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x233A PUSH1 0xC DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x2345 DUP3 PUSH2 0x2B36 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235D PUSH1 0x10 DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x2368 DUP3 PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2380 PUSH1 0x15 DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x238B DUP3 PUSH2 0x2B88 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A3 PUSH1 0x2A DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x23AE DUP3 PUSH2 0x2BB1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23C6 PUSH1 0x26 DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x23D1 DUP3 PUSH2 0x2C00 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E9 PUSH1 0xE DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x23F4 DUP3 PUSH2 0x2C4F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x240C PUSH1 0xF DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x2417 DUP3 PUSH2 0x2C78 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x242F PUSH1 0x26 DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x243A DUP3 PUSH2 0x2CA1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2452 PUSH1 0x1F DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x245D DUP3 PUSH2 0x2CF0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2475 PUSH1 0x20 DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x2480 DUP3 PUSH2 0x2D19 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2498 PUSH1 0xD DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x24A3 DUP3 PUSH2 0x2D42 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24BB PUSH1 0x1D DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x24C6 DUP3 PUSH2 0x2D6B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24DE PUSH1 0x1A DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x24E9 DUP3 PUSH2 0x2D94 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2501 PUSH1 0x17 DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x250C DUP3 PUSH2 0x2DBD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2524 PUSH1 0xD DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x252F DUP3 PUSH2 0x2DE6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2547 PUSH1 0xC DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x2552 DUP3 PUSH2 0x2E0F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x256A PUSH1 0xD DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x2575 DUP3 PUSH2 0x2E38 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2589 DUP2 PUSH2 0x2A1E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x259B DUP3 DUP5 PUSH2 0x22B4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25BB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x25D6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x22A5 JUMP JUMPDEST PUSH2 0x25E3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x22A5 JUMP JUMPDEST PUSH2 0x25F0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2580 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x260D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x22A5 JUMP JUMPDEST PUSH2 0x261A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2580 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2636 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2656 DUP2 DUP5 PUSH2 0x22F4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2677 DUP2 PUSH2 0x232D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2697 DUP2 PUSH2 0x2350 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26B7 DUP2 PUSH2 0x2373 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26D7 DUP2 PUSH2 0x2396 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26F7 DUP2 PUSH2 0x23B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2717 DUP2 PUSH2 0x23DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2737 DUP2 PUSH2 0x23FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2757 DUP2 PUSH2 0x2422 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2777 DUP2 PUSH2 0x2445 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2797 DUP2 PUSH2 0x2468 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27B7 DUP2 PUSH2 0x248B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27D7 DUP2 PUSH2 0x24AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27F7 DUP2 PUSH2 0x24D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2817 DUP2 PUSH2 0x24F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2837 DUP2 PUSH2 0x2517 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2857 DUP2 PUSH2 0x253A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2877 DUP2 PUSH2 0x255D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2893 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2580 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28D6 DUP3 PUSH2 0x2A1E JUMP JUMPDEST SWAP2 POP PUSH2 0x28E1 DUP4 PUSH2 0x2A1E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2916 JUMPI PUSH2 0x2915 PUSH2 0x2AC2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x292C DUP3 PUSH2 0x2A1E JUMP JUMPDEST SWAP2 POP PUSH2 0x2937 DUP4 PUSH2 0x2A1E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2947 JUMPI PUSH2 0x2946 PUSH2 0x2AF1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x295D DUP3 PUSH2 0x2A1E JUMP JUMPDEST SWAP2 POP PUSH2 0x2968 DUP4 PUSH2 0x2A1E JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x29A1 JUMPI PUSH2 0x29A0 PUSH2 0x2AC2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29B7 DUP3 PUSH2 0x2A1E JUMP JUMPDEST SWAP2 POP PUSH2 0x29C2 DUP4 PUSH2 0x2A1E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x29D5 JUMPI PUSH2 0x29D4 PUSH2 0x2AC2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29EB DUP3 PUSH2 0x29FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A33 DUP3 PUSH2 0x2A3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A45 DUP3 PUSH2 0x2A4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A57 DUP3 PUSH2 0x29FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A7C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2A61 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2A8B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A9C DUP3 PUSH2 0x2A1E JUMP JUMPDEST SWAP2 POP PUSH2 0x2AA7 DUP4 PUSH2 0x2A1E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2AB7 JUMPI PUSH2 0x2AB6 PUSH2 0x2AF1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E740000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20636C61696D00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4572726F723A20696E76616C6964207374616B65720000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416C726561647920737461727465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E203000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C69642076616C756500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420556E7374616B696E67204665652052617465000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C6964204C6F636B7570204475726174696F6E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E2774206265207A65726F00000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C6964204D6F64650000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742100000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2E6A DUP2 PUSH2 0x29E0 JUMP JUMPDEST DUP2 EQ PUSH2 0x2E75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2E81 DUP2 PUSH2 0x29F2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2E8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2E98 DUP2 PUSH2 0x2A1E JUMP JUMPDEST DUP2 EQ PUSH2 0x2EA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xE1 0xE5 DELEGATECALL 0xE1 SHL CHAINID GASLIMIT GASPRICE AND 0xBA 0xBB 0x24 SWAP11 CALLVALUE 0x29 0x5C 0x1E MULMOD 0x2F RETURN PUSH7 0x9509DA0360B081 DUP10 PUSH24 0x8664736F6C63430008070033000000000000000000000000 ",
							"sourceMap": "260:8328:7:-:0;;;1629:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1678:6:7;:4;;;:6;;:::i;:::-;1710;1695:5;;:22;;;;;;;;;;;;;;;;;;1629:96;260:8328;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;1733:323:7:-;1793:3;1779:11;:17;;;;1838:4;1818:17;:24;;;;1870:3;1853:14;:20;;;;1899:6;1884:12;:21;;;;1932:7;1916:13;:23;;;;1970:4;1950:17;:24;;;;2005:6;1985:17;:26;;;;2042:6;2022:17;:26;;;;1733:323::o;7:143:8:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;260:8328:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_1129": {
									"entryPoint": 7904,
									"id": 1129,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_489": {
									"entryPoint": 7563,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 7571,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_675": {
									"entryPoint": 7385,
									"id": 675,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_720": {
									"entryPoint": 7363,
									"id": 720,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionCallWithValue_341": {
									"entryPoint": 8127,
									"id": 341,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_271": {
									"entryPoint": 8103,
									"id": 271,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getNumberofStakers_1563": {
									"entryPoint": 4430,
									"id": 1563,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRewardRate_1683": {
									"entryPoint": 5006,
									"id": 1683,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStakerMode_1581": {
									"entryPoint": 6340,
									"id": 1581,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTotalStaked_1554": {
									"entryPoint": 1021,
									"id": 1554,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@harvest_2009": {
									"entryPoint": 2006,
									"id": 2009,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_200": {
									"entryPoint": 8403,
									"id": 200,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isLocked_1649": {
									"entryPoint": 2719,
									"id": 1649,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isStartStaking_1594": {
									"entryPoint": 6797,
									"id": 1594,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_705": {
									"entryPoint": 7407,
									"id": 705,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": 5022,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 4870,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardAmount_1675": {
									"entryPoint": 4517,
									"id": 1675,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@rewardToHarvest_1932": {
									"entryPoint": 4443,
									"id": 1932,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@safeTransferFrom_972": {
									"entryPoint": 7767,
									"id": 972,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_946": {
									"entryPoint": 7429,
									"id": 946,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setEventPeriod_1878": {
									"entryPoint": 4593,
									"id": 1878,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setLockupTime_1920": {
									"entryPoint": 3119,
									"id": 1920,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRewardRate_1852": {
									"entryPoint": 5319,
									"id": 1852,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setUnstakingFeeRate_1901": {
									"entryPoint": 5063,
									"id": 1901,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_1546": {
									"entryPoint": 5575,
									"id": 1546,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakedAmount_1662": {
									"entryPoint": 6683,
									"id": 1662,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@startStaking_1468": {
									"entryPoint": 3320,
									"id": 1468,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_690": {
									"entryPoint": 7341,
									"id": 690,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@token_1187": {
									"entryPoint": 6759,
									"id": 1187,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStaked_1184": {
									"entryPoint": 5016,
									"id": 1184,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 6435,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateReward_1345": {
									"entryPoint": 6873,
									"id": 1345,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResult_476": {
									"entryPoint": 8438,
									"id": 476,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_1829": {
									"entryPoint": 1031,
									"id": 1829,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 8541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 8604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 8760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 8805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack": {
									"entryPoint": 8933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9665,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9720,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed": {
									"entryPoint": 9761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 10366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 10404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 10426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 10529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 10578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 10720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 10738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 10750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 10782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IBEP20_$912_to_t_address": {
									"entryPoint": 10792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 10810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 10828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 10846,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"mod_t_uint256": {
									"entryPoint": 10897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10946,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10993,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 11040,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 11045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11": {
									"entryPoint": 11062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3": {
									"entryPoint": 11103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684": {
									"entryPoint": 11144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082": {
									"entryPoint": 11185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 11264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1": {
									"entryPoint": 11343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6": {
									"entryPoint": 11384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 11425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580": {
									"entryPoint": 11504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 11545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6": {
									"entryPoint": 11586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 11627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3": {
									"entryPoint": 11668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561": {
									"entryPoint": 11709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2": {
									"entryPoint": 11750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062": {
									"entryPoint": 11791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811": {
									"entryPoint": 11832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 11873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 11896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 11919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:26480:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:8",
														"type": ""
													}
												],
												"src": "7:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:8",
														"type": ""
													}
												],
												"src": "152:137:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:8",
														"type": ""
													}
												],
												"src": "295:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "544:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "481:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "497:5:8",
														"type": ""
													}
												],
												"src": "440:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "703:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:8"
															},
															"nodeType": "YulIf",
															"src": "665:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "794:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "809:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "823:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "813:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "838:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "873:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "884:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "869:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "869:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "893:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "848:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "848:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "838:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:8",
														"type": ""
													}
												],
												"src": "589:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "998:271:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1044:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1046:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1046:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1046:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1019:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1028:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1015:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1015:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1040:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1011:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1011:32:8"
															},
															"nodeType": "YulIf",
															"src": "1008:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1137:125:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1152:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1166:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1156:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1181:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1224:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1235:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1220:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1220:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1244:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1191:28:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1191:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1181:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "968:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "979:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "991:6:8",
														"type": ""
													}
												],
												"src": "924:345:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1341:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1387:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1389:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1389:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1389:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1362:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1371:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1358:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1354:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:32:8"
															},
															"nodeType": "YulIf",
															"src": "1351:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1480:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1495:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1509:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1499:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1524:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1559:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1570:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1555:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1555:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1579:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1534:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1534:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1524:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1311:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1322:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1334:6:8",
														"type": ""
													}
												],
												"src": "1275:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1687:274:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1733:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1735:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1735:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1735:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1708:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1717:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1704:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1704:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1729:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1700:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:32:8"
															},
															"nodeType": "YulIf",
															"src": "1697:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1826:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1841:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1855:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1845:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1870:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1916:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1927:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1912:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1912:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1936:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1880:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1880:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1870:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1657:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1668:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1680:6:8",
														"type": ""
													}
												],
												"src": "1610:351:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2050:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2096:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2098:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2098:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2098:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2071:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2080:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2067:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2067:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2092:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2063:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2063:32:8"
															},
															"nodeType": "YulIf",
															"src": "2060:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2189:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2204:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2218:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2208:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2233:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2268:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2279:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2264:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2264:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2288:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2243:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2243:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2233:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2316:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2331:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2345:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2335:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2361:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2396:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2407:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2392:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2392:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2416:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2371:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2371:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2361:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2012:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2023:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2035:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2043:6:8",
														"type": ""
													}
												],
												"src": "1967:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2512:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2529:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2552:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2534:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2534:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2522:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2522:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2522:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2500:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2507:3:8",
														"type": ""
													}
												],
												"src": "2447:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2679:265:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2689:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2735:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2703:31:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2703:38:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2693:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2750:95:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2833:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2838:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2757:75:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2757:88:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2750:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2880:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2887:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2876:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2876:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2894:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2899:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2854:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2854:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2854:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2915:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2926:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2931:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2922:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2922:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2915:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2660:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2667:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2675:3:8",
														"type": ""
													}
												],
												"src": "2571:373:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3029:80:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3046:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IBEP20_$912_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3051:44:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3051:51:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3039:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3039:64:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3039:64:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3017:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3024:3:8",
														"type": ""
													}
												],
												"src": "2950:159:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3207:272:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3217:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3264:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3231:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3231:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3221:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3279:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3345:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3350:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3286:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3286:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3279:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3392:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3399:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3388:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3388:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3406:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3411:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3366:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3366:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3366:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3427:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3438:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3465:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3443:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3443:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3434:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3434:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3427:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3188:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3195:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3203:3:8",
														"type": ""
													}
												],
												"src": "3115:364:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3631:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3641:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3707:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3712:2:8",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3648:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3648:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3641:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3813:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																	"nodeType": "YulIdentifier",
																	"src": "3724:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3724:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3724:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3826:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3837:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3842:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3833:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3833:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3826:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3619:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3627:3:8",
														"type": ""
													}
												],
												"src": "3485:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4003:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4013:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4079:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4084:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4020:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4020:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4013:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4185:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																	"nodeType": "YulIdentifier",
																	"src": "4096:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4096:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4096:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4198:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4209:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4205:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4205:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4198:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3991:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3999:3:8",
														"type": ""
													}
												],
												"src": "3857:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4375:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4385:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4451:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4456:2:8",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4392:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4392:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4385:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4557:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
																	"nodeType": "YulIdentifier",
																	"src": "4468:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4468:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4468:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4570:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4581:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4586:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4577:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4577:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4570:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4363:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4371:3:8",
														"type": ""
													}
												],
												"src": "4229:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4747:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4757:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4823:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4828:2:8",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4764:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4764:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4757:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4929:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																	"nodeType": "YulIdentifier",
																	"src": "4840:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4840:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4840:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4942:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4953:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4958:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4949:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4949:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4942:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4735:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4743:3:8",
														"type": ""
													}
												],
												"src": "4601:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5119:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5129:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5195:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5200:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5136:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5136:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5129:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5301:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "5212:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5212:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5314:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5325:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5330:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5321:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5314:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5107:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5115:3:8",
														"type": ""
													}
												],
												"src": "4973:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5491:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5501:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5567:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5572:2:8",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5508:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5508:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5501:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5673:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																	"nodeType": "YulIdentifier",
																	"src": "5584:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5584:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5584:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5686:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5697:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5702:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5693:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5693:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5686:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5479:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5487:3:8",
														"type": ""
													}
												],
												"src": "5345:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5863:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5873:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5939:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5944:2:8",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5880:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5880:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5873:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6045:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
																	"nodeType": "YulIdentifier",
																	"src": "5956:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5956:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5956:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6058:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6069:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6074:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6065:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6065:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6058:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5851:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5859:3:8",
														"type": ""
													}
												],
												"src": "5717:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6235:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6245:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6311:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6316:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6252:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6252:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6245:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6417:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "6328:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6328:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6328:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6430:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6441:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6446:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6437:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6437:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6430:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6223:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6231:3:8",
														"type": ""
													}
												],
												"src": "6089:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6607:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6617:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6683:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6688:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6624:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6624:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6617:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6789:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																	"nodeType": "YulIdentifier",
																	"src": "6700:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6700:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6700:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6802:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6813:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6818:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6809:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6809:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6802:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6595:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6603:3:8",
														"type": ""
													}
												],
												"src": "6461:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6979:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6989:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7055:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7060:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6996:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6996:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6989:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7161:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "7072:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7072:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7072:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7174:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7185:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7190:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7181:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7181:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7174:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6967:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6975:3:8",
														"type": ""
													}
												],
												"src": "6833:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7351:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7361:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7427:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7432:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7368:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7368:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7361:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7533:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
																	"nodeType": "YulIdentifier",
																	"src": "7444:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7444:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7444:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7546:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7557:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7562:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7553:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7553:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7546:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7339:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7347:3:8",
														"type": ""
													}
												],
												"src": "7205:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7723:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7733:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7799:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7804:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7740:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7740:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7733:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7905:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "7816:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7816:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7816:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7918:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7929:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7934:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7925:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7925:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7918:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7711:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7719:3:8",
														"type": ""
													}
												],
												"src": "7577:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8095:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8105:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8171:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8176:2:8",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8112:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8112:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8105:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8277:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																	"nodeType": "YulIdentifier",
																	"src": "8188:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8188:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8188:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8290:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8301:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8306:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8297:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8297:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8290:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8083:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8091:3:8",
														"type": ""
													}
												],
												"src": "7949:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8467:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8477:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8543:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8548:2:8",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8484:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8484:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8477:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8649:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																	"nodeType": "YulIdentifier",
																	"src": "8560:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8560:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8560:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8662:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8673:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8678:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8669:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8669:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8662:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8455:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8463:3:8",
														"type": ""
													}
												],
												"src": "8321:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8839:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8849:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8915:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8920:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8856:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8856:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8849:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9021:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																	"nodeType": "YulIdentifier",
																	"src": "8932:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8932:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8932:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9034:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9045:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9050:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9041:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9041:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9034:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8827:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8835:3:8",
														"type": ""
													}
												],
												"src": "8693:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9211:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9221:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9287:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9292:2:8",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9228:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9228:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9221:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9393:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062",
																	"nodeType": "YulIdentifier",
																	"src": "9304:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9304:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9304:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9406:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9417:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9422:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9413:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9413:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9406:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9199:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9207:3:8",
														"type": ""
													}
												],
												"src": "9065:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9583:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9593:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9659:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9664:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9600:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9600:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9593:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9765:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																	"nodeType": "YulIdentifier",
																	"src": "9676:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9676:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9676:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9778:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9789:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9794:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9785:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9785:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9778:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9571:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9579:3:8",
														"type": ""
													}
												],
												"src": "9437:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9874:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9891:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9914:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9896:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9896:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9884:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9884:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9884:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9862:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9869:3:8",
														"type": ""
													}
												],
												"src": "9809:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10067:137:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10078:100:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10165:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10174:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10085:79:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10085:93:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10078:3:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10188:10:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10195:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10188:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10046:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10052:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10063:3:8",
														"type": ""
													}
												],
												"src": "9933:271:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10308:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10318:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10330:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10341:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10326:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10326:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10318:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10398:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10411:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10422:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10407:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10407:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10354:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10354:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10354:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10280:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10292:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10303:4:8",
														"type": ""
													}
												],
												"src": "10210:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10592:288:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10602:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10614:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10625:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10610:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10610:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10602:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10682:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10695:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10706:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10691:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10691:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10638:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10638:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10638:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10763:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10776:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10787:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10772:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10772:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10719:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10719:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10719:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10845:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10858:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10869:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10854:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10854:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10801:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10801:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10801:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10548:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10560:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10568:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10576:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10587:4:8",
														"type": ""
													}
												],
												"src": "10438:442:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11012:206:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11022:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11034:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11045:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11030:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11030:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11022:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11102:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11115:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11126:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11111:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11111:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11058:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11058:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11058:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11183:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11196:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11207:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11192:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11192:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11139:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11139:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11139:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10976:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10988:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10996:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11007:4:8",
														"type": ""
													}
												],
												"src": "10886:332:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11336:138:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11346:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11358:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11369:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11354:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11354:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11346:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11440:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11453:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11464:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11449:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11449:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11382:57:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11382:85:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11382:85:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11308:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11320:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11331:4:8",
														"type": ""
													}
												],
												"src": "11224:250:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11598:195:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11608:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11620:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11631:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11616:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11616:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11608:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11655:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11666:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11651:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11651:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11674:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11680:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11670:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11670:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11644:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11644:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11644:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11700:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11772:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11781:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11708:63:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11708:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11700:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11570:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11582:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11593:4:8",
														"type": ""
													}
												],
												"src": "11480:313:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11970:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11980:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11992:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12003:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11988:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11988:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11980:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12027:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12038:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12023:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12023:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12046:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12052:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12042:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12042:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12016:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12016:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12016:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12072:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12206:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12080:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12080:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12072:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11950:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11965:4:8",
														"type": ""
													}
												],
												"src": "11799:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12395:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12405:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12417:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12428:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12413:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12413:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12405:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12452:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12463:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12448:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12448:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12471:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12477:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12467:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12467:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12441:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12441:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12441:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12497:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12631:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12505:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12505:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12497:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12375:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12390:4:8",
														"type": ""
													}
												],
												"src": "12224:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12820:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12830:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12842:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12853:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12838:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12838:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12830:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12877:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12888:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12873:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12873:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12896:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12902:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12892:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12892:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12866:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12866:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12866:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12922:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13056:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12930:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12930:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12922:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12800:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12815:4:8",
														"type": ""
													}
												],
												"src": "12649:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13245:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13255:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13267:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13278:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13263:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13263:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13255:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13302:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13313:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13298:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13298:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13321:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13327:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13317:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13317:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13291:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13291:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13291:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13347:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13481:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13355:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13355:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13347:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13225:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13240:4:8",
														"type": ""
													}
												],
												"src": "13074:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13670:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13680:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13692:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13703:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13688:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13688:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13680:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13727:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13738:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13723:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13723:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13746:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13752:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13742:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13742:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13716:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13716:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13716:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13772:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13906:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13780:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13780:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13772:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13650:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13665:4:8",
														"type": ""
													}
												],
												"src": "13499:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14095:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14105:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14117:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14128:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14113:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14113:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14105:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14152:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14163:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14148:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14148:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14171:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14177:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14167:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14167:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14141:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14141:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14141:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14197:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14331:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14205:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14205:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14197:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14075:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14090:4:8",
														"type": ""
													}
												],
												"src": "13924:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14520:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14530:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14542:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14553:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14538:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14538:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14530:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14577:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14588:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14573:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14573:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14596:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14602:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14592:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14592:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14566:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14566:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14566:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14622:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14756:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14630:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14630:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14622:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14500:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14515:4:8",
														"type": ""
													}
												],
												"src": "14349:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14945:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14955:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14967:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14978:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14963:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14963:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14955:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15002:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15013:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14998:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14998:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15021:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15027:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15017:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15017:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14991:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14991:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14991:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15047:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15181:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15055:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15055:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15047:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14925:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14940:4:8",
														"type": ""
													}
												],
												"src": "14774:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15370:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15380:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15392:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15403:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15388:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15388:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15380:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15427:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15438:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15423:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15423:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15446:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15452:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15442:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15442:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15416:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15416:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15416:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15472:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15606:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15480:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15480:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15472:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15350:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15365:4:8",
														"type": ""
													}
												],
												"src": "15199:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15795:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15805:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15817:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15828:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15813:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15813:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15805:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15852:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15863:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15848:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15848:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15871:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15877:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15867:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15867:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15841:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15841:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15841:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15897:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16031:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15905:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15905:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15897:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15775:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15790:4:8",
														"type": ""
													}
												],
												"src": "15624:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16220:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16230:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16242:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16253:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16238:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16238:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16230:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16277:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16288:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16273:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16273:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16296:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16302:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16292:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16292:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16266:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16266:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16266:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16322:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16456:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16330:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16330:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16322:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16200:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16215:4:8",
														"type": ""
													}
												],
												"src": "16049:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16645:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16655:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16667:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16678:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16663:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16663:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16655:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16702:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16713:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16698:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16698:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16721:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16727:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16717:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16717:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16691:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16691:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16691:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16747:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16881:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16755:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16755:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16747:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16625:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16640:4:8",
														"type": ""
													}
												],
												"src": "16474:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17070:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17080:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17092:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17103:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17088:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17088:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17080:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17127:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17138:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17123:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17123:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17146:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17152:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17142:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17142:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17116:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17116:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17116:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17172:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17306:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17180:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17180:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17172:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17050:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17065:4:8",
														"type": ""
													}
												],
												"src": "16899:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17495:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17505:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17517:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17528:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17513:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17513:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17505:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17552:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17563:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17548:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17548:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17571:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17577:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17567:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17567:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17541:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17541:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17541:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17597:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17731:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17605:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17605:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17597:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17475:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17490:4:8",
														"type": ""
													}
												],
												"src": "17324:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17920:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17930:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17942:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17953:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17938:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17938:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17930:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17977:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17988:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17973:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17973:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17996:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18002:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17992:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17992:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17966:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17966:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17966:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18022:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18156:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18030:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18030:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18022:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17900:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17915:4:8",
														"type": ""
													}
												],
												"src": "17749:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18345:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18355:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18367:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18378:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18363:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18363:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18355:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18402:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18413:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18398:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18398:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18421:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18427:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18417:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18417:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18391:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18391:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18391:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18447:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18581:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18455:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18455:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18447:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18325:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18340:4:8",
														"type": ""
													}
												],
												"src": "18174:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18770:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18780:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18792:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18803:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18788:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18788:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18780:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18827:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18838:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18823:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18823:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18846:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18852:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18842:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18842:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18816:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18816:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18816:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18872:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19006:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18880:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18880:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18872:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18750:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18765:4:8",
														"type": ""
													}
												],
												"src": "18599:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19122:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19132:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19144:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19155:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19140:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19140:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19132:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19212:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19225:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19236:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19221:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19221:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19168:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19168:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19168:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19094:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19106:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19117:4:8",
														"type": ""
													}
												],
												"src": "19024:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19292:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19302:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19318:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19312:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19312:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "19302:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19285:6:8",
														"type": ""
													}
												],
												"src": "19252:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19391:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19402:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19418:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19412:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19412:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "19402:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19374:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "19384:6:8",
														"type": ""
													}
												],
												"src": "19333:98:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19496:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19507:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19523:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19517:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19517:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "19507:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19479:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "19489:6:8",
														"type": ""
													}
												],
												"src": "19437:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19655:34:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19665:18:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "19680:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "19665:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19627:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "19632:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "19643:11:8",
														"type": ""
													}
												],
												"src": "19542:147:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19791:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19808:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19813:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19801:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19801:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19801:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19829:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19848:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19853:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19844:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19844:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "19829:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19763:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "19768:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "19779:11:8",
														"type": ""
													}
												],
												"src": "19695:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19914:261:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19924:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19947:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19929:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19929:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19924:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19958:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19981:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19963:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19963:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19958:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20121:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20123:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20123:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20123:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20042:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20049:66:8",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "20117:1:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20045:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20045:74:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20039:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20039:81:8"
															},
															"nodeType": "YulIf",
															"src": "20036:107:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20153:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20164:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20167:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20160:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20160:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "20153:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19901:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19904:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "19910:3:8",
														"type": ""
													}
												],
												"src": "19870:305:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20223:143:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20233:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20256:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20238:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20238:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "20233:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20267:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20290:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20272:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20272:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "20267:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20314:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "20316:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20316:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20316:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20311:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20304:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20304:9:8"
															},
															"nodeType": "YulIf",
															"src": "20301:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20346:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20355:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20358:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "20351:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20351:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "20346:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20212:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20215:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "20221:1:8",
														"type": ""
													}
												],
												"src": "20181:185:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20420:300:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20430:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20453:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20435:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20435:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "20430:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20464:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20487:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20469:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20469:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "20464:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20662:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20664:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20664:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20664:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "20574:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "20567:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20567:9:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "20560:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20560:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "20582:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20589:66:8",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "20657:1:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "20585:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20585:74:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "20579:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20579:81:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20556:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20556:105:8"
															},
															"nodeType": "YulIf",
															"src": "20553:131:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20694:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20709:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20712:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "20705:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20705:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "20694:7:8"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20403:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20406:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "20412:7:8",
														"type": ""
													}
												],
												"src": "20372:348:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20771:146:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20781:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20804:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20786:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20786:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "20781:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20815:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20838:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20820:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20820:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "20815:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20862:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20864:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20864:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20864:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20856:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20859:1:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "20853:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20853:8:8"
															},
															"nodeType": "YulIf",
															"src": "20850:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20894:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20906:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20909:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "20902:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20902:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "20894:4:8"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20757:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20760:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "20766:4:8",
														"type": ""
													}
												],
												"src": "20726:191:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20968:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20978:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21007:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "20989:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20989:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "20978:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20950:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "20960:7:8",
														"type": ""
													}
												],
												"src": "20923:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21067:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21077:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21102:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "21095:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21095:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21088:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21088:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "21077:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21049:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "21059:7:8",
														"type": ""
													}
												],
												"src": "21025:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21166:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21176:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21191:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21198:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21187:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21187:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "21176:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21148:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "21158:7:8",
														"type": ""
													}
												],
												"src": "21121:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21298:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21308:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "21319:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "21308:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21280:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "21290:7:8",
														"type": ""
													}
												],
												"src": "21253:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21410:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21420:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21464:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "21433:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21433:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "21420:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IBEP20_$912_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21390:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "21400:9:8",
														"type": ""
													}
												],
												"src": "21336:140:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21542:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21552:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21596:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "21565:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21565:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "21552:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21522:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "21532:9:8",
														"type": ""
													}
												],
												"src": "21482:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21674:53:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21684:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21715:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "21697:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21697:24:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "21684:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21654:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "21664:9:8",
														"type": ""
													}
												],
												"src": "21614:113:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21782:258:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21792:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "21801:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "21796:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21861:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "21886:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "21891:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "21882:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21882:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "21905:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "21910:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "21901:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "21901:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "21895:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21895:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "21875:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21875:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21875:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "21822:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21825:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "21819:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21819:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "21833:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "21835:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "21844:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21847:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "21840:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21840:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "21835:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "21815:3:8",
																"statements": []
															},
															"src": "21811:113:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21958:76:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "22008:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "22013:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "22004:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "22004:16:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22022:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "21997:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21997:27:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21997:27:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "21939:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21942:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "21936:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "21936:13:8"
															},
															"nodeType": "YulIf",
															"src": "21933:101:8"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "21764:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "21769:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21774:6:8",
														"type": ""
													}
												],
												"src": "21733:307:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22080:142:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22090:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22113:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22095:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22095:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "22090:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22124:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22147:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22129:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22129:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "22124:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22171:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "22173:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22173:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22173:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22168:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22161:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22161:9:8"
															},
															"nodeType": "YulIf",
															"src": "22158:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22202:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22211:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22214:1:8"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "22207:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22207:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "22202:1:8"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "22069:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "22072:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "22078:1:8",
														"type": ""
													}
												],
												"src": "22046:176:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22256:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22273:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22276:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22266:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22266:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22266:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22370:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22373:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22363:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22363:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22363:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22394:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22397:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22387:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22387:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22387:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "22228:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22442:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22459:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22462:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22452:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22452:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22452:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22556:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22559:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22549:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22549:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22549:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22580:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22583:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22573:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22573:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22573:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "22414:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22689:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22706:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22709:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22699:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22699:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22699:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "22600:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22812:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22829:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22832:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22822:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22822:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22822:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "22723:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22894:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22904:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22922:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22929:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22918:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22918:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22938:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "22934:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22934:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "22914:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "22914:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "22904:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22877:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "22887:6:8",
														"type": ""
													}
												],
												"src": "22846:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23060:56:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23082:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23090:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23078:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23078:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23094:14:8",
																		"type": "",
																		"value": "Insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23071:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23071:38:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23071:38:8"
														}
													]
												},
												"name": "store_literal_in_memory_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23052:6:8",
														"type": ""
													}
												],
												"src": "22954:162:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23228:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23250:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23258:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23246:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23246:14:8"
																	},
																	{
																		"hexValue": "4e6f7468696e6720746f20636c61696d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23262:18:8",
																		"type": "",
																		"value": "Nothing to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23239:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23239:42:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23239:42:8"
														}
													]
												},
												"name": "store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23220:6:8",
														"type": ""
													}
												],
												"src": "23122:166:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23400:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23422:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23430:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23418:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23418:14:8"
																	},
																	{
																		"hexValue": "4572726f723a20696e76616c6964207374616b6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23434:23:8",
																		"type": "",
																		"value": "Error: invalid staker"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23411:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23411:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23411:47:8"
														}
													]
												},
												"name": "store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23392:6:8",
														"type": ""
													}
												],
												"src": "23294:171:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23577:123:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23599:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23607:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23595:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23595:14:8"
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23611:34:8",
																		"type": "",
																		"value": "SafeBEP20: BEP20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23588:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23588:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23588:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23667:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23675:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23663:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23663:15:8"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23680:12:8",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23656:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23656:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23656:37:8"
														}
													]
												},
												"name": "store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23569:6:8",
														"type": ""
													}
												],
												"src": "23471:229:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23812:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23834:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23842:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23830:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23830:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23846:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23823:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23823:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23823:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23902:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23910:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23898:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23898:15:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23915:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23891:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "23891:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23891:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23804:6:8",
														"type": ""
													}
												],
												"src": "23706:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24043:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24065:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24073:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24061:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24061:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24077:16:8",
																		"type": "",
																		"value": "Invalid amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24054:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24054:40:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24054:40:8"
														}
													]
												},
												"name": "store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24035:6:8",
														"type": ""
													}
												],
												"src": "23937:164:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24213:59:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24235:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24243:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24231:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24231:14:8"
																	},
																	{
																		"hexValue": "416c72656164792073746172746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24247:17:8",
																		"type": "",
																		"value": "Already started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24224:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24224:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24224:41:8"
														}
													]
												},
												"name": "store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24205:6:8",
														"type": ""
													}
												],
												"src": "24107:165:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24384:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24406:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24414:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24402:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24402:14:8"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24418:34:8",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24395:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24395:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24395:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24474:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24482:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24470:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24470:15:8"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24487:8:8",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24463:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24463:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24463:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24376:6:8",
														"type": ""
													}
												],
												"src": "24278:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24615:75:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24637:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24645:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24633:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24633:14:8"
																	},
																	{
																		"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24649:33:8",
																		"type": "",
																		"value": "Amount should be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24626:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24626:57:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24626:57:8"
														}
													]
												},
												"name": "store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24607:6:8",
														"type": ""
													}
												],
												"src": "24509:181:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24802:76:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24824:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24832:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24820:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24820:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24836:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24813:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "24813:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24813:58:8"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24794:6:8",
														"type": ""
													}
												],
												"src": "24696:182:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24990:57:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25012:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25020:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25008:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25008:14:8"
																	},
																	{
																		"hexValue": "496e76616c69642076616c7565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25024:15:8",
																		"type": "",
																		"value": "Invalid value"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25001:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25001:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25001:39:8"
														}
													]
												},
												"name": "store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24982:6:8",
														"type": ""
													}
												],
												"src": "24884:163:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25159:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25181:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25189:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25177:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25177:14:8"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25193:31:8",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25170:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25170:55:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25170:55:8"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25151:6:8",
														"type": ""
													}
												],
												"src": "25053:179:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25344:70:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25366:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25374:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25362:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25362:14:8"
																	},
																	{
																		"hexValue": "496e76616c696420556e7374616b696e67204665652052617465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25378:28:8",
																		"type": "",
																		"value": "Invalid Unstaking Fee Rate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25355:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25355:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25355:52:8"
														}
													]
												},
												"name": "store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25336:6:8",
														"type": ""
													}
												],
												"src": "25238:176:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25526:67:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25548:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25556:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25544:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25544:14:8"
																	},
																	{
																		"hexValue": "496e76616c6964204c6f636b7570204475726174696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25560:25:8",
																		"type": "",
																		"value": "Invalid Lockup Duration"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25537:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25537:49:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25537:49:8"
														}
													]
												},
												"name": "store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25518:6:8",
														"type": ""
													}
												],
												"src": "25420:173:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25705:57:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25727:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25735:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25723:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25723:14:8"
																	},
																	{
																		"hexValue": "43616e2774206265207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25739:15:8",
																		"type": "",
																		"value": "Can't be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25716:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25716:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25716:39:8"
														}
													]
												},
												"name": "store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25697:6:8",
														"type": ""
													}
												],
												"src": "25599:163:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25874:56:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25896:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25904:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25892:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25892:14:8"
																	},
																	{
																		"hexValue": "496e76616c6964204d6f6465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25908:14:8",
																		"type": "",
																		"value": "Invalid Mode"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25885:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "25885:38:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25885:38:8"
														}
													]
												},
												"name": "store_literal_in_memory_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25866:6:8",
														"type": ""
													}
												],
												"src": "25768:162:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26042:57:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26064:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26072:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26060:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26060:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e7421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26076:15:8",
																		"type": "",
																		"value": "Insufficient!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26053:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26053:39:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26053:39:8"
														}
													]
												},
												"name": "store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26034:6:8",
														"type": ""
													}
												],
												"src": "25936:163:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26148:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26205:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26214:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26217:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "26207:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26207:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26207:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26171:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "26196:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "26178:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "26178:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "26168:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26168:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "26161:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26161:43:8"
															},
															"nodeType": "YulIf",
															"src": "26158:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26141:5:8",
														"type": ""
													}
												],
												"src": "26105:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26273:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26327:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26336:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26339:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "26329:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26329:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26329:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26296:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "26318:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "26303:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "26303:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "26293:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26293:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "26286:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26286:40:8"
															},
															"nodeType": "YulIf",
															"src": "26283:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26266:5:8",
														"type": ""
													}
												],
												"src": "26233:116:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26398:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26455:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26464:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26467:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "26457:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26457:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26457:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26421:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "26446:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "26428:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "26428:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "26418:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26418:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "26411:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "26411:43:8"
															},
															"nodeType": "YulIf",
															"src": "26408:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26391:5:8",
														"type": ""
													}
												],
												"src": "26355:122:8"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IBEP20_$912_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IBEP20_$912__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IBEP20_$912_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IBEP20_$912_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient\")\n\n    }\n\n    function store_literal_in_memory_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Nothing to claim\")\n\n    }\n\n    function store_literal_in_memory_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error: invalid staker\")\n\n    }\n\n    function store_literal_in_memory_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeBEP20: BEP20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid amount\")\n\n    }\n\n    function store_literal_in_memory_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already started\")\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function store_literal_in_memory_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount should be greater than 0\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid value\")\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function store_literal_in_memory_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Unstaking Fee Rate\")\n\n    }\n\n    function store_literal_in_memory_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Lockup Duration\")\n\n    }\n\n    function store_literal_in_memory_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can't be zero\")\n\n    }\n\n    function store_literal_in_memory_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Mode\")\n\n    }\n\n    function store_literal_in_memory_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient!\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101425760003560e01c80637e1a3786116100b8578063a694fc3a1161007c578063a694fc3a14610317578063aedf562b14610333578063f2fde38b14610363578063f99318551461037f578063fc0c546a146103af578063fe600f84146103cd57610142565b80637e1a378614610285578063817b1cd2146102a35780638da5cb5b146102c157806391e07e7a146102df5780639e447fc6146102fb57610142565b80634b77dd9e1161010a5780634b77dd9e146101d75780635715ec11146101f35780635d2ec65d14610211578063645a8a561461022f578063692642e71461025f578063715018a61461027b57610142565b80630917e776146101475780632e1a7d4d146101655780634641257d146101815780634a4fbeec1461018b5780634b62b70b146101bb575b600080fd5b61014f6103fd565b60405161015c919061287e565b60405180910390f35b61017f600480360381019061017a919061220b565b610407565b005b6101896107d6565b005b6101a560048036038101906101a091906121b1565b610a9f565b6040516101b2919061287e565b60405180910390f35b6101d560048036038101906101d0919061220b565b610c2f565b005b6101f160048036038101906101ec9190612265565b610cf8565b005b6101fb61114e565b604051610208919061287e565b60405180910390f35b61021961115b565b604051610226919061287e565b60405180910390f35b610249600480360381019061024491906121b1565b6111a5565b604051610256919061287e565b60405180910390f35b6102796004803603810190610274919061220b565b6111f1565b005b610283611306565b005b61028d61138e565b60405161029a919061287e565b60405180910390f35b6102ab611398565b6040516102b8919061287e565b60405180910390f35b6102c961139e565b6040516102d691906125a6565b60405180910390f35b6102f960048036038101906102f4919061220b565b6113c7565b005b6103156004803603810190610310919061220b565b6114c7565b005b610331600480360381019061032c919061220b565b6115c7565b005b61034d600480360381019061034891906121b1565b6118c4565b60405161035a919061287e565b60405180910390f35b61037d600480360381019061037891906121b1565b611923565b005b610399600480360381019061039491906121b1565b611a1b565b6040516103a6919061287e565b60405180910390f35b6103b7611a67565b6040516103c49190612621565b60405180910390f35b6103e760048036038101906103e291906121b1565b611a8d565b6040516103f4919061287e565b60405180910390f35b6000600b54905090565b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000821161048d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104849061275e565b60405180910390fd5b80600101548211156104d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cb906126fe565b60405180910390fd5b6104dc611ad9565b6000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161053991906125a6565b60206040518083038186803b15801561055157600080fd5b505afa158015610565573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105899190612238565b831061063f57600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105ea91906125a6565b60206040518083038186803b15801561060257600080fd5b505afa158015610616573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063a9190612238565b610641565b825b9050600061067162015180610663856003015442611cad90919063ffffffff16565b611cc390919063ffffffff16565b9050600060649050600080856002015414156106a8576106a06005548660030154611cd990919063ffffffff16565b4210156106c6565b6000600254846106b89190612a91565b1480156106c55750600083115b5b9050806106d35760015491505b61070c6106fd6127106106ef8588611cef90919063ffffffff16565b611cc390919063ffffffff16565b85611cad90919063ffffffff16565b935061072384600b54611cad90919063ffffffff16565b600b81905550610740848660010154611cad90919063ffffffff16565b85600101819055506107953385600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d059092919063ffffffff16565b7f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436433856040516107c69291906125f8565b60405180910390a1505050505050565b6107de611ad9565b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060006108666108536127106108456004548660000154611cef90919063ffffffff16565b611cc390919063ffffffff16565b8360000154611cad90919063ffffffff16565b9050600081116108ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a29061267e565b60405180910390fd5b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161090691906125a6565b60206040518083038186803b15801561091e57600080fd5b505afa158015610932573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109569190612238565b811115610a0b57600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109b891906125a6565b60206040518083038186803b1580156109d057600080fd5b505afa1580156109e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a089190612238565b90505b610a583382600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d059092919063ffffffff16565b600082600001819055507fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba3382604051610a939291906125f8565b60405180910390a15050565b60006055600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005015414610af45760019050610c2a565b6000600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015414610bbc57600062093a80610b99600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015442611cad90919063ffffffff16565b610ba39190612a91565b14610baf576001610bb2565b60005b60ff169050610c2a565b600554610c14600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015442611cad90919063ffffffff16565b1015610c21576001610c24565b60005b60ff1690505b919050565b610c37611d8b565b73ffffffffffffffffffffffffffffffffffffffff16610c5561139e565b73ffffffffffffffffffffffffffffffffffffffff1614610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca29061277e565b60405180910390fd5b60008111610cee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce59061281e565b60405180910390fd5b8060058190555050565b60008211610d3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d329061275e565b60405180910390fd5b81600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610d9791906125a6565b60206040518083038186803b158015610daf57600080fd5b505afa158015610dc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de79190612238565b11610e27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1e9061285e565b60405180910390fd5b6055600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501541415610ead576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea49061271e565b60405180910390fd5b6000811415610ec85760008211610ec357600080fd5b611008565b6001811415610f1b57600854821015610f16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0d9061265e565b60405180910390fd5b611007565b6002811415610f6e57600754821015610f69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f609061265e565b60405180910390fd5b611006565b6003811415610fc157600654821015610fbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb39061265e565b60405180910390fd5b611005565b60008210611004576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ffb9061283e565b60405180910390fd5b5b5b5b5b80600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555042600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506055600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501819055506009339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061114a826115c7565b5050565b6000600980549050905090565b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b6111f9611d8b565b73ffffffffffffffffffffffffffffffffffffffff1661121761139e565b73ffffffffffffffffffffffffffffffffffffffff161461126d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112649061277e565b60405180910390fd5b600081116112b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a7906127fe565b60405180910390fd5b6112c66201518082611cef90919063ffffffff16565b6002819055507f189bda9782663c67a3f95c0aa5455924c711210b00281c60ead2f0dd8dbc924c816040516112fb919061287e565b60405180910390a150565b61130e611d8b565b73ffffffffffffffffffffffffffffffffffffffff1661132c61139e565b73ffffffffffffffffffffffffffffffffffffffff1614611382576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113799061277e565b60405180910390fd5b61138c6000611d93565b565b6000600354905090565b600b5481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6113cf611d8b565b73ffffffffffffffffffffffffffffffffffffffff166113ed61139e565b73ffffffffffffffffffffffffffffffffffffffff1614611443576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143a9061277e565b60405180910390fd5b60008111611486576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147d906127de565b60405180910390fd5b806001819055507f150c688dd7595bf7862b8ab1fe46756450eb7d731037942b3bbc46f3f0e21b81816040516114bc919061287e565b60405180910390a150565b6114cf611d8b565b73ffffffffffffffffffffffffffffffffffffffff166114ed61139e565b73ffffffffffffffffffffffffffffffffffffffff1614611543576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153a9061277e565b60405180910390fd5b60008111611586576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157d9061279e565b60405180910390fd5b806003819055507f1946fb78c7ca778b54d82cabaac5ba67cf446f58d0ff1f8ceaebb6150e54e44f816040516115bc919061287e565b60405180910390a150565b6000811161160a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116019061275e565b60405180910390fd5b80600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161166691906125a6565b60206040518083038186803b15801561167e57600080fd5b505afa158015611692573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b69190612238565b116116f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ed9061285e565b60405180910390fd5b6055600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501541461177b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117729061269e565b60405180910390fd5b611783611ad9565b6117d2333083600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611e57909392919063ffffffff16565b61182781600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154611cd990919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555061188281600b54611cd990919063ffffffff16565b600b819055507f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d33826040516118b99291906125f8565b60405180910390a150565b600080600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015414611916576001611919565b60005b60ff169050919050565b61192b611d8b565b73ffffffffffffffffffffffffffffffffffffffff1661194961139e565b73ffffffffffffffffffffffffffffffffffffffff161461199f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119969061277e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611a0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a06906126de565b60405180910390fd5b611a1881611d93565b50565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501549050919050565b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490506000611bc5612710611bb7600354611ba9611b9a6121c0611b8c600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004015443611cad90919063ffffffff16565b611cc390919063ffffffff16565b87611cef90919063ffffffff16565b611cef90919063ffffffff16565b611cc390919063ffffffff16565b9050611c1c81600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154611cd990919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555043600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401819055505050565b60008183611cbb91906129ac565b905092915050565b60008183611cd19190612921565b905092915050565b60008183611ce791906128cb565b905092915050565b60008183611cfd9190612952565b905092915050565b611d868363a9059cbb60e01b8484604051602401611d249291906125f8565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611ee0565b505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611eda846323b872dd60e01b858585604051602401611e78939291906125c1565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611ee0565b50505050565b6000611f42826040518060400160405280602081526020017f5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611fa79092919063ffffffff16565b9050600081511115611fa25780806020019051810190611f6291906121de565b611fa1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f98906126be565b60405180910390fd5b5b505050565b6060611fb68484600085611fbf565b90509392505050565b606082471015612004576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ffb9061273e565b60405180910390fd5b61200d856120d3565b61204c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612043906127be565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051612075919061258f565b60006040518083038185875af1925050503d80600081146120b2576040519150601f19603f3d011682016040523d82523d6000602084013e6120b7565b606091505b50915091506120c78282866120f6565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6060831561210657829050612156565b6000835111156121195782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161214d919061263c565b60405180910390fd5b9392505050565b60008135905061216c81612e61565b92915050565b60008151905061218181612e78565b92915050565b60008135905061219681612e8f565b92915050565b6000815190506121ab81612e8f565b92915050565b6000602082840312156121c7576121c6612b20565b5b60006121d58482850161215d565b91505092915050565b6000602082840312156121f4576121f3612b20565b5b600061220284828501612172565b91505092915050565b60006020828403121561222157612220612b20565b5b600061222f84828501612187565b91505092915050565b60006020828403121561224e5761224d612b20565b5b600061225c8482850161219c565b91505092915050565b6000806040838503121561227c5761227b612b20565b5b600061228a85828601612187565b925050602061229b85828601612187565b9150509250929050565b6122ae816129e0565b82525050565b60006122bf82612899565b6122c981856128af565b93506122d9818560208601612a5e565b80840191505092915050565b6122ee81612a28565b82525050565b60006122ff826128a4565b61230981856128ba565b9350612319818560208601612a5e565b61232281612b25565b840191505092915050565b600061233a600c836128ba565b915061234582612b36565b602082019050919050565b600061235d6010836128ba565b915061236882612b5f565b602082019050919050565b60006123806015836128ba565b915061238b82612b88565b602082019050919050565b60006123a3602a836128ba565b91506123ae82612bb1565b604082019050919050565b60006123c66026836128ba565b91506123d182612c00565b604082019050919050565b60006123e9600e836128ba565b91506123f482612c4f565b602082019050919050565b600061240c600f836128ba565b915061241782612c78565b602082019050919050565b600061242f6026836128ba565b915061243a82612ca1565b604082019050919050565b6000612452601f836128ba565b915061245d82612cf0565b602082019050919050565b60006124756020836128ba565b915061248082612d19565b602082019050919050565b6000612498600d836128ba565b91506124a382612d42565b602082019050919050565b60006124bb601d836128ba565b91506124c682612d6b565b602082019050919050565b60006124de601a836128ba565b91506124e982612d94565b602082019050919050565b60006125016017836128ba565b915061250c82612dbd565b602082019050919050565b6000612524600d836128ba565b915061252f82612de6565b602082019050919050565b6000612547600c836128ba565b915061255282612e0f565b602082019050919050565b600061256a600d836128ba565b915061257582612e38565b602082019050919050565b61258981612a1e565b82525050565b600061259b82846122b4565b915081905092915050565b60006020820190506125bb60008301846122a5565b92915050565b60006060820190506125d660008301866122a5565b6125e360208301856122a5565b6125f06040830184612580565b949350505050565b600060408201905061260d60008301856122a5565b61261a6020830184612580565b9392505050565b600060208201905061263660008301846122e5565b92915050565b6000602082019050818103600083015261265681846122f4565b905092915050565b600060208201905081810360008301526126778161232d565b9050919050565b6000602082019050818103600083015261269781612350565b9050919050565b600060208201905081810360008301526126b781612373565b9050919050565b600060208201905081810360008301526126d781612396565b9050919050565b600060208201905081810360008301526126f7816123b9565b9050919050565b60006020820190508181036000830152612717816123dc565b9050919050565b60006020820190508181036000830152612737816123ff565b9050919050565b6000602082019050818103600083015261275781612422565b9050919050565b6000602082019050818103600083015261277781612445565b9050919050565b6000602082019050818103600083015261279781612468565b9050919050565b600060208201905081810360008301526127b78161248b565b9050919050565b600060208201905081810360008301526127d7816124ae565b9050919050565b600060208201905081810360008301526127f7816124d1565b9050919050565b60006020820190508181036000830152612817816124f4565b9050919050565b6000602082019050818103600083015261283781612517565b9050919050565b600060208201905081810360008301526128578161253a565b9050919050565b600060208201905081810360008301526128778161255d565b9050919050565b60006020820190506128936000830184612580565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006128d682612a1e565b91506128e183612a1e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561291657612915612ac2565b5b828201905092915050565b600061292c82612a1e565b915061293783612a1e565b92508261294757612946612af1565b5b828204905092915050565b600061295d82612a1e565b915061296883612a1e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156129a1576129a0612ac2565b5b828202905092915050565b60006129b782612a1e565b91506129c283612a1e565b9250828210156129d5576129d4612ac2565b5b828203905092915050565b60006129eb826129fe565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612a3382612a3a565b9050919050565b6000612a4582612a4c565b9050919050565b6000612a57826129fe565b9050919050565b60005b83811015612a7c578082015181840152602081019050612a61565b83811115612a8b576000848401525b50505050565b6000612a9c82612a1e565b9150612aa783612a1e565b925082612ab757612ab6612af1565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f496e73756666696369656e740000000000000000000000000000000000000000600082015250565b7f4e6f7468696e6720746f20636c61696d00000000000000000000000000000000600082015250565b7f4572726f723a20696e76616c6964207374616b65720000000000000000000000600082015250565b7f5361666542455032303a204245503230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b7f416c726561647920737461727465640000000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f416d6f756e742073686f756c642062652067726561746572207468616e203000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e76616c69642076616c756500000000000000000000000000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f496e76616c696420556e7374616b696e67204665652052617465000000000000600082015250565b7f496e76616c6964204c6f636b7570204475726174696f6e000000000000000000600082015250565b7f43616e2774206265207a65726f00000000000000000000000000000000000000600082015250565b7f496e76616c6964204d6f64650000000000000000000000000000000000000000600082015250565b7f496e73756666696369656e742100000000000000000000000000000000000000600082015250565b612e6a816129e0565b8114612e7557600080fd5b50565b612e81816129f2565b8114612e8c57600080fd5b50565b612e9881612a1e565b8114612ea357600080fd5b5056fea2646970667358221220cfe1e5f4e11b46453a16babb249a34295c1e092ff3669509da0360b08189778664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E1A3786 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xAEDF562B EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xF9931855 EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0xFE600F84 EQ PUSH2 0x3CD JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x7E1A3786 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x91E07E7A EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x9E447FC6 EQ PUSH2 0x2FB JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x4B77DD9E GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x4B77DD9E EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x5715EC11 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x5D2EC65D EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x645A8A56 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x692642E7 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x27B JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x917E776 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x4A4FBEEC EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x4B62B70B EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x220B JUMP JUMPDEST PUSH2 0x407 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x189 PUSH2 0x7D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x21B1 JUMP JUMPDEST PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x220B JUMP JUMPDEST PUSH2 0xC2F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x2265 JUMP JUMPDEST PUSH2 0xCF8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FB PUSH2 0x114E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH2 0x115B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x21B1 JUMP JUMPDEST PUSH2 0x11A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x220B JUMP JUMPDEST PUSH2 0x11F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x283 PUSH2 0x1306 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28D PUSH2 0x138E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x1398 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C9 PUSH2 0x139E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x220B JUMP JUMPDEST PUSH2 0x13C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x220B JUMP JUMPDEST PUSH2 0x14C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x220B JUMP JUMPDEST PUSH2 0x15C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x21B1 JUMP JUMPDEST PUSH2 0x18C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x21B1 JUMP JUMPDEST PUSH2 0x1923 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x399 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x21B1 JUMP JUMPDEST PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B7 PUSH2 0x1A67 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x2621 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x21B1 JUMP JUMPDEST PUSH2 0x1A8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x48D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x484 SWAP1 PUSH2 0x275E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP3 GT ISZERO PUSH2 0x4D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CB SWAP1 PUSH2 0x26FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4DC PUSH2 0x1AD9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x539 SWAP2 SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x565 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x2238 JUMP JUMPDEST DUP4 LT PUSH2 0x63F JUMPI PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EA SWAP2 SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x616 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63A SWAP2 SWAP1 PUSH2 0x2238 JUMP JUMPDEST PUSH2 0x641 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x671 PUSH3 0x15180 PUSH2 0x663 DUP6 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x1CAD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 SWAP1 POP PUSH1 0x0 DUP1 DUP6 PUSH1 0x2 ADD SLOAD EQ ISZERO PUSH2 0x6A8 JUMPI PUSH2 0x6A0 PUSH1 0x5 SLOAD DUP7 PUSH1 0x3 ADD SLOAD PUSH2 0x1CD9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP5 PUSH2 0x6B8 SWAP2 SWAP1 PUSH2 0x2A91 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0x6C5 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST JUMPDEST SWAP1 POP DUP1 PUSH2 0x6D3 JUMPI PUSH1 0x1 SLOAD SWAP2 POP JUMPDEST PUSH2 0x70C PUSH2 0x6FD PUSH2 0x2710 PUSH2 0x6EF DUP6 DUP9 PUSH2 0x1CEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x1CAD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP PUSH2 0x723 DUP5 PUSH1 0xB SLOAD PUSH2 0x1CAD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x740 DUP5 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x1CAD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x795 CALLER DUP6 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D05 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0x7C6 SWAP3 SWAP2 SWAP1 PUSH2 0x25F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7DE PUSH2 0x1AD9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x866 PUSH2 0x853 PUSH2 0x2710 PUSH2 0x845 PUSH1 0x4 SLOAD DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x1CEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x1CAD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x8AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A2 SWAP1 PUSH2 0x267E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x906 SWAP2 SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x91E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x932 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x956 SWAP2 SWAP1 PUSH2 0x2238 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xA0B JUMPI PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B8 SWAP2 SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA08 SWAP2 SWAP1 PUSH2 0x2238 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xA58 CALLER DUP3 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D05 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0xA93 SWAP3 SWAP2 SWAP1 PUSH2 0x25F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x55 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0xAF4 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ PUSH2 0xBBC JUMPI PUSH1 0x0 PUSH3 0x93A80 PUSH2 0xB99 PUSH1 0xA PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x1CAD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xBA3 SWAP2 SWAP1 PUSH2 0x2A91 JUMP JUMPDEST EQ PUSH2 0xBAF JUMPI PUSH1 0x1 PUSH2 0xBB2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0xC2A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xC14 PUSH1 0xA PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH2 0x1CAD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0xC21 JUMPI PUSH1 0x1 PUSH2 0xC24 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC37 PUSH2 0x1D8B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC55 PUSH2 0x139E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA2 SWAP1 PUSH2 0x277E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xCEE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE5 SWAP1 PUSH2 0x281E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xD3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD32 SWAP1 PUSH2 0x275E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD97 SWAP2 SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDC3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDE7 SWAP2 SWAP1 PUSH2 0x2238 JUMP JUMPDEST GT PUSH2 0xE27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE1E SWAP1 PUSH2 0x285E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ ISZERO PUSH2 0xEAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA4 SWAP1 PUSH2 0x271E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xEC8 JUMPI PUSH1 0x0 DUP3 GT PUSH2 0xEC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1008 JUMP JUMPDEST PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xF1B JUMPI PUSH1 0x8 SLOAD DUP3 LT ISZERO PUSH2 0xF16 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0D SWAP1 PUSH2 0x265E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1007 JUMP JUMPDEST PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0xF6E JUMPI PUSH1 0x7 SLOAD DUP3 LT ISZERO PUSH2 0xF69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF60 SWAP1 PUSH2 0x265E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x3 DUP2 EQ ISZERO PUSH2 0xFC1 JUMPI PUSH1 0x6 SLOAD DUP3 LT ISZERO PUSH2 0xFBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB3 SWAP1 PUSH2 0x265E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x0 DUP3 LT PUSH2 0x1004 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFB SWAP1 PUSH2 0x283E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x55 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x9 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x114A DUP3 PUSH2 0x15C7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11F9 PUSH2 0x1D8B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1217 PUSH2 0x139E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x126D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1264 SWAP1 PUSH2 0x277E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x12B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A7 SWAP1 PUSH2 0x27FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12C6 PUSH3 0x15180 DUP3 PUSH2 0x1CEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C DUP2 PUSH1 0x40 MLOAD PUSH2 0x12FB SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x130E PUSH2 0x1D8B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x132C PUSH2 0x139E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1382 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1379 SWAP1 PUSH2 0x277E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x138C PUSH1 0x0 PUSH2 0x1D93 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13CF PUSH2 0x1D8B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13ED PUSH2 0x139E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1443 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x143A SWAP1 PUSH2 0x277E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1486 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x147D SWAP1 PUSH2 0x27DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0x150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81 DUP2 PUSH1 0x40 MLOAD PUSH2 0x14BC SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x14CF PUSH2 0x1D8B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14ED PUSH2 0x139E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1543 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153A SWAP1 PUSH2 0x277E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1586 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x157D SWAP1 PUSH2 0x279E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0x1946FB78C7CA778B54D82CABAAC5BA67CF446F58D0FF1F8CEAEBB6150E54E44F DUP2 PUSH1 0x40 MLOAD PUSH2 0x15BC SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x160A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1601 SWAP1 PUSH2 0x275E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1666 SWAP2 SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x167E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1692 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16B6 SWAP2 SWAP1 PUSH2 0x2238 JUMP JUMPDEST GT PUSH2 0x16F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16ED SWAP1 PUSH2 0x285E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x55 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD EQ PUSH2 0x177B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1772 SWAP1 PUSH2 0x269E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1783 PUSH2 0x1AD9 JUMP JUMPDEST PUSH2 0x17D2 CALLER ADDRESS DUP4 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E57 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1827 DUP2 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1CD9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1882 DUP2 PUSH1 0xB SLOAD PUSH2 0x1CD9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x18B9 SWAP3 SWAP2 SWAP1 PUSH2 0x25F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ PUSH2 0x1916 JUMPI PUSH1 0x1 PUSH2 0x1919 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x192B PUSH2 0x1D8B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1949 PUSH2 0x139E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x199F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1996 SWAP1 PUSH2 0x277E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A06 SWAP1 PUSH2 0x26DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A18 DUP2 PUSH2 0x1D93 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x1BC5 PUSH2 0x2710 PUSH2 0x1BB7 PUSH1 0x3 SLOAD PUSH2 0x1BA9 PUSH2 0x1B9A PUSH2 0x21C0 PUSH2 0x1B8C PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD NUMBER PUSH2 0x1CAD SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 PUSH2 0x1CEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CEF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1C1C DUP2 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1CD9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP NUMBER PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1CBB SWAP2 SWAP1 PUSH2 0x29AC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1CD1 SWAP2 SWAP1 PUSH2 0x2921 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1CE7 SWAP2 SWAP1 PUSH2 0x28CB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1CFD SWAP2 SWAP1 PUSH2 0x2952 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D86 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1D24 SWAP3 SWAP2 SWAP1 PUSH2 0x25F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1EE0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1EDA DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1E78 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1EE0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F42 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FA7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1FA2 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1F62 SWAP2 SWAP1 PUSH2 0x21DE JUMP JUMPDEST PUSH2 0x1FA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F98 SWAP1 PUSH2 0x26BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1FB6 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1FBF JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2004 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FFB SWAP1 PUSH2 0x273E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x200D DUP6 PUSH2 0x20D3 JUMP JUMPDEST PUSH2 0x204C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2043 SWAP1 PUSH2 0x27BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2075 SWAP2 SWAP1 PUSH2 0x258F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x20B2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x20B7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x20C7 DUP3 DUP3 DUP7 PUSH2 0x20F6 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2106 JUMPI DUP3 SWAP1 POP PUSH2 0x2156 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x2119 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x214D SWAP2 SWAP1 PUSH2 0x263C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x216C DUP2 PUSH2 0x2E61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2181 DUP2 PUSH2 0x2E78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2196 DUP2 PUSH2 0x2E8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x21AB DUP2 PUSH2 0x2E8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21C7 JUMPI PUSH2 0x21C6 PUSH2 0x2B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21D5 DUP5 DUP3 DUP6 ADD PUSH2 0x215D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21F4 JUMPI PUSH2 0x21F3 PUSH2 0x2B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2202 DUP5 DUP3 DUP6 ADD PUSH2 0x2172 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2221 JUMPI PUSH2 0x2220 PUSH2 0x2B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x222F DUP5 DUP3 DUP6 ADD PUSH2 0x2187 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x224E JUMPI PUSH2 0x224D PUSH2 0x2B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x225C DUP5 DUP3 DUP6 ADD PUSH2 0x219C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x227C JUMPI PUSH2 0x227B PUSH2 0x2B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x228A DUP6 DUP3 DUP7 ADD PUSH2 0x2187 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x229B DUP6 DUP3 DUP7 ADD PUSH2 0x2187 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x22AE DUP2 PUSH2 0x29E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BF DUP3 PUSH2 0x2899 JUMP JUMPDEST PUSH2 0x22C9 DUP2 DUP6 PUSH2 0x28AF JUMP JUMPDEST SWAP4 POP PUSH2 0x22D9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2A5E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22EE DUP2 PUSH2 0x2A28 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22FF DUP3 PUSH2 0x28A4 JUMP JUMPDEST PUSH2 0x2309 DUP2 DUP6 PUSH2 0x28BA JUMP JUMPDEST SWAP4 POP PUSH2 0x2319 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2A5E JUMP JUMPDEST PUSH2 0x2322 DUP2 PUSH2 0x2B25 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x233A PUSH1 0xC DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x2345 DUP3 PUSH2 0x2B36 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235D PUSH1 0x10 DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x2368 DUP3 PUSH2 0x2B5F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2380 PUSH1 0x15 DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x238B DUP3 PUSH2 0x2B88 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A3 PUSH1 0x2A DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x23AE DUP3 PUSH2 0x2BB1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23C6 PUSH1 0x26 DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x23D1 DUP3 PUSH2 0x2C00 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E9 PUSH1 0xE DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x23F4 DUP3 PUSH2 0x2C4F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x240C PUSH1 0xF DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x2417 DUP3 PUSH2 0x2C78 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x242F PUSH1 0x26 DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x243A DUP3 PUSH2 0x2CA1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2452 PUSH1 0x1F DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x245D DUP3 PUSH2 0x2CF0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2475 PUSH1 0x20 DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x2480 DUP3 PUSH2 0x2D19 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2498 PUSH1 0xD DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x24A3 DUP3 PUSH2 0x2D42 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24BB PUSH1 0x1D DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x24C6 DUP3 PUSH2 0x2D6B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24DE PUSH1 0x1A DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x24E9 DUP3 PUSH2 0x2D94 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2501 PUSH1 0x17 DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x250C DUP3 PUSH2 0x2DBD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2524 PUSH1 0xD DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x252F DUP3 PUSH2 0x2DE6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2547 PUSH1 0xC DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x2552 DUP3 PUSH2 0x2E0F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x256A PUSH1 0xD DUP4 PUSH2 0x28BA JUMP JUMPDEST SWAP2 POP PUSH2 0x2575 DUP3 PUSH2 0x2E38 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2589 DUP2 PUSH2 0x2A1E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x259B DUP3 DUP5 PUSH2 0x22B4 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25BB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x25D6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x22A5 JUMP JUMPDEST PUSH2 0x25E3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x22A5 JUMP JUMPDEST PUSH2 0x25F0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2580 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x260D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x22A5 JUMP JUMPDEST PUSH2 0x261A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2580 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2636 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2656 DUP2 DUP5 PUSH2 0x22F4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2677 DUP2 PUSH2 0x232D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2697 DUP2 PUSH2 0x2350 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26B7 DUP2 PUSH2 0x2373 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26D7 DUP2 PUSH2 0x2396 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26F7 DUP2 PUSH2 0x23B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2717 DUP2 PUSH2 0x23DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2737 DUP2 PUSH2 0x23FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2757 DUP2 PUSH2 0x2422 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2777 DUP2 PUSH2 0x2445 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2797 DUP2 PUSH2 0x2468 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27B7 DUP2 PUSH2 0x248B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27D7 DUP2 PUSH2 0x24AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27F7 DUP2 PUSH2 0x24D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2817 DUP2 PUSH2 0x24F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2837 DUP2 PUSH2 0x2517 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2857 DUP2 PUSH2 0x253A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2877 DUP2 PUSH2 0x255D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2893 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2580 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28D6 DUP3 PUSH2 0x2A1E JUMP JUMPDEST SWAP2 POP PUSH2 0x28E1 DUP4 PUSH2 0x2A1E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2916 JUMPI PUSH2 0x2915 PUSH2 0x2AC2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x292C DUP3 PUSH2 0x2A1E JUMP JUMPDEST SWAP2 POP PUSH2 0x2937 DUP4 PUSH2 0x2A1E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2947 JUMPI PUSH2 0x2946 PUSH2 0x2AF1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x295D DUP3 PUSH2 0x2A1E JUMP JUMPDEST SWAP2 POP PUSH2 0x2968 DUP4 PUSH2 0x2A1E JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x29A1 JUMPI PUSH2 0x29A0 PUSH2 0x2AC2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29B7 DUP3 PUSH2 0x2A1E JUMP JUMPDEST SWAP2 POP PUSH2 0x29C2 DUP4 PUSH2 0x2A1E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x29D5 JUMPI PUSH2 0x29D4 PUSH2 0x2AC2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29EB DUP3 PUSH2 0x29FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A33 DUP3 PUSH2 0x2A3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A45 DUP3 PUSH2 0x2A4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A57 DUP3 PUSH2 0x29FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A7C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2A61 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2A8B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A9C DUP3 PUSH2 0x2A1E JUMP JUMPDEST SWAP2 POP PUSH2 0x2AA7 DUP4 PUSH2 0x2A1E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2AB7 JUMPI PUSH2 0x2AB6 PUSH2 0x2AF1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E740000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20636C61696D00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4572726F723A20696E76616C6964207374616B65720000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666542455032303A204245503230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420616D6F756E74000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416C726561647920737461727465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E203000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C69642076616C756500000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C696420556E7374616B696E67204665652052617465000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C6964204C6F636B7570204475726174696F6E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43616E2774206265207A65726F00000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C6964204D6F64650000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742100000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2E6A DUP2 PUSH2 0x29E0 JUMP JUMPDEST DUP2 EQ PUSH2 0x2E75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2E81 DUP2 PUSH2 0x29F2 JUMP JUMPDEST DUP2 EQ PUSH2 0x2E8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2E98 DUP2 PUSH2 0x2A1E JUMP JUMPDEST DUP2 EQ PUSH2 0x2EA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xE1 0xE5 DELEGATECALL 0xE1 SHL CHAINID GASLIMIT GASPRICE AND 0xBA 0xBB 0x24 SWAP11 CALLVALUE 0x29 0x5C 0x1E MULMOD 0x2F RETURN PUSH7 0x9509DA0360B081 DUP10 PUSH24 0x8664736F6C63430008070033000000000000000000000000 ",
							"sourceMap": "260:8328:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4279:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5613:1180;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8003:582;;;:::i;:::-;;4767:402;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7578:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2742:879;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4382:103;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7803:159;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5329:135;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7040:248;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101:0;;;:::i;:::-;;5472:94:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1169:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7296:274:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6805:227;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3689:582;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4493:134;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5181:136:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1202:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4635:124;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4279:95;4326:7;4355:11;;4348:18;;4279:95;:::o;5613:1180::-;5676:21;5700:7;:19;5708:10;5700:19;;;;;;;;;;;;;;;5676:43;;5753:1;5744:6;:10;5736:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;5819:6;:19;;;5809:6;:29;;5801:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;5870:14;:12;:14::i;:::-;5895:27;5934:5;;;;;;;;;;;:15;;;5958:4;5934:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5925:6;:39;:81;;5976:5;;;;;;;;;;;:15;;;6000:4;5976:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5925:81;;;5967:6;5925:81;5895:111;;6017:14;6034:54;6081:6;6034:42;6054:6;:21;;;6034:15;:19;;:42;;;;:::i;:::-;:46;;:54;;;;:::i;:::-;6017:71;;6099:11;6113:3;6099:17;;6127:21;6166:1;6151:6;:11;;;:16;;:134;;6245:40;6271:13;;6245:6;:21;;;:25;;:40;;;;:::i;:::-;6226:15;:59;;6151:134;;;6195:1;6179:12;;6170:6;:21;;;;:::i;:::-;:26;:40;;;;;6209:1;6200:6;:10;6170:40;6151:134;6127:158;;6301:16;6296:73;;6340:17;;6334:23;;6296:73;6401:62;6425:37;6458:3;6425:28;6449:3;6425:19;:23;;:28;;;;:::i;:::-;:32;;:37;;;;:::i;:::-;6401:19;:23;;:62;;;;:::i;:::-;6379:84;;6488:36;6504:19;6488:11;;:15;;:36;;;;:::i;:::-;6474:11;:50;;;;6557:44;6581:19;6557:6;:19;;;:23;;:44;;;;:::i;:::-;6535:6;:19;;:66;;;;6612:51;6631:10;6643:19;6612:5;;;;;;;;;;;:18;;;;:51;;;;;:::i;:::-;6681:41;6690:10;6702:19;6681:41;;;;;;;:::i;:::-;;;;;;;;5655:1138;;;;;5613:1180;:::o;8003:582::-;8049:14;:12;:14::i;:::-;8074:21;8098:7;:19;8106:10;8098:19;;;;;;;;;;;;;;;8074:43;;8128:21;8152:87;8183:55;8234:3;8183:46;8214:14;;8183:6;:26;;;:30;;:46;;;;:::i;:::-;:50;;:55;;;;:::i;:::-;8152:6;:26;;;:30;;:87;;;;:::i;:::-;8128:111;;8284:1;8268:13;:17;8260:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;8337:5;;;;;;;;;;;:15;;;8361:4;8337:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8321:13;:46;8317:111;;;8398:5;;;;;;;;;;;:15;;;8422:4;8398:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8382:46;;8317:111;8439:45;8458:10;8470:13;8439:5;;;;;;;;;;;:18;;;;:45;;;;;:::i;:::-;8524:1;8495:6;:26;;:30;;;;8543:34;8551:10;8563:13;8543:34;;;;;;;:::i;:::-;;;;;;;;8028:557;;8003:582::o;4767:402::-;4824:7;4878:4;4850:7;:17;4858:8;4850:17;;;;;;;;;;;;;;;:24;;;:32;4846:59;;4904:1;4897:8;;;;4846:59;4946:1;4920:7;:17;4928:8;4920:17;;;;;;;;;;;;;;;:22;;;:27;4916:245;;5037:1;5026:6;4969:53;4989:7;:17;4997:8;4989:17;;;;;;;;;;;;;;;:32;;;4969:15;:19;;:53;;;;:::i;:::-;:64;;;;:::i;:::-;:69;:77;;5045:1;4969:77;;;5041:1;4969:77;4962:84;;;;;;4916:245;5140:13;;5083:53;5103:7;:17;5111:8;5103:17;;;;;;;;;;;;;;;:32;;;5083:15;:19;;:53;;;;:::i;:::-;:70;;:78;;5160:1;5083:78;;;5156:1;5083:78;5076:85;;;;4767:402;;;;:::o;7578:162::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7674:1:7::1;7661:10;:14;7653:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;7722:10;7706:13;:26;;;;7578:162:::0;:::o;2742:879::-;2844:1;2834:7;:11;2826:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2930:7;2900:5;;;;;;;;;;;:15;;;2916:10;2900:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;2892:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3004:4;2974:7;:19;2982:10;2974:19;;;;;;;;;;;;;;;:26;;;:34;;2966:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3062:1;3053:5;:10;3049:343;;;3083:1;3073:7;:11;3065:20;;;;;;3049:343;;;3114:1;3105:5;:10;3101:291;;;3136:17;;3125:7;:28;;3117:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3101:291;;;3199:1;3190:5;:10;3186:206;;;3221:17;;3210:7;:28;;3202:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3186:206;;;3284:1;3275:5;:10;3271:121;;;3306:17;;3295:7;:28;;3287:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3271:121;;;3374:1;3364:7;:11;3356:36;;;;;;;;;;;;:::i;:::-;;;;;;;;;3271:121;3186:206;3101:291;3049:343;3440:5;3413:7;:19;3421:10;3413:19;;;;;;;;;;;;;;;:24;;:32;;;;3493:15;3456:7;:19;3464:10;3456:19;;;;;;;;;;;;;;;:34;;:52;;;;3548:4;3519:7;:19;3527:10;3519:19;;;;;;;;;;;;;;;:26;;:33;;;;3563:8;3577:10;3563:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3599:14;3605:7;3599:5;:14::i;:::-;2742:879;;:::o;4382:103::-;4433:7;4462:8;:15;;;;4455:22;;4382:103;:::o;7803:159::-;7851:7;7915;:19;7923:10;7915:19;;;;;;;;;;;;;;;:39;;;7908:46;;7803:159;:::o;5329:135::-;5390:7;5419;:17;5427:8;5419:17;;;;;;;;;;;;;;;:37;;;5412:44;;5329:135;;;:::o;7040:248::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7151:1:7::1;7135:13;:17;7127:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;7208:25;7226:6;7208:13;:17;;:25;;;;:::i;:::-;7193:12;:40;;;;7251:29;7266:13;7251:29;;;;;;:::i;:::-;;;;;;;;7040:248:::0;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;5472:94:7:-;5518:7;5547:11;;5540:18;;5472:94;:::o;1169:26::-;;;;:::o;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;7296:274:7:-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7422:1:7::1;7401:18;:22;7393:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;7487:18;7467:17;:38;;;;7523:39;7543:18;7523:39;;;;;;:::i;:::-;;;;;;;;7296:274:::0;:::o;6805:227::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6913:1:7::1;6898:12;:16;6890:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;6967:12;6953:11;:26;;;;6997:27;7011:12;6997:27;;;;;;:::i;:::-;;;;;;;;6805:227:::0;:::o;3689:582::-;3766:1;3756:7;:11;3748:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3852:7;3822:5;;;;;;;;;;;:15;;;3838:10;3822:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;3814:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3926:4;3896:7;:19;3904:10;3896:19;;;;;;;;;;;;;;;:26;;;:34;3888:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3977:14;:12;:14::i;:::-;4012:58;4035:10;4055:4;4062:7;4012:5;;;;;;;;;;;:22;;;;:58;;;;;;:::i;:::-;4116:45;4153:7;4116;:19;4124:10;4116:19;;;;;;;;;;;;;;;:32;;;:36;;:45;;;;:::i;:::-;4081:7;:19;4089:10;4081:19;;;;;;;;;;;;;;;:32;;:80;;;;4186:24;4202:7;4186:11;;:15;;:24;;;;:::i;:::-;4172:11;:38;;;;4236:27;4243:10;4255:7;4236:27;;;;;;;:::i;:::-;;;;;;;;3689:582;:::o;4493:134::-;4555:7;4610:1;4584:7;:17;4592:8;4584:17;;;;;;;;;;;;;;;:22;;;:27;:35;;4618:1;4584:35;;;4614:1;4584:35;4577:42;;;;4493:134;;;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;5181:136:7:-;5242:7;5279;:17;5287:8;5279:17;;;;;;;;;;;;;;;:30;;;5272:37;;5181:136;;;:::o;1202:19::-;;;;;;;;;;;;;:::o;4635:124::-;4698:7;4727;:17;4735:8;4727:17;;;;;;;;;;;;;;;:24;;;4720:31;;4635:124;;;:::o;2273:457::-;2325:26;2354:7;:19;2362:10;2354:19;;;;;;;;;;;;;;;:32;;;2325:61;;2407:17;2427:120;2543:3;2427:111;2526:11;;2427:94;2450:70;2515:4;2450:60;2467:7;:19;2475:10;2467:19;;;;;;;;;;;;;;;:42;;;2450:12;:16;;:60;;;;:::i;:::-;:64;;:70;;;;:::i;:::-;2427:18;:22;;:94;;;;:::i;:::-;:98;;:111;;;;:::i;:::-;:115;;:120;;;;:::i;:::-;2407:140;;2600:54;2644:9;2600:7;:19;2608:10;2600:19;;;;;;;;;;;;;;;:39;;;:43;;:54;;;;:::i;:::-;2558:7;:19;2566:10;2558:19;;;;;;;;;;;;;;;:39;;:96;;;;2710:12;2665:7;:19;2673:10;2665:19;;;;;;;;;;;;;;;:42;;:57;;;;2304:426;;2273:457::o;3108:96:4:-;3166:7;3196:1;3192;:5;;;;:::i;:::-;3185:12;;3108:96;;;;:::o;3836:::-;3894:7;3924:1;3920;:5;;;;:::i;:::-;3913:12;;3836:96;;;;:::o;2741:::-;2799:7;2829:1;2825;:5;;;;:::i;:::-;2818:12;;2741:96;;;;:::o;3451:::-;3509:7;3539:1;3535;:5;;;;:::i;:::-;3528:12;;3451:96;;;;:::o;290:177:6:-;373:86;393:5;423:23;;;448:2;452:5;400:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;373:19;:86::i;:::-;290:177;;;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;475:205:6:-;576:96;596:5;626:27;;;655:4;661:2;665:5;603:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;576:19;:96::i;:::-;475:205;;;;:::o;2599:769::-;3031:23;3057:69;3085:4;3057:69;;;;;;;;;;;;;;;;;3065:5;3057:27;;;;:69;;;;;:::i;:::-;3031:95;;3161:1;3141:10;:17;:21;3137:224;;;3283:10;3272:30;;;;;;;;;;;;:::i;:::-;3264:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3137:224;2669:699;2599:769;;:::o;3861:223:2:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5236:18;5247:6;5236:10;:18::i;:::-;5228:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;;;;4948:499;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7561:692::-;7707:12;7735:7;7731:516;;;7765:10;7758:17;;;;7731:516;7896:1;7876:10;:17;:21;7872:365;;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;;;;;;;;;;:::i;:::-;;;;;;;;7561:692;;;;;;:::o;7:139:8:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:143::-;497:5;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;440:143;;;;:::o;589:329::-;648:6;697:2;685:9;676:7;672:23;668:32;665:119;;;703:79;;:::i;:::-;665:119;823:1;848:53;893:7;884:6;873:9;869:22;848:53;:::i;:::-;838:63;;794:117;589:329;;;;:::o;924:345::-;991:6;1040:2;1028:9;1019:7;1015:23;1011:32;1008:119;;;1046:79;;:::i;:::-;1008:119;1166:1;1191:61;1244:7;1235:6;1224:9;1220:22;1191:61;:::i;:::-;1181:71;;1137:125;924:345;;;;:::o;1275:329::-;1334:6;1383:2;1371:9;1362:7;1358:23;1354:32;1351:119;;;1389:79;;:::i;:::-;1351:119;1509:1;1534:53;1579:7;1570:6;1559:9;1555:22;1534:53;:::i;:::-;1524:63;;1480:117;1275:329;;;;:::o;1610:351::-;1680:6;1729:2;1717:9;1708:7;1704:23;1700:32;1697:119;;;1735:79;;:::i;:::-;1697:119;1855:1;1880:64;1936:7;1927:6;1916:9;1912:22;1880:64;:::i;:::-;1870:74;;1826:128;1610:351;;;;:::o;1967:474::-;2035:6;2043;2092:2;2080:9;2071:7;2067:23;2063:32;2060:119;;;2098:79;;:::i;:::-;2060:119;2218:1;2243:53;2288:7;2279:6;2268:9;2264:22;2243:53;:::i;:::-;2233:63;;2189:117;2345:2;2371:53;2416:7;2407:6;2396:9;2392:22;2371:53;:::i;:::-;2361:63;;2316:118;1967:474;;;;;:::o;2447:118::-;2534:24;2552:5;2534:24;:::i;:::-;2529:3;2522:37;2447:118;;:::o;2571:373::-;2675:3;2703:38;2735:5;2703:38;:::i;:::-;2757:88;2838:6;2833:3;2757:88;:::i;:::-;2750:95;;2854:52;2899:6;2894:3;2887:4;2880:5;2876:16;2854:52;:::i;:::-;2931:6;2926:3;2922:16;2915:23;;2679:265;2571:373;;;;:::o;2950:159::-;3051:51;3096:5;3051:51;:::i;:::-;3046:3;3039:64;2950:159;;:::o;3115:364::-;3203:3;3231:39;3264:5;3231:39;:::i;:::-;3286:71;3350:6;3345:3;3286:71;:::i;:::-;3279:78;;3366:52;3411:6;3406:3;3399:4;3392:5;3388:16;3366:52;:::i;:::-;3443:29;3465:6;3443:29;:::i;:::-;3438:3;3434:39;3427:46;;3207:272;3115:364;;;;:::o;3485:366::-;3627:3;3648:67;3712:2;3707:3;3648:67;:::i;:::-;3641:74;;3724:93;3813:3;3724:93;:::i;:::-;3842:2;3837:3;3833:12;3826:19;;3485:366;;;:::o;3857:::-;3999:3;4020:67;4084:2;4079:3;4020:67;:::i;:::-;4013:74;;4096:93;4185:3;4096:93;:::i;:::-;4214:2;4209:3;4205:12;4198:19;;3857:366;;;:::o;4229:::-;4371:3;4392:67;4456:2;4451:3;4392:67;:::i;:::-;4385:74;;4468:93;4557:3;4468:93;:::i;:::-;4586:2;4581:3;4577:12;4570:19;;4229:366;;;:::o;4601:::-;4743:3;4764:67;4828:2;4823:3;4764:67;:::i;:::-;4757:74;;4840:93;4929:3;4840:93;:::i;:::-;4958:2;4953:3;4949:12;4942:19;;4601:366;;;:::o;4973:::-;5115:3;5136:67;5200:2;5195:3;5136:67;:::i;:::-;5129:74;;5212:93;5301:3;5212:93;:::i;:::-;5330:2;5325:3;5321:12;5314:19;;4973:366;;;:::o;5345:::-;5487:3;5508:67;5572:2;5567:3;5508:67;:::i;:::-;5501:74;;5584:93;5673:3;5584:93;:::i;:::-;5702:2;5697:3;5693:12;5686:19;;5345:366;;;:::o;5717:::-;5859:3;5880:67;5944:2;5939:3;5880:67;:::i;:::-;5873:74;;5956:93;6045:3;5956:93;:::i;:::-;6074:2;6069:3;6065:12;6058:19;;5717:366;;;:::o;6089:::-;6231:3;6252:67;6316:2;6311:3;6252:67;:::i;:::-;6245:74;;6328:93;6417:3;6328:93;:::i;:::-;6446:2;6441:3;6437:12;6430:19;;6089:366;;;:::o;6461:::-;6603:3;6624:67;6688:2;6683:3;6624:67;:::i;:::-;6617:74;;6700:93;6789:3;6700:93;:::i;:::-;6818:2;6813:3;6809:12;6802:19;;6461:366;;;:::o;6833:::-;6975:3;6996:67;7060:2;7055:3;6996:67;:::i;:::-;6989:74;;7072:93;7161:3;7072:93;:::i;:::-;7190:2;7185:3;7181:12;7174:19;;6833:366;;;:::o;7205:::-;7347:3;7368:67;7432:2;7427:3;7368:67;:::i;:::-;7361:74;;7444:93;7533:3;7444:93;:::i;:::-;7562:2;7557:3;7553:12;7546:19;;7205:366;;;:::o;7577:::-;7719:3;7740:67;7804:2;7799:3;7740:67;:::i;:::-;7733:74;;7816:93;7905:3;7816:93;:::i;:::-;7934:2;7929:3;7925:12;7918:19;;7577:366;;;:::o;7949:::-;8091:3;8112:67;8176:2;8171:3;8112:67;:::i;:::-;8105:74;;8188:93;8277:3;8188:93;:::i;:::-;8306:2;8301:3;8297:12;8290:19;;7949:366;;;:::o;8321:::-;8463:3;8484:67;8548:2;8543:3;8484:67;:::i;:::-;8477:74;;8560:93;8649:3;8560:93;:::i;:::-;8678:2;8673:3;8669:12;8662:19;;8321:366;;;:::o;8693:::-;8835:3;8856:67;8920:2;8915:3;8856:67;:::i;:::-;8849:74;;8932:93;9021:3;8932:93;:::i;:::-;9050:2;9045:3;9041:12;9034:19;;8693:366;;;:::o;9065:::-;9207:3;9228:67;9292:2;9287:3;9228:67;:::i;:::-;9221:74;;9304:93;9393:3;9304:93;:::i;:::-;9422:2;9417:3;9413:12;9406:19;;9065:366;;;:::o;9437:::-;9579:3;9600:67;9664:2;9659:3;9600:67;:::i;:::-;9593:74;;9676:93;9765:3;9676:93;:::i;:::-;9794:2;9789:3;9785:12;9778:19;;9437:366;;;:::o;9809:118::-;9896:24;9914:5;9896:24;:::i;:::-;9891:3;9884:37;9809:118;;:::o;9933:271::-;10063:3;10085:93;10174:3;10165:6;10085:93;:::i;:::-;10078:100;;10195:3;10188:10;;9933:271;;;;:::o;10210:222::-;10303:4;10341:2;10330:9;10326:18;10318:26;;10354:71;10422:1;10411:9;10407:17;10398:6;10354:71;:::i;:::-;10210:222;;;;:::o;10438:442::-;10587:4;10625:2;10614:9;10610:18;10602:26;;10638:71;10706:1;10695:9;10691:17;10682:6;10638:71;:::i;:::-;10719:72;10787:2;10776:9;10772:18;10763:6;10719:72;:::i;:::-;10801;10869:2;10858:9;10854:18;10845:6;10801:72;:::i;:::-;10438:442;;;;;;:::o;10886:332::-;11007:4;11045:2;11034:9;11030:18;11022:26;;11058:71;11126:1;11115:9;11111:17;11102:6;11058:71;:::i;:::-;11139:72;11207:2;11196:9;11192:18;11183:6;11139:72;:::i;:::-;10886:332;;;;;:::o;11224:250::-;11331:4;11369:2;11358:9;11354:18;11346:26;;11382:85;11464:1;11453:9;11449:17;11440:6;11382:85;:::i;:::-;11224:250;;;;:::o;11480:313::-;11593:4;11631:2;11620:9;11616:18;11608:26;;11680:9;11674:4;11670:20;11666:1;11655:9;11651:17;11644:47;11708:78;11781:4;11772:6;11708:78;:::i;:::-;11700:86;;11480:313;;;;:::o;11799:419::-;11965:4;12003:2;11992:9;11988:18;11980:26;;12052:9;12046:4;12042:20;12038:1;12027:9;12023:17;12016:47;12080:131;12206:4;12080:131;:::i;:::-;12072:139;;11799:419;;;:::o;12224:::-;12390:4;12428:2;12417:9;12413:18;12405:26;;12477:9;12471:4;12467:20;12463:1;12452:9;12448:17;12441:47;12505:131;12631:4;12505:131;:::i;:::-;12497:139;;12224:419;;;:::o;12649:::-;12815:4;12853:2;12842:9;12838:18;12830:26;;12902:9;12896:4;12892:20;12888:1;12877:9;12873:17;12866:47;12930:131;13056:4;12930:131;:::i;:::-;12922:139;;12649:419;;;:::o;13074:::-;13240:4;13278:2;13267:9;13263:18;13255:26;;13327:9;13321:4;13317:20;13313:1;13302:9;13298:17;13291:47;13355:131;13481:4;13355:131;:::i;:::-;13347:139;;13074:419;;;:::o;13499:::-;13665:4;13703:2;13692:9;13688:18;13680:26;;13752:9;13746:4;13742:20;13738:1;13727:9;13723:17;13716:47;13780:131;13906:4;13780:131;:::i;:::-;13772:139;;13499:419;;;:::o;13924:::-;14090:4;14128:2;14117:9;14113:18;14105:26;;14177:9;14171:4;14167:20;14163:1;14152:9;14148:17;14141:47;14205:131;14331:4;14205:131;:::i;:::-;14197:139;;13924:419;;;:::o;14349:::-;14515:4;14553:2;14542:9;14538:18;14530:26;;14602:9;14596:4;14592:20;14588:1;14577:9;14573:17;14566:47;14630:131;14756:4;14630:131;:::i;:::-;14622:139;;14349:419;;;:::o;14774:::-;14940:4;14978:2;14967:9;14963:18;14955:26;;15027:9;15021:4;15017:20;15013:1;15002:9;14998:17;14991:47;15055:131;15181:4;15055:131;:::i;:::-;15047:139;;14774:419;;;:::o;15199:::-;15365:4;15403:2;15392:9;15388:18;15380:26;;15452:9;15446:4;15442:20;15438:1;15427:9;15423:17;15416:47;15480:131;15606:4;15480:131;:::i;:::-;15472:139;;15199:419;;;:::o;15624:::-;15790:4;15828:2;15817:9;15813:18;15805:26;;15877:9;15871:4;15867:20;15863:1;15852:9;15848:17;15841:47;15905:131;16031:4;15905:131;:::i;:::-;15897:139;;15624:419;;;:::o;16049:::-;16215:4;16253:2;16242:9;16238:18;16230:26;;16302:9;16296:4;16292:20;16288:1;16277:9;16273:17;16266:47;16330:131;16456:4;16330:131;:::i;:::-;16322:139;;16049:419;;;:::o;16474:::-;16640:4;16678:2;16667:9;16663:18;16655:26;;16727:9;16721:4;16717:20;16713:1;16702:9;16698:17;16691:47;16755:131;16881:4;16755:131;:::i;:::-;16747:139;;16474:419;;;:::o;16899:::-;17065:4;17103:2;17092:9;17088:18;17080:26;;17152:9;17146:4;17142:20;17138:1;17127:9;17123:17;17116:47;17180:131;17306:4;17180:131;:::i;:::-;17172:139;;16899:419;;;:::o;17324:::-;17490:4;17528:2;17517:9;17513:18;17505:26;;17577:9;17571:4;17567:20;17563:1;17552:9;17548:17;17541:47;17605:131;17731:4;17605:131;:::i;:::-;17597:139;;17324:419;;;:::o;17749:::-;17915:4;17953:2;17942:9;17938:18;17930:26;;18002:9;17996:4;17992:20;17988:1;17977:9;17973:17;17966:47;18030:131;18156:4;18030:131;:::i;:::-;18022:139;;17749:419;;;:::o;18174:::-;18340:4;18378:2;18367:9;18363:18;18355:26;;18427:9;18421:4;18417:20;18413:1;18402:9;18398:17;18391:47;18455:131;18581:4;18455:131;:::i;:::-;18447:139;;18174:419;;;:::o;18599:::-;18765:4;18803:2;18792:9;18788:18;18780:26;;18852:9;18846:4;18842:20;18838:1;18827:9;18823:17;18816:47;18880:131;19006:4;18880:131;:::i;:::-;18872:139;;18599:419;;;:::o;19024:222::-;19117:4;19155:2;19144:9;19140:18;19132:26;;19168:71;19236:1;19225:9;19221:17;19212:6;19168:71;:::i;:::-;19024:222;;;;:::o;19333:98::-;19384:6;19418:5;19412:12;19402:22;;19333:98;;;:::o;19437:99::-;19489:6;19523:5;19517:12;19507:22;;19437:99;;;:::o;19542:147::-;19643:11;19680:3;19665:18;;19542:147;;;;:::o;19695:169::-;19779:11;19813:6;19808:3;19801:19;19853:4;19848:3;19844:14;19829:29;;19695:169;;;;:::o;19870:305::-;19910:3;19929:20;19947:1;19929:20;:::i;:::-;19924:25;;19963:20;19981:1;19963:20;:::i;:::-;19958:25;;20117:1;20049:66;20045:74;20042:1;20039:81;20036:107;;;20123:18;;:::i;:::-;20036:107;20167:1;20164;20160:9;20153:16;;19870:305;;;;:::o;20181:185::-;20221:1;20238:20;20256:1;20238:20;:::i;:::-;20233:25;;20272:20;20290:1;20272:20;:::i;:::-;20267:25;;20311:1;20301:35;;20316:18;;:::i;:::-;20301:35;20358:1;20355;20351:9;20346:14;;20181:185;;;;:::o;20372:348::-;20412:7;20435:20;20453:1;20435:20;:::i;:::-;20430:25;;20469:20;20487:1;20469:20;:::i;:::-;20464:25;;20657:1;20589:66;20585:74;20582:1;20579:81;20574:1;20567:9;20560:17;20556:105;20553:131;;;20664:18;;:::i;:::-;20553:131;20712:1;20709;20705:9;20694:20;;20372:348;;;;:::o;20726:191::-;20766:4;20786:20;20804:1;20786:20;:::i;:::-;20781:25;;20820:20;20838:1;20820:20;:::i;:::-;20815:25;;20859:1;20856;20853:8;20850:34;;;20864:18;;:::i;:::-;20850:34;20909:1;20906;20902:9;20894:17;;20726:191;;;;:::o;20923:96::-;20960:7;20989:24;21007:5;20989:24;:::i;:::-;20978:35;;20923:96;;;:::o;21025:90::-;21059:7;21102:5;21095:13;21088:21;21077:32;;21025:90;;;:::o;21121:126::-;21158:7;21198:42;21191:5;21187:54;21176:65;;21121:126;;;:::o;21253:77::-;21290:7;21319:5;21308:16;;21253:77;;;:::o;21336:140::-;21400:9;21433:37;21464:5;21433:37;:::i;:::-;21420:50;;21336:140;;;:::o;21482:126::-;21532:9;21565:37;21596:5;21565:37;:::i;:::-;21552:50;;21482:126;;;:::o;21614:113::-;21664:9;21697:24;21715:5;21697:24;:::i;:::-;21684:37;;21614:113;;;:::o;21733:307::-;21801:1;21811:113;21825:6;21822:1;21819:13;21811:113;;;21910:1;21905:3;21901:11;21895:18;21891:1;21886:3;21882:11;21875:39;21847:2;21844:1;21840:10;21835:15;;21811:113;;;21942:6;21939:1;21936:13;21933:101;;;22022:1;22013:6;22008:3;22004:16;21997:27;21933:101;21782:258;21733:307;;;:::o;22046:176::-;22078:1;22095:20;22113:1;22095:20;:::i;:::-;22090:25;;22129:20;22147:1;22129:20;:::i;:::-;22124:25;;22168:1;22158:35;;22173:18;;:::i;:::-;22158:35;22214:1;22211;22207:9;22202:14;;22046:176;;;;:::o;22228:180::-;22276:77;22273:1;22266:88;22373:4;22370:1;22363:15;22397:4;22394:1;22387:15;22414:180;22462:77;22459:1;22452:88;22559:4;22556:1;22549:15;22583:4;22580:1;22573:15;22723:117;22832:1;22829;22822:12;22846:102;22887:6;22938:2;22934:7;22929:2;22922:5;22918:14;22914:28;22904:38;;22846:102;;;:::o;22954:162::-;23094:14;23090:1;23082:6;23078:14;23071:38;22954:162;:::o;23122:166::-;23262:18;23258:1;23250:6;23246:14;23239:42;23122:166;:::o;23294:171::-;23434:23;23430:1;23422:6;23418:14;23411:47;23294:171;:::o;23471:229::-;23611:34;23607:1;23599:6;23595:14;23588:58;23680:12;23675:2;23667:6;23663:15;23656:37;23471:229;:::o;23706:225::-;23846:34;23842:1;23834:6;23830:14;23823:58;23915:8;23910:2;23902:6;23898:15;23891:33;23706:225;:::o;23937:164::-;24077:16;24073:1;24065:6;24061:14;24054:40;23937:164;:::o;24107:165::-;24247:17;24243:1;24235:6;24231:14;24224:41;24107:165;:::o;24278:225::-;24418:34;24414:1;24406:6;24402:14;24395:58;24487:8;24482:2;24474:6;24470:15;24463:33;24278:225;:::o;24509:181::-;24649:33;24645:1;24637:6;24633:14;24626:57;24509:181;:::o;24696:182::-;24836:34;24832:1;24824:6;24820:14;24813:58;24696:182;:::o;24884:163::-;25024:15;25020:1;25012:6;25008:14;25001:39;24884:163;:::o;25053:179::-;25193:31;25189:1;25181:6;25177:14;25170:55;25053:179;:::o;25238:176::-;25378:28;25374:1;25366:6;25362:14;25355:52;25238:176;:::o;25420:173::-;25560:25;25556:1;25548:6;25544:14;25537:49;25420:173;:::o;25599:163::-;25739:15;25735:1;25727:6;25723:14;25716:39;25599:163;:::o;25768:162::-;25908:14;25904:1;25896:6;25892:14;25885:38;25768:162;:::o;25936:163::-;26076:15;26072:1;26064:6;26060:14;26053:39;25936:163;:::o;26105:122::-;26178:24;26196:5;26178:24;:::i;:::-;26171:5;26168:35;26158:63;;26217:1;26214;26207:12;26158:63;26105:122;:::o;26233:116::-;26303:21;26318:5;26303:21;:::i;:::-;26296:5;26293:32;26283:60;;26339:1;26336;26329:12;26283:60;26233:116;:::o;26355:122::-;26428:24;26446:5;26428:24;:::i;:::-;26421:5;26418:35;26408:63;;26467:1;26464;26457:12;26408:63;26355:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2399200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getNumberofStakers()": "2490",
								"getRewardRate()": "2460",
								"getStakerMode(address)": "2931",
								"getTotalStaked()": "2461",
								"harvest()": "infinite",
								"isLocked(address)": "infinite",
								"isStartStaking(address)": "2979",
								"owner()": "2589",
								"renounceOwnership()": "30507",
								"rewardAmount(address)": "2936",
								"rewardToHarvest()": "2599",
								"setEventPeriod(uint256)": "infinite",
								"setLockupTime(uint256)": "24895",
								"setRewardRate(uint256)": "infinite",
								"setUnstakingFeeRate(uint256)": "infinite",
								"stake(uint256)": "infinite",
								"stakedAmount(address)": "2935",
								"startStaking(uint256,uint256)": "infinite",
								"token()": "2710",
								"totalStaked()": "2474",
								"transferOwnership(address)": "30789",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"Init()": "infinite",
								"calDaysFromTimestamp(uint256)": "infinite",
								"updateReward()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 260,
									"end": 8588,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 260,
									"end": 8588,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 260,
									"end": 8588,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1678,
									"end": 1682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1678,
									"end": 1682,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1678,
									"end": 1682,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1695,
									"end": 1700,
									"name": "PUSH",
									"source": 7,
									"value": "C"
								},
								{
									"begin": 1695,
									"end": 1700,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1695,
									"end": 1717,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1695,
									"end": 1717,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1695,
									"end": 1717,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1695,
									"end": 1717,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1695,
									"end": 1717,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1695,
									"end": 1717,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1695,
									"end": 1717,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1695,
									"end": 1717,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1695,
									"end": 1717,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1695,
									"end": 1717,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1695,
									"end": 1717,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1695,
									"end": 1717,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1695,
									"end": 1717,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1695,
									"end": 1717,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1695,
									"end": 1717,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1695,
									"end": 1717,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1695,
									"end": 1717,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1695,
									"end": 1717,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1629,
									"end": 1725,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 260,
									"end": 8588,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 260,
									"end": 8588,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1733,
									"end": 2056,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1733,
									"end": 2056,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1793,
									"end": 1796,
									"name": "PUSH",
									"source": 7,
									"value": "C8"
								},
								{
									"begin": 1779,
									"end": 1790,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1779,
									"end": 1796,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1779,
									"end": 1796,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1779,
									"end": 1796,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1779,
									"end": 1796,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1838,
									"end": 1842,
									"name": "PUSH",
									"source": 7,
									"value": "5DC"
								},
								{
									"begin": 1818,
									"end": 1835,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1818,
									"end": 1842,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1842,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1842,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1842,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1870,
									"end": 1873,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1853,
									"end": 1867,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1853,
									"end": 1873,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1853,
									"end": 1873,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1853,
									"end": 1873,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1853,
									"end": 1873,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1899,
									"end": 1905,
									"name": "PUSH",
									"source": 7,
									"value": "93A80"
								},
								{
									"begin": 1884,
									"end": 1896,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1884,
									"end": 1905,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1884,
									"end": 1905,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1884,
									"end": 1905,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1884,
									"end": 1905,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1932,
									"end": 1939,
									"name": "PUSH",
									"source": 7,
									"value": "76A700"
								},
								{
									"begin": 1916,
									"end": 1929,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1916,
									"end": 1939,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1916,
									"end": 1939,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1916,
									"end": 1939,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1916,
									"end": 1939,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1970,
									"end": 1974,
									"name": "PUSH",
									"source": 7,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 1950,
									"end": 1967,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1950,
									"end": 1974,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1950,
									"end": 1974,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1950,
									"end": 1974,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1950,
									"end": 1974,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2005,
									"end": 2011,
									"name": "PUSH",
									"source": 7,
									"value": "27B46536C66C8E3000000"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 1985,
									"end": 2011,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1985,
									"end": 2011,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1985,
									"end": 2011,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1985,
									"end": 2011,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2042,
									"end": 2048,
									"name": "PUSH",
									"source": 7,
									"value": "5CA4EC2A79A7F67000000"
								},
								{
									"begin": 2022,
									"end": 2039,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 2022,
									"end": 2048,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2022,
									"end": 2048,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2022,
									"end": 2048,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2022,
									"end": 2048,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1733,
									"end": 2056,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 678,
									"end": 683,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 649,
									"end": 684,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 649,
									"end": 684,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 594,
									"end": 690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 733,
									"end": 740,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 815,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 762,
									"end": 816,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 751,
									"end": 816,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 751,
									"end": 816,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 696,
									"end": 822,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1060,
									"end": 1061,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 1058,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1050,
									"end": 1062,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1165,
									"end": 1170,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1140,
									"end": 1145,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1137,
									"end": 1172,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1186,
									"end": 1187,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1184,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1176,
									"end": 1188,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 260,
									"end": 8588,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 260,
									"end": 8588,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 260,
									"end": 8588,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 260,
									"end": 8588,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 260,
									"end": 8588,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 260,
									"end": 8588,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 8588,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 260,
									"end": 8588,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 8588,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cfe1e5f4e11b46453a16babb249a34295c1e092ff3669509da0360b08189778664736f6c63430008070033",
									".code": [
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "7E1A3786"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "A694FC3A"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "A694FC3A"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "AEDF562B"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "F9931855"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "FC0C546A"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "FE600F84"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "7E1A3786"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "817B1CD2"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "91E07E7A"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "9E447FC6"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "4B77DD9E"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "4B77DD9E"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "5715EC11"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "5D2EC65D"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "645A8A56"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "692642E7"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "917E776"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "2E1A7D4D"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "4641257D"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "4A4FBEEC"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "4B62B70B"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 260,
											"end": 8588,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4374,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4279,
											"end": 4374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 4279,
											"end": 4374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 4279,
											"end": 4374,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4279,
											"end": 4374,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 4279,
											"end": 4374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4374,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4279,
											"end": 4374,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 4279,
											"end": 4374,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4279,
											"end": 4374,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4279,
											"end": 4374,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 4279,
											"end": 4374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4374,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4279,
											"end": 4374,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4374,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4374,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4374,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4374,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 5613,
											"end": 6793,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5613,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5613,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 5613,
											"end": 6793,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5613,
											"end": 6793,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5613,
											"end": 6793,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5613,
											"end": 6793,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5613,
											"end": 6793,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5613,
											"end": 6793,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5613,
											"end": 6793,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5613,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 5613,
											"end": 6793,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5613,
											"end": 6793,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5613,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 5613,
											"end": 6793,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5613,
											"end": 6793,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 5613,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5613,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 5613,
											"end": 6793,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5613,
											"end": 6793,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 5613,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5613,
											"end": 6793,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 8003,
											"end": 8585,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 8003,
											"end": 8585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8003,
											"end": 8585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 8003,
											"end": 8585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 8003,
											"end": 8585,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8003,
											"end": 8585,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 8003,
											"end": 8585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8003,
											"end": 8585,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7740,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7578,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 7578,
											"end": 7740,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7578,
											"end": 7740,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7740,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7740,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7740,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7740,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7578,
											"end": 7740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 7578,
											"end": 7740,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7578,
											"end": 7740,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7578,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 7578,
											"end": 7740,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7578,
											"end": 7740,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 7578,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7740,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 3621,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2742,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 2742,
											"end": 3621,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2742,
											"end": 3621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 3621,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 3621,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 3621,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 3621,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 3621,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 2742,
											"end": 3621,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 3621,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 2742,
											"end": 3621,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2742,
											"end": 3621,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 2742,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 2742,
											"end": 3621,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2742,
											"end": 3621,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 2742,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 3621,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4485,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 4382,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 4382,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 4382,
											"end": 4485,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4382,
											"end": 4485,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 4382,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4485,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4382,
											"end": 4485,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 4382,
											"end": 4485,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4382,
											"end": 4485,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4382,
											"end": 4485,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 4382,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4485,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4382,
											"end": 4485,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4485,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4485,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4485,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4485,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 7803,
											"end": 7962,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 7803,
											"end": 7962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7803,
											"end": 7962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 7803,
											"end": 7962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 7803,
											"end": 7962,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7803,
											"end": 7962,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 7803,
											"end": 7962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7803,
											"end": 7962,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7803,
											"end": 7962,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7803,
											"end": 7962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 7803,
											"end": 7962,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7803,
											"end": 7962,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7803,
											"end": 7962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 7803,
											"end": 7962,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7803,
											"end": 7962,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 7803,
											"end": 7962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7803,
											"end": 7962,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7803,
											"end": 7962,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7803,
											"end": 7962,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7803,
											"end": 7962,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7803,
											"end": 7962,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7803,
											"end": 7962,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7803,
											"end": 7962,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7288,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 7040,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7040,
											"end": 7288,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7040,
											"end": 7288,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7288,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7288,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7288,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7288,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7288,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 7040,
											"end": 7288,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7288,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 7040,
											"end": 7288,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7040,
											"end": 7288,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 7040,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 7040,
											"end": 7288,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7040,
											"end": 7288,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7040,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7288,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5566,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 5472,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5472,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 5472,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 5472,
											"end": 5566,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5472,
											"end": 5566,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 5472,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5472,
											"end": 5566,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5472,
											"end": 5566,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5472,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 5472,
											"end": 5566,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5472,
											"end": 5566,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5472,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 5472,
											"end": 5566,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5472,
											"end": 5566,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 5472,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5472,
											"end": 5566,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5472,
											"end": 5566,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5472,
											"end": 5566,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5472,
											"end": 5566,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5472,
											"end": 5566,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5472,
											"end": 5566,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5472,
											"end": 5566,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7296,
											"end": 7570,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 7296,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7296,
											"end": 7570,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 7296,
											"end": 7570,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7296,
											"end": 7570,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7296,
											"end": 7570,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7296,
											"end": 7570,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7296,
											"end": 7570,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7296,
											"end": 7570,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7296,
											"end": 7570,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7296,
											"end": 7570,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 7296,
											"end": 7570,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7296,
											"end": 7570,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7296,
											"end": 7570,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 7296,
											"end": 7570,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7296,
											"end": 7570,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 7296,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7296,
											"end": 7570,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 7296,
											"end": 7570,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7296,
											"end": 7570,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 7296,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7296,
											"end": 7570,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 7032,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 6805,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 6805,
											"end": 7032,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6805,
											"end": 7032,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 7032,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 7032,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 7032,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 7032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 7032,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 6805,
											"end": 7032,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 7032,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 6805,
											"end": 7032,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6805,
											"end": 7032,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 6805,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 6805,
											"end": 7032,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6805,
											"end": 7032,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 6805,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 7032,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3689,
											"end": 4271,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 3689,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3689,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 3689,
											"end": 4271,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3689,
											"end": 4271,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3689,
											"end": 4271,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3689,
											"end": 4271,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3689,
											"end": 4271,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3689,
											"end": 4271,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3689,
											"end": 4271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3689,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 3689,
											"end": 4271,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3689,
											"end": 4271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3689,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3689,
											"end": 4271,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3689,
											"end": 4271,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 3689,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3689,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3689,
											"end": 4271,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3689,
											"end": 4271,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 3689,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3689,
											"end": 4271,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4374,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 4279,
											"end": 4374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4326,
											"end": 4333,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4355,
											"end": 4366,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4355,
											"end": 4366,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4348,
											"end": 4366,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4348,
											"end": 4366,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4374,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5613,
											"end": 6793,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 5613,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5676,
											"end": 5697,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5700,
											"end": 5707,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 5700,
											"end": 5719,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5708,
											"end": 5718,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5700,
											"end": 5719,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5700,
											"end": 5719,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5700,
											"end": 5719,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5700,
											"end": 5719,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5700,
											"end": 5719,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5700,
											"end": 5719,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5700,
											"end": 5719,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5700,
											"end": 5719,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5700,
											"end": 5719,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5700,
											"end": 5719,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5700,
											"end": 5719,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5700,
											"end": 5719,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5700,
											"end": 5719,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5700,
											"end": 5719,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5700,
											"end": 5719,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5676,
											"end": 5719,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5676,
											"end": 5719,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5753,
											"end": 5754,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5744,
											"end": 5750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5744,
											"end": 5754,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5736,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 5736,
											"end": 5790,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5736,
											"end": 5790,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5736,
											"end": 5790,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5736,
											"end": 5790,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5736,
											"end": 5790,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5736,
											"end": 5790,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5736,
											"end": 5790,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5736,
											"end": 5790,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5736,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 5736,
											"end": 5790,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5736,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 5736,
											"end": 5790,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5736,
											"end": 5790,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 5736,
											"end": 5790,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5736,
											"end": 5790,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5736,
											"end": 5790,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5736,
											"end": 5790,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5736,
											"end": 5790,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5736,
											"end": 5790,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5736,
											"end": 5790,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5736,
											"end": 5790,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5736,
											"end": 5790,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 5736,
											"end": 5790,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5819,
											"end": 5825,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5819,
											"end": 5838,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5819,
											"end": 5838,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5819,
											"end": 5838,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5809,
											"end": 5815,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5809,
											"end": 5838,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5809,
											"end": 5838,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5801,
											"end": 5857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 5801,
											"end": 5857,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5801,
											"end": 5857,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5801,
											"end": 5857,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5801,
											"end": 5857,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5801,
											"end": 5857,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5801,
											"end": 5857,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5801,
											"end": 5857,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5801,
											"end": 5857,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5801,
											"end": 5857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 5801,
											"end": 5857,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5801,
											"end": 5857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 5801,
											"end": 5857,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5801,
											"end": 5857,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 5801,
											"end": 5857,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5801,
											"end": 5857,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5801,
											"end": 5857,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5801,
											"end": 5857,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5801,
											"end": 5857,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5801,
											"end": 5857,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5801,
											"end": 5857,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5801,
											"end": 5857,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5801,
											"end": 5857,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 5801,
											"end": 5857,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5870,
											"end": 5884,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 5870,
											"end": 5882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 5870,
											"end": 5884,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5870,
											"end": 5884,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 5870,
											"end": 5884,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5895,
											"end": 5922,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5934,
											"end": 5939,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 5934,
											"end": 5939,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5934,
											"end": 5939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5939,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5939,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5934,
											"end": 5939,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5939,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5939,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5934,
											"end": 5939,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5949,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5934,
											"end": 5949,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5949,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 5958,
											"end": 5962,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5925,
											"end": 5931,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5925,
											"end": 5964,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5925,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 5925,
											"end": 6006,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 5981,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 5976,
											"end": 5981,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5976,
											"end": 5981,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 5981,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 5981,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 5981,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5976,
											"end": 5981,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 5981,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 5981,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 5981,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5976,
											"end": 5981,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 5991,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5976,
											"end": 5991,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 5991,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 6000,
											"end": 6004,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 5976,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5925,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 5925,
											"end": 6006,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5925,
											"end": 6006,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 5925,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5967,
											"end": 5973,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5925,
											"end": 6006,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 5925,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5895,
											"end": 6006,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5895,
											"end": 6006,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6017,
											"end": 6031,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 6081,
											"end": 6087,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 6034,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 6054,
											"end": 6060,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6054,
											"end": 6075,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6054,
											"end": 6075,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6054,
											"end": 6075,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6053,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 6034,
											"end": 6053,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6076,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6076,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6076,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6076,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6076,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6034,
											"end": 6076,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 6034,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 6034,
											"end": 6080,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6088,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6088,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6088,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6088,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6088,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6034,
											"end": 6088,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 6034,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6017,
											"end": 6088,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6017,
											"end": 6088,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6113,
											"end": 6116,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6099,
											"end": 6116,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6127,
											"end": 6148,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6166,
											"end": 6167,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6151,
											"end": 6157,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6151,
											"end": 6162,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6151,
											"end": 6162,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6151,
											"end": 6162,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6151,
											"end": 6167,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6151,
											"end": 6167,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6151,
											"end": 6285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 6151,
											"end": 6285,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 6271,
											"end": 6284,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6271,
											"end": 6284,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6245,
											"end": 6251,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6245,
											"end": 6266,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6245,
											"end": 6266,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6245,
											"end": 6266,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6245,
											"end": 6270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 6245,
											"end": 6270,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6226,
											"end": 6241,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 6226,
											"end": 6285,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6226,
											"end": 6285,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6151,
											"end": 6285,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 6151,
											"end": 6285,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6151,
											"end": 6285,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 6151,
											"end": 6285,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6195,
											"end": 6196,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6191,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6179,
											"end": 6191,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6176,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 6170,
											"end": 6191,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6191,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 6170,
											"end": 6191,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6170,
											"end": 6191,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 6170,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6196,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6210,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6210,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 6170,
											"end": 6210,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6210,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6209,
											"end": 6210,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6200,
											"end": 6206,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6200,
											"end": 6210,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6210,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 6170,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6151,
											"end": 6285,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 6151,
											"end": 6285,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6127,
											"end": 6285,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6127,
											"end": 6285,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6317,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6296,
											"end": 6369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 6296,
											"end": 6369,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6340,
											"end": 6357,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6340,
											"end": 6357,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6334,
											"end": 6357,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6334,
											"end": 6357,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6296,
											"end": 6369,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 6296,
											"end": 6369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6401,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 6425,
											"end": 6462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 6458,
											"end": 6461,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 6425,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 6449,
											"end": 6452,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6444,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 6425,
											"end": 6448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6453,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6453,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6453,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6425,
											"end": 6453,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6453,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6425,
											"end": 6453,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 6425,
											"end": 6453,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 6425,
											"end": 6457,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6462,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6462,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6462,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6425,
											"end": 6462,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6462,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6425,
											"end": 6462,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 6425,
											"end": 6462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6401,
											"end": 6420,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6401,
											"end": 6424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 6401,
											"end": 6424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6401,
											"end": 6463,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6401,
											"end": 6463,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6401,
											"end": 6463,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6401,
											"end": 6463,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6401,
											"end": 6463,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6401,
											"end": 6463,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 6401,
											"end": 6463,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6379,
											"end": 6463,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6379,
											"end": 6463,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 6504,
											"end": 6523,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6499,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 6488,
											"end": 6499,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 6488,
											"end": 6503,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6524,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6524,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6524,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6488,
											"end": 6524,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6524,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6488,
											"end": 6524,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 6488,
											"end": 6524,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6474,
											"end": 6485,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 6474,
											"end": 6524,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6474,
											"end": 6524,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6474,
											"end": 6524,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6474,
											"end": 6524,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6557,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 6581,
											"end": 6600,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6557,
											"end": 6563,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6557,
											"end": 6576,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6557,
											"end": 6576,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6557,
											"end": 6576,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6557,
											"end": 6580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 6557,
											"end": 6580,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6557,
											"end": 6601,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6557,
											"end": 6601,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6557,
											"end": 6601,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6557,
											"end": 6601,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6557,
											"end": 6601,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6557,
											"end": 6601,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 6557,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6535,
											"end": 6541,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6535,
											"end": 6554,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6535,
											"end": 6554,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6535,
											"end": 6601,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6535,
											"end": 6601,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6535,
											"end": 6601,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6535,
											"end": 6601,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 6631,
											"end": 6641,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6643,
											"end": 6662,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6617,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 6612,
											"end": 6617,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6612,
											"end": 6617,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6617,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6617,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6617,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6612,
											"end": 6617,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6617,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6617,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6617,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6612,
											"end": 6617,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6630,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6612,
											"end": 6630,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 6612,
											"end": 6630,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6663,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6663,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6663,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6663,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6612,
											"end": 6663,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6612,
											"end": 6663,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6612,
											"end": 6663,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 6612,
											"end": 6663,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 6722,
											"name": "PUSH",
											"source": 7,
											"value": "884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
										},
										{
											"begin": 6690,
											"end": 6700,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6702,
											"end": 6721,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 6722,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6681,
											"end": 6722,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 6681,
											"end": 6722,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 6722,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 6722,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 6681,
											"end": 6722,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6681,
											"end": 6722,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 6681,
											"end": 6722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 6722,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6681,
											"end": 6722,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 6722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 6722,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 6722,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 6722,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 6722,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 5655,
											"end": 6793,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5655,
											"end": 6793,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5655,
											"end": 6793,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5655,
											"end": 6793,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5655,
											"end": 6793,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5613,
											"end": 6793,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5613,
											"end": 6793,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8003,
											"end": 8585,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 8003,
											"end": 8585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8049,
											"end": 8063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 8049,
											"end": 8061,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 8049,
											"end": 8063,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8049,
											"end": 8063,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 8049,
											"end": 8063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8074,
											"end": 8095,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8105,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8106,
											"end": 8116,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8117,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8074,
											"end": 8117,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8074,
											"end": 8117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8128,
											"end": 8149,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8152,
											"end": 8239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 8183,
											"end": 8238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 8234,
											"end": 8237,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 8183,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8214,
											"end": 8228,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8189,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8209,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8183,
											"end": 8209,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8209,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 8183,
											"end": 8213,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8229,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8229,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8183,
											"end": 8229,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8229,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8183,
											"end": 8229,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 8183,
											"end": 8229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 8183,
											"end": 8233,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8238,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8238,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8238,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8183,
											"end": 8238,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8238,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8183,
											"end": 8238,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 8183,
											"end": 8238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8152,
											"end": 8158,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8152,
											"end": 8178,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8152,
											"end": 8178,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8152,
											"end": 8178,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8152,
											"end": 8182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 8152,
											"end": 8182,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8152,
											"end": 8239,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8152,
											"end": 8239,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8152,
											"end": 8239,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8152,
											"end": 8239,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8152,
											"end": 8239,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8152,
											"end": 8239,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 8152,
											"end": 8239,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8128,
											"end": 8239,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8128,
											"end": 8239,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8284,
											"end": 8285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8268,
											"end": 8281,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8268,
											"end": 8285,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 8260,
											"end": 8306,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8306,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8260,
											"end": 8306,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8306,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8260,
											"end": 8306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8306,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8306,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8260,
											"end": 8306,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 8260,
											"end": 8306,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 8260,
											"end": 8306,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8260,
											"end": 8306,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 8260,
											"end": 8306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8306,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8260,
											"end": 8306,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8306,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8306,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8306,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8306,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8306,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8306,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 8260,
											"end": 8306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8342,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 8337,
											"end": 8342,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8337,
											"end": 8342,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8342,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8342,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8342,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 8337,
											"end": 8342,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8342,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8342,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8342,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8337,
											"end": 8342,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8352,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8337,
											"end": 8352,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8352,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 8361,
											"end": 8365,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8321,
											"end": 8334,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8321,
											"end": 8367,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8317,
											"end": 8428,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8317,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 8317,
											"end": 8428,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8403,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 8398,
											"end": 8403,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8398,
											"end": 8403,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8403,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8403,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8403,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 8398,
											"end": 8403,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8403,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8403,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8403,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8398,
											"end": 8403,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8413,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8398,
											"end": 8413,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8413,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 8422,
											"end": 8426,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 8398,
											"end": 8428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8382,
											"end": 8428,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8382,
											"end": 8428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8317,
											"end": 8428,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 8317,
											"end": 8428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8439,
											"end": 8484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 8458,
											"end": 8468,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 8470,
											"end": 8483,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8439,
											"end": 8457,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8439,
											"end": 8457,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8439,
											"end": 8457,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 8439,
											"end": 8457,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8439,
											"end": 8484,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8439,
											"end": 8484,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8439,
											"end": 8484,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8439,
											"end": 8484,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8439,
											"end": 8484,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8439,
											"end": 8484,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8439,
											"end": 8484,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 8439,
											"end": 8484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8524,
											"end": 8525,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8495,
											"end": 8501,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8495,
											"end": 8521,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8495,
											"end": 8521,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8495,
											"end": 8525,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8495,
											"end": 8525,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8495,
											"end": 8525,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8495,
											"end": 8525,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8543,
											"end": 8577,
											"name": "PUSH",
											"source": 7,
											"value": "C9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA"
										},
										{
											"begin": 8551,
											"end": 8561,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8576,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8543,
											"end": 8577,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8543,
											"end": 8577,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8543,
											"end": 8577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 8543,
											"end": 8577,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8543,
											"end": 8577,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8543,
											"end": 8577,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8543,
											"end": 8577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 8543,
											"end": 8577,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8543,
											"end": 8577,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 8543,
											"end": 8577,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8543,
											"end": 8577,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8543,
											"end": 8577,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8543,
											"end": 8577,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8543,
											"end": 8577,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8543,
											"end": 8577,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8543,
											"end": 8577,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8543,
											"end": 8577,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 8028,
											"end": 8585,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8028,
											"end": 8585,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8003,
											"end": 8585,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4824,
											"end": 4831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4878,
											"end": 4882,
											"name": "PUSH",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 4850,
											"end": 4857,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4850,
											"end": 4867,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4858,
											"end": 4866,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4867,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4850,
											"end": 4867,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4867,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4850,
											"end": 4867,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4867,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4867,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4867,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4867,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4867,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4867,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4850,
											"end": 4867,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4874,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4850,
											"end": 4874,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4874,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4882,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4904,
											"end": 4905,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4897,
											"end": 4905,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4897,
											"end": 4905,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4897,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 4897,
											"end": 4905,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 4846,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4946,
											"end": 4947,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4920,
											"end": 4927,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4920,
											"end": 4937,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4928,
											"end": 4936,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 4937,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4920,
											"end": 4937,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 4937,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4920,
											"end": 4937,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 4937,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 4937,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 4937,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4920,
											"end": 4937,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 4937,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 4937,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 4937,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 4937,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4920,
											"end": 4937,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 4937,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4920,
											"end": 4937,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 4942,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4920,
											"end": 4942,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 4942,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 4947,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 4916,
											"end": 5161,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5038,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5026,
											"end": 5032,
											"name": "PUSH",
											"source": 7,
											"value": "93A80"
										},
										{
											"begin": 4969,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 4989,
											"end": 4996,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4989,
											"end": 5006,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4997,
											"end": 5005,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5006,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4989,
											"end": 5006,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5006,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4989,
											"end": 5006,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5006,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5006,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5006,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4989,
											"end": 5006,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5006,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5006,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5006,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5006,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4989,
											"end": 5006,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5006,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4989,
											"end": 5006,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5021,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4989,
											"end": 5021,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4989,
											"end": 5021,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4984,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4988,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 4969,
											"end": 4988,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5022,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5022,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4969,
											"end": 5022,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5022,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4969,
											"end": 5022,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 4969,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 4969,
											"end": 5033,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5033,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 4969,
											"end": 5033,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4969,
											"end": 5033,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 4969,
											"end": 5033,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5038,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 4969,
											"end": 5046,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5046,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4969,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 4969,
											"end": 5046,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5046,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 4969,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5042,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4969,
											"end": 5046,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 4969,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4962,
											"end": 5046,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4962,
											"end": 5046,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4962,
											"end": 5046,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4962,
											"end": 5046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4962,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 4962,
											"end": 5046,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 5161,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 4916,
											"end": 5161,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5140,
											"end": 5153,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5140,
											"end": 5153,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5083,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 5103,
											"end": 5110,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 5103,
											"end": 5120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5111,
											"end": 5119,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5103,
											"end": 5120,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5103,
											"end": 5120,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5103,
											"end": 5120,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5103,
											"end": 5120,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5103,
											"end": 5120,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5103,
											"end": 5120,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5103,
											"end": 5120,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5103,
											"end": 5120,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5103,
											"end": 5120,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5103,
											"end": 5120,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5103,
											"end": 5120,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5103,
											"end": 5120,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5103,
											"end": 5120,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5103,
											"end": 5120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5103,
											"end": 5120,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5103,
											"end": 5135,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5103,
											"end": 5135,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5103,
											"end": 5135,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5083,
											"end": 5098,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 5083,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 5083,
											"end": 5102,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5083,
											"end": 5136,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5083,
											"end": 5136,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5083,
											"end": 5136,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5083,
											"end": 5136,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5083,
											"end": 5136,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5083,
											"end": 5136,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 5083,
											"end": 5136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5083,
											"end": 5153,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5083,
											"end": 5153,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5083,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 5083,
											"end": 5161,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5160,
											"end": 5161,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5083,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 5083,
											"end": 5161,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5083,
											"end": 5161,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 5083,
											"end": 5161,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5156,
											"end": 5157,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5083,
											"end": 5161,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 5083,
											"end": 5161,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5076,
											"end": 5161,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5076,
											"end": 5161,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5076,
											"end": 5161,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5076,
											"end": 5161,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 5169,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7578,
											"end": 7740,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 7578,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7674,
											"end": 7675,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7661,
											"end": 7671,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7661,
											"end": 7675,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7653,
											"end": 7693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 7653,
											"end": 7693,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7653,
											"end": 7693,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7653,
											"end": 7693,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7653,
											"end": 7693,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7653,
											"end": 7693,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7653,
											"end": 7693,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7653,
											"end": 7693,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7653,
											"end": 7693,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7653,
											"end": 7693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 7653,
											"end": 7693,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7653,
											"end": 7693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 7653,
											"end": 7693,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7653,
											"end": 7693,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 7653,
											"end": 7693,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7653,
											"end": 7693,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7653,
											"end": 7693,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7653,
											"end": 7693,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7653,
											"end": 7693,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7653,
											"end": 7693,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7653,
											"end": 7693,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7653,
											"end": 7693,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7653,
											"end": 7693,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 7653,
											"end": 7693,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7722,
											"end": 7732,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 7719,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7706,
											"end": 7732,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 7732,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 7732,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 7732,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7740,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2742,
											"end": 3621,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 2742,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2844,
											"end": 2845,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2841,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2845,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 2826,
											"end": 2881,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2881,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2826,
											"end": 2881,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2881,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2826,
											"end": 2881,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2881,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2881,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2826,
											"end": 2881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 2826,
											"end": 2881,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2826,
											"end": 2881,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2826,
											"end": 2881,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 2826,
											"end": 2881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2881,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2826,
											"end": 2881,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2881,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2881,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2881,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2881,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2881,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2881,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 2826,
											"end": 2881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2930,
											"end": 2937,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2905,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 2900,
											"end": 2905,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2905,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2905,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2905,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2905,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2900,
											"end": 2905,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2905,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2905,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2905,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2900,
											"end": 2905,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2915,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2900,
											"end": 2915,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2915,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 2916,
											"end": 2926,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 2900,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2937,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2892,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 2892,
											"end": 2955,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2892,
											"end": 2955,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2892,
											"end": 2955,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2892,
											"end": 2955,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2892,
											"end": 2955,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2892,
											"end": 2955,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2892,
											"end": 2955,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2892,
											"end": 2955,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2892,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 2892,
											"end": 2955,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2892,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 2892,
											"end": 2955,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2892,
											"end": 2955,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 2892,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2892,
											"end": 2955,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2892,
											"end": 2955,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2892,
											"end": 2955,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2892,
											"end": 2955,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2892,
											"end": 2955,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2892,
											"end": 2955,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2892,
											"end": 2955,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2892,
											"end": 2955,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 2892,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3008,
											"name": "PUSH",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2974,
											"end": 2981,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2974,
											"end": 2993,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2982,
											"end": 2992,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 2993,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2974,
											"end": 2993,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 2993,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2974,
											"end": 2993,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 2993,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 2993,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 2993,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2974,
											"end": 2993,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 2993,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 2993,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 2993,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 2993,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2974,
											"end": 2993,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 2993,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2974,
											"end": 2993,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3000,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2974,
											"end": 3000,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3000,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3008,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3008,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2966,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2966,
											"end": 3028,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2966,
											"end": 3028,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2966,
											"end": 3028,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2966,
											"end": 3028,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2966,
											"end": 3028,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2966,
											"end": 3028,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2966,
											"end": 3028,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2966,
											"end": 3028,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2966,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2966,
											"end": 3028,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2966,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2966,
											"end": 3028,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2966,
											"end": 3028,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2966,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2966,
											"end": 3028,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2966,
											"end": 3028,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2966,
											"end": 3028,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2966,
											"end": 3028,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2966,
											"end": 3028,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2966,
											"end": 3028,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2966,
											"end": 3028,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2966,
											"end": 3028,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2966,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3062,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3053,
											"end": 3058,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3053,
											"end": 3063,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3392,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 3049,
											"end": 3392,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3083,
											"end": 3084,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3080,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3073,
											"end": 3084,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3065,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 3065,
											"end": 3085,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3065,
											"end": 3085,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3065,
											"end": 3085,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3065,
											"end": 3085,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3065,
											"end": 3085,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 3065,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3049,
											"end": 3392,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3392,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 3049,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3114,
											"end": 3115,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3105,
											"end": 3110,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3115,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3392,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3101,
											"end": 3392,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3136,
											"end": 3153,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3136,
											"end": 3153,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3125,
											"end": 3132,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3125,
											"end": 3153,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3125,
											"end": 3153,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3117,
											"end": 3170,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3170,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3170,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3170,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3117,
											"end": 3170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3170,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3170,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3117,
											"end": 3170,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3117,
											"end": 3170,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 3117,
											"end": 3170,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3117,
											"end": 3170,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3117,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3170,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3117,
											"end": 3170,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3170,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3170,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3170,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3170,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3170,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3170,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3117,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3101,
											"end": 3392,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3392,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3101,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3199,
											"end": 3200,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3190,
											"end": 3195,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3200,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3186,
											"end": 3392,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3186,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3186,
											"end": 3392,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3238,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3221,
											"end": 3238,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3217,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3238,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3238,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 3202,
											"end": 3255,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3255,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3202,
											"end": 3255,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3255,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3202,
											"end": 3255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3255,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3255,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3202,
											"end": 3255,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3202,
											"end": 3255,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 3202,
											"end": 3255,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3202,
											"end": 3255,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3202,
											"end": 3255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3255,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3202,
											"end": 3255,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3255,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3255,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3255,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3255,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3255,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3255,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 3202,
											"end": 3255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3186,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 3186,
											"end": 3392,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3186,
											"end": 3392,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3186,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3284,
											"end": 3285,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3275,
											"end": 3280,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3275,
											"end": 3285,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3392,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 3271,
											"end": 3392,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3306,
											"end": 3323,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3306,
											"end": 3323,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3302,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3323,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3323,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3287,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 3287,
											"end": 3340,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3287,
											"end": 3340,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3287,
											"end": 3340,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3287,
											"end": 3340,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3287,
											"end": 3340,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3287,
											"end": 3340,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3287,
											"end": 3340,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3287,
											"end": 3340,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3287,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 3287,
											"end": 3340,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3287,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 3287,
											"end": 3340,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3287,
											"end": 3340,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 3287,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3287,
											"end": 3340,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3287,
											"end": 3340,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3287,
											"end": 3340,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3287,
											"end": 3340,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3287,
											"end": 3340,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3287,
											"end": 3340,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3287,
											"end": 3340,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3287,
											"end": 3340,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 3287,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 3271,
											"end": 3392,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3392,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 3271,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3374,
											"end": 3375,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3364,
											"end": 3375,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3356,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 3356,
											"end": 3392,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3356,
											"end": 3392,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3356,
											"end": 3392,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3356,
											"end": 3392,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3356,
											"end": 3392,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3356,
											"end": 3392,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3356,
											"end": 3392,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3356,
											"end": 3392,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3356,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 3356,
											"end": 3392,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3356,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 3356,
											"end": 3392,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3356,
											"end": 3392,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 3356,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3356,
											"end": 3392,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3356,
											"end": 3392,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3356,
											"end": 3392,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3356,
											"end": 3392,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3356,
											"end": 3392,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3356,
											"end": 3392,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3356,
											"end": 3392,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3356,
											"end": 3392,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 3356,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3392,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 3271,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3186,
											"end": 3392,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 3186,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3392,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3101,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3392,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3049,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3420,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 3413,
											"end": 3432,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3431,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3432,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3413,
											"end": 3432,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3432,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3413,
											"end": 3432,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3432,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3432,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3432,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3413,
											"end": 3432,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3432,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3432,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3432,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3432,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3413,
											"end": 3432,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3432,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3413,
											"end": 3432,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3437,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3413,
											"end": 3437,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3445,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3445,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3445,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3493,
											"end": 3508,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 3456,
											"end": 3463,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 3456,
											"end": 3475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3464,
											"end": 3474,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3456,
											"end": 3475,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3456,
											"end": 3475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3456,
											"end": 3475,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3456,
											"end": 3475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3456,
											"end": 3475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3456,
											"end": 3475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3456,
											"end": 3475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3456,
											"end": 3475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3456,
											"end": 3475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3456,
											"end": 3475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3456,
											"end": 3475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3456,
											"end": 3475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3456,
											"end": 3475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3456,
											"end": 3475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3456,
											"end": 3475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3456,
											"end": 3490,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3456,
											"end": 3490,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3456,
											"end": 3508,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3456,
											"end": 3508,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3456,
											"end": 3508,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3456,
											"end": 3508,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3548,
											"end": 3552,
											"name": "PUSH",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 3519,
											"end": 3526,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 3519,
											"end": 3538,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3537,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3538,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3519,
											"end": 3538,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3538,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3519,
											"end": 3538,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3538,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3538,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3538,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3538,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3538,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3538,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3538,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3538,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3538,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3538,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3538,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3545,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3519,
											"end": 3545,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3552,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3552,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3552,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3552,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3571,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3577,
											"end": 3587,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3588,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 3605,
											"end": 3612,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3599,
											"end": 3613,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3599,
											"end": 3613,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 3599,
											"end": 3613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 3621,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 3621,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 3621,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4382,
											"end": 4485,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 4382,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4440,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4462,
											"end": 4470,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 4462,
											"end": 4477,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4462,
											"end": 4477,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4462,
											"end": 4477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4462,
											"end": 4477,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4455,
											"end": 4477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4455,
											"end": 4477,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4485,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7803,
											"end": 7962,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 7803,
											"end": 7962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7851,
											"end": 7858,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7915,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 7915,
											"end": 7934,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7923,
											"end": 7933,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7915,
											"end": 7934,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7915,
											"end": 7934,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7915,
											"end": 7934,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7915,
											"end": 7934,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7915,
											"end": 7934,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7915,
											"end": 7934,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7915,
											"end": 7934,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7915,
											"end": 7934,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7915,
											"end": 7934,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7915,
											"end": 7934,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7915,
											"end": 7934,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7915,
											"end": 7934,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7915,
											"end": 7934,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7915,
											"end": 7934,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7915,
											"end": 7934,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7915,
											"end": 7954,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7915,
											"end": 7954,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7915,
											"end": 7954,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7954,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7954,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7803,
											"end": 7962,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7803,
											"end": 7962,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5390,
											"end": 5397,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 5419,
											"end": 5436,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5427,
											"end": 5435,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5436,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5419,
											"end": 5436,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5436,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5419,
											"end": 5436,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5436,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5436,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5436,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5419,
											"end": 5436,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5436,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5436,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5436,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5419,
											"end": 5436,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5436,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5419,
											"end": 5436,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5456,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5419,
											"end": 5456,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5456,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5412,
											"end": 5456,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5412,
											"end": 5456,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5464,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7040,
											"end": 7288,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 7040,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7151,
											"end": 7152,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7135,
											"end": 7148,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7152,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7127,
											"end": 7180,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 7127,
											"end": 7180,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7127,
											"end": 7180,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7127,
											"end": 7180,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7127,
											"end": 7180,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7127,
											"end": 7180,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7127,
											"end": 7180,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7127,
											"end": 7180,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7127,
											"end": 7180,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7127,
											"end": 7180,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 7127,
											"end": 7180,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7127,
											"end": 7180,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 7127,
											"end": 7180,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7127,
											"end": 7180,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 7127,
											"end": 7180,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7127,
											"end": 7180,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7127,
											"end": 7180,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7127,
											"end": 7180,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7127,
											"end": 7180,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7127,
											"end": 7180,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7127,
											"end": 7180,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7127,
											"end": 7180,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7127,
											"end": 7180,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 7127,
											"end": 7180,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7208,
											"end": 7233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 7226,
											"end": 7232,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 7208,
											"end": 7221,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7208,
											"end": 7225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 7208,
											"end": 7225,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7208,
											"end": 7233,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7208,
											"end": 7233,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7208,
											"end": 7233,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7208,
											"end": 7233,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7208,
											"end": 7233,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7208,
											"end": 7233,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 7208,
											"end": 7233,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7193,
											"end": 7205,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7193,
											"end": 7233,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7193,
											"end": 7233,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7193,
											"end": 7233,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7193,
											"end": 7233,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7251,
											"end": 7280,
											"name": "PUSH",
											"source": 7,
											"value": "189BDA9782663C67A3F95C0AA5455924C711210B00281C60EAD2F0DD8DBC924C"
										},
										{
											"begin": 7266,
											"end": 7279,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7251,
											"end": 7280,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7251,
											"end": 7280,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7251,
											"end": 7280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 7251,
											"end": 7280,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7251,
											"end": 7280,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7251,
											"end": 7280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 7251,
											"end": 7280,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7251,
											"end": 7280,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 7251,
											"end": 7280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7251,
											"end": 7280,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7251,
											"end": 7280,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7251,
											"end": 7280,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7251,
											"end": 7280,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7251,
											"end": 7280,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7251,
											"end": 7280,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7251,
											"end": 7280,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7288,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7288,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5472,
											"end": 5566,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 5472,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5518,
											"end": 5525,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5558,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5547,
											"end": 5558,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5558,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5558,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5472,
											"end": 5566,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5472,
											"end": 5566,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1195,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7296,
											"end": 7570,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 7296,
											"end": 7570,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7422,
											"end": 7423,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7401,
											"end": 7419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7401,
											"end": 7423,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7393,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 7393,
											"end": 7454,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7393,
											"end": 7454,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7393,
											"end": 7454,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7393,
											"end": 7454,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7393,
											"end": 7454,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7393,
											"end": 7454,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7393,
											"end": 7454,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7393,
											"end": 7454,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7393,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 7393,
											"end": 7454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7393,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 7393,
											"end": 7454,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7393,
											"end": 7454,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 7393,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7393,
											"end": 7454,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7393,
											"end": 7454,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7393,
											"end": 7454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7393,
											"end": 7454,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7393,
											"end": 7454,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7393,
											"end": 7454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7393,
											"end": 7454,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7393,
											"end": 7454,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 7393,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7487,
											"end": 7505,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7467,
											"end": 7484,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7467,
											"end": 7505,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7467,
											"end": 7505,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7467,
											"end": 7505,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7467,
											"end": 7505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7523,
											"end": 7562,
											"name": "PUSH",
											"source": 7,
											"value": "150C688DD7595BF7862B8AB1FE46756450EB7D731037942B3BBC46F3F0E21B81"
										},
										{
											"begin": 7543,
											"end": 7561,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7523,
											"end": 7562,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7523,
											"end": 7562,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7523,
											"end": 7562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 7523,
											"end": 7562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7523,
											"end": 7562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7523,
											"end": 7562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 7523,
											"end": 7562,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7523,
											"end": 7562,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 7523,
											"end": 7562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7523,
											"end": 7562,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7523,
											"end": 7562,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7523,
											"end": 7562,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7523,
											"end": 7562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7523,
											"end": 7562,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7523,
											"end": 7562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7523,
											"end": 7562,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 7296,
											"end": 7570,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7296,
											"end": 7570,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6805,
											"end": 7032,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 6805,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6913,
											"end": 6914,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6898,
											"end": 6910,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6898,
											"end": 6914,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6890,
											"end": 6932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 6890,
											"end": 6932,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6890,
											"end": 6932,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6890,
											"end": 6932,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6890,
											"end": 6932,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6890,
											"end": 6932,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6890,
											"end": 6932,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6890,
											"end": 6932,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6890,
											"end": 6932,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6890,
											"end": 6932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 6890,
											"end": 6932,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6890,
											"end": 6932,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 6890,
											"end": 6932,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6890,
											"end": 6932,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 6890,
											"end": 6932,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6890,
											"end": 6932,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6890,
											"end": 6932,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6890,
											"end": 6932,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6890,
											"end": 6932,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6890,
											"end": 6932,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6890,
											"end": 6932,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6890,
											"end": 6932,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6890,
											"end": 6932,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 6890,
											"end": 6932,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6967,
											"end": 6979,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 6964,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6953,
											"end": 6979,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 6979,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 6979,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 6979,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6997,
											"end": 7024,
											"name": "PUSH",
											"source": 7,
											"value": "1946FB78C7CA778B54D82CABAAC5BA67CF446F58D0FF1F8CEAEBB6150E54E44F"
										},
										{
											"begin": 7011,
											"end": 7023,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6997,
											"end": 7024,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6997,
											"end": 7024,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6997,
											"end": 7024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 6997,
											"end": 7024,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6997,
											"end": 7024,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6997,
											"end": 7024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 6997,
											"end": 7024,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6997,
											"end": 7024,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 6997,
											"end": 7024,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6997,
											"end": 7024,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6997,
											"end": 7024,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6997,
											"end": 7024,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6997,
											"end": 7024,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6997,
											"end": 7024,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6997,
											"end": 7024,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6997,
											"end": 7024,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 7032,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 7032,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3689,
											"end": 4271,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3689,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3766,
											"end": 3767,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3756,
											"end": 3763,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3756,
											"end": 3767,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3748,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 3748,
											"end": 3803,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3748,
											"end": 3803,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3748,
											"end": 3803,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3748,
											"end": 3803,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3748,
											"end": 3803,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3748,
											"end": 3803,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3748,
											"end": 3803,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3748,
											"end": 3803,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3748,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 3748,
											"end": 3803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3748,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 3748,
											"end": 3803,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3748,
											"end": 3803,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 3748,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3748,
											"end": 3803,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3748,
											"end": 3803,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3748,
											"end": 3803,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3748,
											"end": 3803,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3748,
											"end": 3803,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3748,
											"end": 3803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3748,
											"end": 3803,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3748,
											"end": 3803,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 3748,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3852,
											"end": 3859,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3827,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 3822,
											"end": 3827,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3822,
											"end": 3827,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3827,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3827,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3827,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3822,
											"end": 3827,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3827,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3827,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3827,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3822,
											"end": 3827,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3837,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3822,
											"end": 3837,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3837,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 3838,
											"end": 3848,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 3822,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3822,
											"end": 3859,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3814,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 3814,
											"end": 3877,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3814,
											"end": 3877,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3814,
											"end": 3877,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3814,
											"end": 3877,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3814,
											"end": 3877,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3814,
											"end": 3877,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3814,
											"end": 3877,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3814,
											"end": 3877,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3814,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 3814,
											"end": 3877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3814,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 3814,
											"end": 3877,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3814,
											"end": 3877,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 3814,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3814,
											"end": 3877,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3814,
											"end": 3877,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3814,
											"end": 3877,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3814,
											"end": 3877,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3814,
											"end": 3877,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3814,
											"end": 3877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3814,
											"end": 3877,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3814,
											"end": 3877,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 3814,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 3930,
											"name": "PUSH",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 3896,
											"end": 3903,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 3896,
											"end": 3915,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3904,
											"end": 3914,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3896,
											"end": 3915,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3896,
											"end": 3915,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3896,
											"end": 3915,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3896,
											"end": 3915,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3896,
											"end": 3915,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3896,
											"end": 3915,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3896,
											"end": 3915,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 3915,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3896,
											"end": 3915,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3896,
											"end": 3915,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3896,
											"end": 3915,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3896,
											"end": 3915,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 3915,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3896,
											"end": 3915,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3896,
											"end": 3915,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3896,
											"end": 3922,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3896,
											"end": 3922,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3896,
											"end": 3922,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3896,
											"end": 3930,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 3888,
											"end": 3956,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 3956,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3888,
											"end": 3956,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 3956,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3888,
											"end": 3956,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 3956,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 3956,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3888,
											"end": 3956,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 3888,
											"end": 3956,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 3888,
											"end": 3956,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3888,
											"end": 3956,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 3888,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 3956,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3888,
											"end": 3956,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 3956,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 3956,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 3956,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 3956,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 3956,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 3956,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 3888,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3977,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 3977,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 3977,
											"end": 3991,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3977,
											"end": 3991,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 3977,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 4035,
											"end": 4045,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 4062,
											"end": 4069,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4017,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 4012,
											"end": 4017,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4012,
											"end": 4017,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4017,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4017,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4017,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4012,
											"end": 4017,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4017,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4017,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4017,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4012,
											"end": 4017,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4034,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4012,
											"end": 4034,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 4012,
											"end": 4034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4070,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4070,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4070,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4070,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4012,
											"end": 4070,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4070,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4012,
											"end": 4070,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 4012,
											"end": 4070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 4153,
											"end": 4160,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4123,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4116,
											"end": 4135,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4124,
											"end": 4134,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4135,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4116,
											"end": 4135,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4135,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4116,
											"end": 4135,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4135,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4135,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4135,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4116,
											"end": 4135,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4135,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4135,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4135,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4135,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4116,
											"end": 4135,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4135,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4116,
											"end": 4135,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4148,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4116,
											"end": 4148,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4148,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4152,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 4116,
											"end": 4152,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4161,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4161,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4161,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4116,
											"end": 4161,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4161,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4116,
											"end": 4161,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 4116,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4088,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4081,
											"end": 4100,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4099,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4100,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4081,
											"end": 4100,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4100,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4081,
											"end": 4100,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4100,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4100,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4100,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4081,
											"end": 4100,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4100,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4100,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4100,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4100,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4081,
											"end": 4100,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4100,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4081,
											"end": 4100,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4113,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4081,
											"end": 4113,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4161,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4161,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4161,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4161,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 4202,
											"end": 4209,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4186,
											"end": 4197,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4186,
											"end": 4197,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4186,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 4186,
											"end": 4201,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4183,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4172,
											"end": 4210,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4210,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4210,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4210,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4236,
											"end": 4263,
											"name": "PUSH",
											"source": 7,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 4243,
											"end": 4253,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4262,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4236,
											"end": 4263,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4236,
											"end": 4263,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4236,
											"end": 4263,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 4236,
											"end": 4263,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4236,
											"end": 4263,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4236,
											"end": 4263,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4236,
											"end": 4263,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 4236,
											"end": 4263,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4236,
											"end": 4263,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 4236,
											"end": 4263,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4236,
											"end": 4263,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4236,
											"end": 4263,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4236,
											"end": 4263,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4236,
											"end": 4263,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4236,
											"end": 4263,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4236,
											"end": 4263,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4236,
											"end": 4263,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 3689,
											"end": 4271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3689,
											"end": 4271,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4555,
											"end": 4562,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4610,
											"end": 4611,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4584,
											"end": 4591,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4584,
											"end": 4601,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4592,
											"end": 4600,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4584,
											"end": 4601,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4584,
											"end": 4601,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4584,
											"end": 4601,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4584,
											"end": 4601,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4584,
											"end": 4601,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4584,
											"end": 4601,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4584,
											"end": 4601,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4584,
											"end": 4601,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4584,
											"end": 4601,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4584,
											"end": 4601,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4584,
											"end": 4601,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4584,
											"end": 4601,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4584,
											"end": 4601,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4584,
											"end": 4601,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4584,
											"end": 4601,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4584,
											"end": 4606,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4584,
											"end": 4606,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4584,
											"end": 4606,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4584,
											"end": 4611,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4584,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 4584,
											"end": 4619,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4619,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4584,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 4584,
											"end": 4619,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4584,
											"end": 4619,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 4584,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4614,
											"end": 4615,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4584,
											"end": 4619,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 4584,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4577,
											"end": 4619,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4577,
											"end": 4619,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4577,
											"end": 4619,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4577,
											"end": 4619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4627,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5242,
											"end": 5249,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5279,
											"end": 5286,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5287,
											"end": 5295,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5279,
											"end": 5296,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5279,
											"end": 5309,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5279,
											"end": 5309,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5279,
											"end": 5309,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5272,
											"end": 5309,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5272,
											"end": 5309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5317,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4698,
											"end": 4705,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4727,
											"end": 4734,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4727,
											"end": 4744,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4743,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4727,
											"end": 4744,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4727,
											"end": 4744,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4727,
											"end": 4744,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4727,
											"end": 4744,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4727,
											"end": 4744,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4727,
											"end": 4744,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4727,
											"end": 4744,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4727,
											"end": 4744,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4727,
											"end": 4744,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4727,
											"end": 4744,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4727,
											"end": 4744,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4727,
											"end": 4744,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4727,
											"end": 4744,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4727,
											"end": 4744,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4727,
											"end": 4744,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4727,
											"end": 4751,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4727,
											"end": 4751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4727,
											"end": 4751,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4720,
											"end": 4751,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4720,
											"end": 4751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2273,
											"end": 2730,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 2273,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2325,
											"end": 2351,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2361,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2372,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2386,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2354,
											"end": 2386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2386,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2325,
											"end": 2386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2325,
											"end": 2386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2427,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 2543,
											"end": 2546,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 2427,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 2526,
											"end": 2537,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2526,
											"end": 2537,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 2450,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 2515,
											"end": 2519,
											"name": "PUSH",
											"source": 7,
											"value": "21C0"
										},
										{
											"begin": 2450,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 2467,
											"end": 2474,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2467,
											"end": 2486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2475,
											"end": 2485,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2486,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2467,
											"end": 2486,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2486,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2467,
											"end": 2486,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2486,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2467,
											"end": 2486,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2486,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2486,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2467,
											"end": 2486,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2486,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2509,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2467,
											"end": 2509,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2509,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2450,
											"end": 2462,
											"name": "NUMBER",
											"source": 7
										},
										{
											"begin": 2450,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2450,
											"end": 2466,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2450,
											"end": 2510,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2450,
											"end": 2510,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2450,
											"end": 2510,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2450,
											"end": 2510,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2450,
											"end": 2510,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2450,
											"end": 2510,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 2450,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2450,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2450,
											"end": 2514,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2450,
											"end": 2520,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2450,
											"end": 2520,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2450,
											"end": 2520,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2450,
											"end": 2520,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2450,
											"end": 2520,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2450,
											"end": 2520,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 2450,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2445,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2427,
											"end": 2449,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2521,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2521,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2521,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2427,
											"end": 2521,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2521,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2427,
											"end": 2521,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 2427,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2427,
											"end": 2525,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2538,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2538,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2538,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2427,
											"end": 2538,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2538,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2427,
											"end": 2538,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 2427,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2427,
											"end": 2542,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2547,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2547,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2547,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2427,
											"end": 2547,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2547,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2427,
											"end": 2547,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 2427,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2407,
											"end": 2547,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2407,
											"end": 2547,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 2654,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 2644,
											"end": 2653,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 2607,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2600,
											"end": 2619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 2618,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 2619,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2600,
											"end": 2619,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 2619,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2600,
											"end": 2619,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 2619,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 2619,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 2619,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2600,
											"end": 2619,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 2619,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 2619,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 2619,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 2619,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2600,
											"end": 2619,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 2619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2600,
											"end": 2619,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2600,
											"end": 2643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 2654,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 2654,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 2654,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2600,
											"end": 2654,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 2654,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2600,
											"end": 2654,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 2600,
											"end": 2654,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2558,
											"end": 2577,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2566,
											"end": 2576,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2577,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2558,
											"end": 2577,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2577,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2558,
											"end": 2577,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2577,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2577,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2577,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2558,
											"end": 2577,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2577,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2577,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2577,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2577,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2558,
											"end": 2577,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2577,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2577,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2597,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2654,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2654,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2654,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2654,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2710,
											"end": 2722,
											"name": "NUMBER",
											"source": 7
										},
										{
											"begin": 2665,
											"end": 2672,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2665,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2683,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2665,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2665,
											"end": 2684,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2665,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2665,
											"end": 2684,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2665,
											"end": 2684,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2665,
											"end": 2684,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2665,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2665,
											"end": 2684,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2665,
											"end": 2684,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2665,
											"end": 2684,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2665,
											"end": 2684,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2665,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2665,
											"end": 2684,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2665,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2665,
											"end": 2684,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2665,
											"end": 2707,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2665,
											"end": 2707,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2665,
											"end": 2722,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2665,
											"end": 2722,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2665,
											"end": 2722,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2665,
											"end": 2722,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2304,
											"end": 2730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2304,
											"end": 2730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2730,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "tag",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "tag",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "tag",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "tag",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 290,
											"end": 467,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 290,
											"end": 467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 373,
											"end": 459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 393,
											"end": 398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 423,
											"end": 446,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 423,
											"end": 446,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 423,
											"end": 446,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 448,
											"end": 450,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 452,
											"end": 457,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 400,
											"end": 458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 373,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 373,
											"end": 459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 290,
											"end": 467,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 475,
											"end": 680,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 475,
											"end": 680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 576,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 596,
											"end": 601,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 626,
											"end": 653,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 626,
											"end": 653,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 626,
											"end": 653,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 655,
											"end": 659,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 661,
											"end": 663,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 665,
											"end": 670,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 576,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 576,
											"end": 672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 680,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3054,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 3085,
											"end": 3089,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "5361666542455032303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3065,
											"end": 3070,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 3057,
											"end": 3084,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 3057,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3161,
											"end": 3162,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3141,
											"end": 3151,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3158,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3162,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 3293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 3264,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 3137,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 3368,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4055,
											"end": 4059,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4076,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4025,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "tag",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 4025,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 4084,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "tag",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 5125,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5170,
											"end": 5175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5166,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "tag",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 5137,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5236,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "tag",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 2,
											"value": "352"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "tag",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 5228,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5341,
											"end": 5352,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "tag",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5299,
											"end": 5372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5427,
											"end": 5439,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5389,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "tag",
											"source": 2,
											"value": "359"
										},
										{
											"begin": 5389,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5382,
											"end": 5440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 5447,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7707,
											"end": 7719,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "tag",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 7731,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7876,
											"end": 7886,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7876,
											"end": 7893,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7876,
											"end": 7897,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8070,
											"end": 8080,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8064,
											"end": 8081,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8130,
											"end": 8145,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8117,
											"end": 8127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8115,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8109,
											"end": 8128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8102,
											"end": 8146,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "tag",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 7872,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8209,
											"end": 8221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "tag",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "tag",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7561,
											"end": 8253,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 513,
											"end": 535,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 513,
											"end": 535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 665,
											"end": 784,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 665,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 665,
											"end": 784,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 893,
											"end": 900,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 869,
											"end": 891,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 838,
											"end": 901,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 838,
											"end": 901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 794,
											"end": 911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 991,
											"end": 997,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1042,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1037,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1015,
											"end": 1038,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1011,
											"end": 1043,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1166,
											"end": 1167,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1241,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1233,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1137,
											"end": 1262,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1385,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1362,
											"end": 1369,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1358,
											"end": 1381,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1354,
											"end": 1386,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 1579,
											"end": 1586,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1555,
											"end": 1577,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1480,
											"end": 1597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1731,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1715,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1727,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1700,
											"end": 1732,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1855,
											"end": 1856,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 1936,
											"end": 1943,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1912,
											"end": 1934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1954,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2035,
											"end": 2041,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2049,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2092,
											"end": 2094,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2080,
											"end": 2089,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2071,
											"end": 2078,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2090,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2063,
											"end": 2095,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 2098,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 2060,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2218,
											"end": 2219,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2277,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2264,
											"end": 2286,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2296,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2189,
											"end": 2306,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2345,
											"end": 2347,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 2416,
											"end": 2423,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2413,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2405,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2392,
											"end": 2414,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 2371,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2361,
											"end": 2424,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2361,
											"end": 2424,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1967,
											"end": 2441,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 2552,
											"end": 2557,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 2534,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2529,
											"end": 2532,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2559,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2565,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2678,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 2735,
											"end": 2740,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 2703,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 2838,
											"end": 2844,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2833,
											"end": 2836,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 2757,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2750,
											"end": 2845,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2750,
											"end": 2845,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2894,
											"end": 2897,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2887,
											"end": 2891,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2885,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2876,
											"end": 2892,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2931,
											"end": 2937,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2926,
											"end": 2929,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2938,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2915,
											"end": 2938,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2679,
											"end": 2944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2571,
											"end": 2944,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 3051,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3046,
											"end": 3049,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3039,
											"end": 3103,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2950,
											"end": 3109,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3203,
											"end": 3206,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 3264,
											"end": 3269,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 3231,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 3350,
											"end": 3356,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3345,
											"end": 3348,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 3286,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3357,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 3411,
											"end": 3417,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3406,
											"end": 3409,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3399,
											"end": 3403,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3392,
											"end": 3397,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3388,
											"end": 3404,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 3465,
											"end": 3471,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3438,
											"end": 3441,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3434,
											"end": 3473,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3427,
											"end": 3473,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3427,
											"end": 3473,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3207,
											"end": 3479,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3115,
											"end": 3479,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3627,
											"end": 3630,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 3712,
											"end": 3714,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 3707,
											"end": 3710,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 3648,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3641,
											"end": 3715,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3641,
											"end": 3715,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 3813,
											"end": 3816,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3842,
											"end": 3844,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3837,
											"end": 3840,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3845,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 3845,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 3845,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3485,
											"end": 3851,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3999,
											"end": 4002,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 4084,
											"end": 4086,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 4079,
											"end": 4082,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 4020,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4013,
											"end": 4087,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4013,
											"end": 4087,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 4185,
											"end": 4188,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 4096,
											"end": 4189,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4209,
											"end": 4212,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4205,
											"end": 4217,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4217,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4217,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3857,
											"end": 4223,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4371,
											"end": 4374,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 4456,
											"end": 4458,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 4451,
											"end": 4454,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 4392,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4459,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4385,
											"end": 4459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 4557,
											"end": 4560,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 4468,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4586,
											"end": 4588,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4581,
											"end": 4584,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4577,
											"end": 4589,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 4589,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4570,
											"end": 4589,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4229,
											"end": 4595,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4746,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 4828,
											"end": 4830,
											"name": "PUSH",
											"source": 8,
											"value": "2A"
										},
										{
											"begin": 4823,
											"end": 4826,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 4764,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4757,
											"end": 4831,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4757,
											"end": 4831,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 4929,
											"end": 4932,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 4840,
											"end": 4933,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4958,
											"end": 4960,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4953,
											"end": 4956,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4949,
											"end": 4961,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4942,
											"end": 4961,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4942,
											"end": 4961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4601,
											"end": 4967,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "tag",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5115,
											"end": 5118,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 5200,
											"end": 5202,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 5195,
											"end": 5198,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 5136,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5129,
											"end": 5203,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5129,
											"end": 5203,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 5301,
											"end": 5304,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 5212,
											"end": 5305,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5332,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5325,
											"end": 5328,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5321,
											"end": 5333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5314,
											"end": 5333,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5314,
											"end": 5333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4973,
											"end": 5339,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5487,
											"end": 5490,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 5572,
											"end": 5574,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 5567,
											"end": 5570,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "tag",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 5508,
											"end": 5575,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5501,
											"end": 5575,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5501,
											"end": 5575,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 5673,
											"end": 5676,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "tag",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 5584,
											"end": 5677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5702,
											"end": 5704,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5697,
											"end": 5700,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5693,
											"end": 5705,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 5705,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 5705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5345,
											"end": 5711,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5859,
											"end": 5862,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 5944,
											"end": 5946,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 5939,
											"end": 5942,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 5880,
											"end": 5947,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 5947,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 5947,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 6045,
											"end": 6048,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 5956,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6069,
											"end": 6072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6065,
											"end": 6077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6058,
											"end": 6077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6058,
											"end": 6077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 6083,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6231,
											"end": 6234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 6316,
											"end": 6318,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 6311,
											"end": 6314,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 6252,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6245,
											"end": 6319,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6245,
											"end": 6319,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 6417,
											"end": 6420,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 6328,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6446,
											"end": 6448,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6441,
											"end": 6444,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6437,
											"end": 6449,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6449,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6449,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6089,
											"end": 6455,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "tag",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6603,
											"end": 6606,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 6688,
											"end": 6690,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6683,
											"end": 6686,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 6624,
											"end": 6691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6691,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6691,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 6789,
											"end": 6792,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 6700,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6818,
											"end": 6820,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6813,
											"end": 6816,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6809,
											"end": 6821,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6802,
											"end": 6821,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6802,
											"end": 6821,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6461,
											"end": 6827,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "tag",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6975,
											"end": 6978,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 7060,
											"end": 7062,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7055,
											"end": 7058,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 6996,
											"end": 7063,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6989,
											"end": 7063,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6989,
											"end": 7063,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 7161,
											"end": 7164,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "tag",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 7072,
											"end": 7165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7190,
											"end": 7192,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7185,
											"end": 7188,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7181,
											"end": 7193,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7174,
											"end": 7193,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7174,
											"end": 7193,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6833,
											"end": 7199,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "tag",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7350,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 7432,
											"end": 7434,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 7427,
											"end": 7430,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "tag",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 7368,
											"end": 7435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7361,
											"end": 7435,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7361,
											"end": 7435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 7533,
											"end": 7536,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "tag",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 7444,
											"end": 7537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7562,
											"end": 7564,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7557,
											"end": 7560,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7553,
											"end": 7565,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7546,
											"end": 7565,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7546,
											"end": 7565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7205,
											"end": 7571,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "tag",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7719,
											"end": 7722,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 7804,
											"end": 7806,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 7799,
											"end": 7802,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "tag",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 7740,
											"end": 7807,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7733,
											"end": 7807,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7733,
											"end": 7807,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 7905,
											"end": 7908,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "tag",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 7816,
											"end": 7909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7934,
											"end": 7936,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7929,
											"end": 7932,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7925,
											"end": 7937,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7937,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7937,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7577,
											"end": 7943,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "tag",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8091,
											"end": 8094,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 8176,
											"end": 8178,
											"name": "PUSH",
											"source": 8,
											"value": "1A"
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "tag",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 8112,
											"end": 8179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8105,
											"end": 8179,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8105,
											"end": 8179,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 8277,
											"end": 8280,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "tag",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 8188,
											"end": 8281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8308,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8301,
											"end": 8304,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8297,
											"end": 8309,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8290,
											"end": 8309,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8290,
											"end": 8309,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7949,
											"end": 8315,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "tag",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8463,
											"end": 8466,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8484,
											"end": 8551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 8548,
											"end": 8550,
											"name": "PUSH",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 8543,
											"end": 8546,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8484,
											"end": 8551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 8484,
											"end": 8551,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8484,
											"end": 8551,
											"name": "tag",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 8484,
											"end": 8551,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8477,
											"end": 8551,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8477,
											"end": 8551,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8560,
											"end": 8653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 8649,
											"end": 8652,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8560,
											"end": 8653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 8560,
											"end": 8653,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8560,
											"end": 8653,
											"name": "tag",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 8560,
											"end": 8653,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8678,
											"end": 8680,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8673,
											"end": 8676,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8669,
											"end": 8681,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8662,
											"end": 8681,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8662,
											"end": 8681,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8321,
											"end": 8687,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8693,
											"end": 9059,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 8693,
											"end": 9059,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8835,
											"end": 8838,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8856,
											"end": 8923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 8920,
											"end": 8922,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 8915,
											"end": 8918,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8856,
											"end": 8923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 8856,
											"end": 8923,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8856,
											"end": 8923,
											"name": "tag",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 8856,
											"end": 8923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8849,
											"end": 8923,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8849,
											"end": 8923,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8932,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 9021,
											"end": 9024,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8932,
											"end": 9025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 8932,
											"end": 9025,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8932,
											"end": 9025,
											"name": "tag",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 8932,
											"end": 9025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9050,
											"end": 9052,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9045,
											"end": 9048,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9041,
											"end": 9053,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9034,
											"end": 9053,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9034,
											"end": 9053,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8693,
											"end": 9059,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8693,
											"end": 9059,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8693,
											"end": 9059,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8693,
											"end": 9059,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9065,
											"end": 9431,
											"name": "tag",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 9065,
											"end": 9431,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9207,
											"end": 9210,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9228,
											"end": 9295,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 9292,
											"end": 9294,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 9287,
											"end": 9290,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9228,
											"end": 9295,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 9228,
											"end": 9295,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9228,
											"end": 9295,
											"name": "tag",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 9228,
											"end": 9295,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9221,
											"end": 9295,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9221,
											"end": 9295,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9304,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 9393,
											"end": 9396,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9304,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 9304,
											"end": 9397,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9304,
											"end": 9397,
											"name": "tag",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 9304,
											"end": 9397,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9422,
											"end": 9424,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9417,
											"end": 9420,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9413,
											"end": 9425,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9406,
											"end": 9425,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9406,
											"end": 9425,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9065,
											"end": 9431,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9065,
											"end": 9431,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9065,
											"end": 9431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9065,
											"end": 9431,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9437,
											"end": 9803,
											"name": "tag",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 9437,
											"end": 9803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9579,
											"end": 9582,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9600,
											"end": 9667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 9664,
											"end": 9666,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 9659,
											"end": 9662,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9600,
											"end": 9667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 9600,
											"end": 9667,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9600,
											"end": 9667,
											"name": "tag",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 9600,
											"end": 9667,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9593,
											"end": 9667,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9593,
											"end": 9667,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9676,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 9765,
											"end": 9768,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9676,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 9676,
											"end": 9769,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9676,
											"end": 9769,
											"name": "tag",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 9676,
											"end": 9769,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9794,
											"end": 9796,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9789,
											"end": 9792,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9785,
											"end": 9797,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9778,
											"end": 9797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9778,
											"end": 9797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9437,
											"end": 9803,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9437,
											"end": 9803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9437,
											"end": 9803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9437,
											"end": 9803,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9809,
											"end": 9927,
											"name": "tag",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 9809,
											"end": 9927,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9896,
											"end": 9920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 9914,
											"end": 9919,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9896,
											"end": 9920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 9896,
											"end": 9920,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9896,
											"end": 9920,
											"name": "tag",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 9896,
											"end": 9920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9891,
											"end": 9894,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9884,
											"end": 9921,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9809,
											"end": 9927,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9809,
											"end": 9927,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9809,
											"end": 9927,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9933,
											"end": 10204,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 9933,
											"end": 10204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10063,
											"end": 10066,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10085,
											"end": 10178,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 10174,
											"end": 10177,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10165,
											"end": 10171,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10085,
											"end": 10178,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 10085,
											"end": 10178,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10085,
											"end": 10178,
											"name": "tag",
											"source": 8,
											"value": "522"
										},
										{
											"begin": 10085,
											"end": 10178,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10078,
											"end": 10178,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10078,
											"end": 10178,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10195,
											"end": 10198,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10188,
											"end": 10198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10188,
											"end": 10198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9933,
											"end": 10204,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9933,
											"end": 10204,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9933,
											"end": 10204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9933,
											"end": 10204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9933,
											"end": 10204,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10210,
											"end": 10432,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 10210,
											"end": 10432,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10303,
											"end": 10307,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10341,
											"end": 10343,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10330,
											"end": 10339,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10326,
											"end": 10344,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10318,
											"end": 10344,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10318,
											"end": 10344,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10354,
											"end": 10425,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 10422,
											"end": 10423,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10411,
											"end": 10420,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10407,
											"end": 10424,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10398,
											"end": 10404,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10354,
											"end": 10425,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 10354,
											"end": 10425,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10354,
											"end": 10425,
											"name": "tag",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 10354,
											"end": 10425,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10210,
											"end": 10432,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10210,
											"end": 10432,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10210,
											"end": 10432,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10210,
											"end": 10432,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10210,
											"end": 10432,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10438,
											"end": 10880,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 10438,
											"end": 10880,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10587,
											"end": 10591,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10625,
											"end": 10627,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 10614,
											"end": 10623,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10610,
											"end": 10628,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10602,
											"end": 10628,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10602,
											"end": 10628,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10638,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 10706,
											"end": 10707,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10695,
											"end": 10704,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10691,
											"end": 10708,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10682,
											"end": 10688,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10638,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 10638,
											"end": 10709,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10638,
											"end": 10709,
											"name": "tag",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 10638,
											"end": 10709,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10719,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 10787,
											"end": 10789,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10776,
											"end": 10785,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10772,
											"end": 10790,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10763,
											"end": 10769,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10719,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 10719,
											"end": 10791,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10719,
											"end": 10791,
											"name": "tag",
											"source": 8,
											"value": "527"
										},
										{
											"begin": 10719,
											"end": 10791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10801,
											"end": 10873,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 10869,
											"end": 10871,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10858,
											"end": 10867,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10854,
											"end": 10872,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10845,
											"end": 10851,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10801,
											"end": 10873,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 10801,
											"end": 10873,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10801,
											"end": 10873,
											"name": "tag",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 10801,
											"end": 10873,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10438,
											"end": 10880,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 10438,
											"end": 10880,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10438,
											"end": 10880,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10438,
											"end": 10880,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10438,
											"end": 10880,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10438,
											"end": 10880,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10438,
											"end": 10880,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10886,
											"end": 11218,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 10886,
											"end": 11218,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11007,
											"end": 11011,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11045,
											"end": 11047,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11034,
											"end": 11043,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11030,
											"end": 11048,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11022,
											"end": 11048,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11022,
											"end": 11048,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11058,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 11126,
											"end": 11127,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11115,
											"end": 11124,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11111,
											"end": 11128,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11102,
											"end": 11108,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11058,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 11058,
											"end": 11129,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11058,
											"end": 11129,
											"name": "tag",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 11058,
											"end": 11129,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 11207,
											"end": 11209,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11196,
											"end": 11205,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11192,
											"end": 11210,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11183,
											"end": 11189,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11139,
											"end": 11211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 11139,
											"end": 11211,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11139,
											"end": 11211,
											"name": "tag",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 11139,
											"end": 11211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10886,
											"end": 11218,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10886,
											"end": 11218,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10886,
											"end": 11218,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10886,
											"end": 11218,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10886,
											"end": 11218,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10886,
											"end": 11218,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11224,
											"end": 11474,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 11224,
											"end": 11474,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11335,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11369,
											"end": 11371,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11358,
											"end": 11367,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11354,
											"end": 11372,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11346,
											"end": 11372,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11346,
											"end": 11372,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11382,
											"end": 11467,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 11464,
											"end": 11465,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11453,
											"end": 11462,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11449,
											"end": 11466,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11440,
											"end": 11446,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11382,
											"end": 11467,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 11382,
											"end": 11467,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11382,
											"end": 11467,
											"name": "tag",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 11382,
											"end": 11467,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11224,
											"end": 11474,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11224,
											"end": 11474,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11224,
											"end": 11474,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11224,
											"end": 11474,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11224,
											"end": 11474,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11480,
											"end": 11793,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 11480,
											"end": 11793,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11593,
											"end": 11597,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11631,
											"end": 11633,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11620,
											"end": 11629,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11616,
											"end": 11634,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11608,
											"end": 11634,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11608,
											"end": 11634,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11680,
											"end": 11689,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11674,
											"end": 11678,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11666,
											"end": 11667,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11655,
											"end": 11664,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11651,
											"end": 11668,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11644,
											"end": 11691,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11708,
											"end": 11786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 11781,
											"end": 11785,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11772,
											"end": 11778,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11708,
											"end": 11786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 11708,
											"end": 11786,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11708,
											"end": 11786,
											"name": "tag",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 11708,
											"end": 11786,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11700,
											"end": 11786,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11700,
											"end": 11786,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11480,
											"end": 11793,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11480,
											"end": 11793,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11480,
											"end": 11793,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11480,
											"end": 11793,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11480,
											"end": 11793,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11799,
											"end": 12218,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 11799,
											"end": 12218,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11965,
											"end": 11969,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12003,
											"end": 12005,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11992,
											"end": 12001,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11988,
											"end": 12006,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11980,
											"end": 12006,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11980,
											"end": 12006,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12052,
											"end": 12061,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12050,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12042,
											"end": 12062,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12038,
											"end": 12039,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12027,
											"end": 12036,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12023,
											"end": 12040,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12016,
											"end": 12063,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12080,
											"end": 12211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 12206,
											"end": 12210,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12080,
											"end": 12211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 12080,
											"end": 12211,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12080,
											"end": 12211,
											"name": "tag",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 12080,
											"end": 12211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12072,
											"end": 12211,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12072,
											"end": 12211,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11799,
											"end": 12218,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11799,
											"end": 12218,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11799,
											"end": 12218,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11799,
											"end": 12218,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12224,
											"end": 12643,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 12224,
											"end": 12643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12390,
											"end": 12394,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12428,
											"end": 12430,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12417,
											"end": 12426,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12413,
											"end": 12431,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12405,
											"end": 12431,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12405,
											"end": 12431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12477,
											"end": 12486,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12471,
											"end": 12475,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12467,
											"end": 12487,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12463,
											"end": 12464,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12452,
											"end": 12461,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12448,
											"end": 12465,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12441,
											"end": 12488,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12505,
											"end": 12636,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 12631,
											"end": 12635,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12505,
											"end": 12636,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 12505,
											"end": 12636,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12505,
											"end": 12636,
											"name": "tag",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 12505,
											"end": 12636,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12497,
											"end": 12636,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12497,
											"end": 12636,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12224,
											"end": 12643,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12224,
											"end": 12643,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12224,
											"end": 12643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12224,
											"end": 12643,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12649,
											"end": 13068,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 12649,
											"end": 13068,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12815,
											"end": 12819,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12853,
											"end": 12855,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12842,
											"end": 12851,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12838,
											"end": 12856,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12830,
											"end": 12856,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12830,
											"end": 12856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12902,
											"end": 12911,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12896,
											"end": 12900,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12892,
											"end": 12912,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12888,
											"end": 12889,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12877,
											"end": 12886,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12873,
											"end": 12890,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12866,
											"end": 12913,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12930,
											"end": 13061,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 13056,
											"end": 13060,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12930,
											"end": 13061,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 12930,
											"end": 13061,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12930,
											"end": 13061,
											"name": "tag",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 12930,
											"end": 13061,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12922,
											"end": 13061,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12922,
											"end": 13061,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12649,
											"end": 13068,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12649,
											"end": 13068,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12649,
											"end": 13068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12649,
											"end": 13068,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13074,
											"end": 13493,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 13074,
											"end": 13493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13240,
											"end": 13244,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13278,
											"end": 13280,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13267,
											"end": 13276,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13263,
											"end": 13281,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13255,
											"end": 13281,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13255,
											"end": 13281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13327,
											"end": 13336,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13321,
											"end": 13325,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13317,
											"end": 13337,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13313,
											"end": 13314,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13302,
											"end": 13311,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13298,
											"end": 13315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13291,
											"end": 13338,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13355,
											"end": 13486,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 13481,
											"end": 13485,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13355,
											"end": 13486,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 13355,
											"end": 13486,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13355,
											"end": 13486,
											"name": "tag",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 13355,
											"end": 13486,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13347,
											"end": 13486,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13347,
											"end": 13486,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13074,
											"end": 13493,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13074,
											"end": 13493,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13074,
											"end": 13493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13074,
											"end": 13493,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13499,
											"end": 13918,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 13499,
											"end": 13918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13665,
											"end": 13669,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13703,
											"end": 13705,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13692,
											"end": 13701,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13688,
											"end": 13706,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13680,
											"end": 13706,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13680,
											"end": 13706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13752,
											"end": 13761,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13746,
											"end": 13750,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13742,
											"end": 13762,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13738,
											"end": 13739,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13727,
											"end": 13736,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13723,
											"end": 13740,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13716,
											"end": 13763,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13780,
											"end": 13911,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 13906,
											"end": 13910,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13780,
											"end": 13911,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 13780,
											"end": 13911,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13780,
											"end": 13911,
											"name": "tag",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 13780,
											"end": 13911,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13772,
											"end": 13911,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13772,
											"end": 13911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13499,
											"end": 13918,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13499,
											"end": 13918,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13499,
											"end": 13918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13499,
											"end": 13918,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13924,
											"end": 14343,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 13924,
											"end": 14343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14090,
											"end": 14094,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14128,
											"end": 14130,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14117,
											"end": 14126,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14113,
											"end": 14131,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14105,
											"end": 14131,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14105,
											"end": 14131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14177,
											"end": 14186,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14171,
											"end": 14175,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14167,
											"end": 14187,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14163,
											"end": 14164,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14152,
											"end": 14161,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14148,
											"end": 14165,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14141,
											"end": 14188,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14205,
											"end": 14336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 14331,
											"end": 14335,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14205,
											"end": 14336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 14205,
											"end": 14336,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14205,
											"end": 14336,
											"name": "tag",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 14205,
											"end": 14336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14197,
											"end": 14336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14197,
											"end": 14336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13924,
											"end": 14343,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13924,
											"end": 14343,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13924,
											"end": 14343,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13924,
											"end": 14343,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14349,
											"end": 14768,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 14349,
											"end": 14768,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14515,
											"end": 14519,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14553,
											"end": 14555,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14542,
											"end": 14551,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14538,
											"end": 14556,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14530,
											"end": 14556,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14530,
											"end": 14556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14602,
											"end": 14611,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14596,
											"end": 14600,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14592,
											"end": 14612,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14588,
											"end": 14589,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14577,
											"end": 14586,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14573,
											"end": 14590,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14566,
											"end": 14613,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14630,
											"end": 14761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 14756,
											"end": 14760,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14630,
											"end": 14761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 14630,
											"end": 14761,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14630,
											"end": 14761,
											"name": "tag",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 14630,
											"end": 14761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14622,
											"end": 14761,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14622,
											"end": 14761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14349,
											"end": 14768,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14349,
											"end": 14768,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14349,
											"end": 14768,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14349,
											"end": 14768,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14774,
											"end": 15193,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 14774,
											"end": 15193,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14940,
											"end": 14944,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14978,
											"end": 14980,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14967,
											"end": 14976,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14963,
											"end": 14981,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14955,
											"end": 14981,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14955,
											"end": 14981,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15027,
											"end": 15036,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15021,
											"end": 15025,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15017,
											"end": 15037,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15013,
											"end": 15014,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15002,
											"end": 15011,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14998,
											"end": 15015,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14991,
											"end": 15038,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15055,
											"end": 15186,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 15181,
											"end": 15185,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15055,
											"end": 15186,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 15055,
											"end": 15186,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15055,
											"end": 15186,
											"name": "tag",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 15055,
											"end": 15186,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15047,
											"end": 15186,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15047,
											"end": 15186,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14774,
											"end": 15193,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14774,
											"end": 15193,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14774,
											"end": 15193,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14774,
											"end": 15193,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15199,
											"end": 15618,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 15199,
											"end": 15618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15365,
											"end": 15369,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15403,
											"end": 15405,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15392,
											"end": 15401,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15388,
											"end": 15406,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15380,
											"end": 15406,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15380,
											"end": 15406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15452,
											"end": 15461,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15446,
											"end": 15450,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15442,
											"end": 15462,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15438,
											"end": 15439,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15427,
											"end": 15436,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15423,
											"end": 15440,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15416,
											"end": 15463,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15480,
											"end": 15611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 15606,
											"end": 15610,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15480,
											"end": 15611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 15480,
											"end": 15611,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15480,
											"end": 15611,
											"name": "tag",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 15480,
											"end": 15611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15472,
											"end": 15611,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15472,
											"end": 15611,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15199,
											"end": 15618,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15199,
											"end": 15618,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15199,
											"end": 15618,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15199,
											"end": 15618,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15624,
											"end": 16043,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 15624,
											"end": 16043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15790,
											"end": 15794,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15828,
											"end": 15830,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15817,
											"end": 15826,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15813,
											"end": 15831,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15805,
											"end": 15831,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15805,
											"end": 15831,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15877,
											"end": 15886,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15871,
											"end": 15875,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15867,
											"end": 15887,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15863,
											"end": 15864,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15852,
											"end": 15861,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15848,
											"end": 15865,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15841,
											"end": 15888,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15905,
											"end": 16036,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 16031,
											"end": 16035,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15905,
											"end": 16036,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 15905,
											"end": 16036,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15905,
											"end": 16036,
											"name": "tag",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 15905,
											"end": 16036,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15897,
											"end": 16036,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15897,
											"end": 16036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15624,
											"end": 16043,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15624,
											"end": 16043,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15624,
											"end": 16043,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15624,
											"end": 16043,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16049,
											"end": 16468,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 16049,
											"end": 16468,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16215,
											"end": 16219,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16253,
											"end": 16255,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16242,
											"end": 16251,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16238,
											"end": 16256,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16230,
											"end": 16256,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16230,
											"end": 16256,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16302,
											"end": 16311,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16296,
											"end": 16300,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16292,
											"end": 16312,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16288,
											"end": 16289,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16277,
											"end": 16286,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16273,
											"end": 16290,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16266,
											"end": 16313,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16330,
											"end": 16461,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 16456,
											"end": 16460,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16330,
											"end": 16461,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 16330,
											"end": 16461,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16330,
											"end": 16461,
											"name": "tag",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 16330,
											"end": 16461,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16322,
											"end": 16461,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16322,
											"end": 16461,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16049,
											"end": 16468,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16049,
											"end": 16468,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16049,
											"end": 16468,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16049,
											"end": 16468,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16474,
											"end": 16893,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 16474,
											"end": 16893,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16640,
											"end": 16644,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16678,
											"end": 16680,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16667,
											"end": 16676,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16663,
											"end": 16681,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16655,
											"end": 16681,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16655,
											"end": 16681,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16727,
											"end": 16736,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16721,
											"end": 16725,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16717,
											"end": 16737,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16713,
											"end": 16714,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16702,
											"end": 16711,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16698,
											"end": 16715,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16691,
											"end": 16738,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16755,
											"end": 16886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "559"
										},
										{
											"begin": 16881,
											"end": 16885,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16755,
											"end": 16886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 16755,
											"end": 16886,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16755,
											"end": 16886,
											"name": "tag",
											"source": 8,
											"value": "559"
										},
										{
											"begin": 16755,
											"end": 16886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16747,
											"end": 16886,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16747,
											"end": 16886,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16474,
											"end": 16893,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16474,
											"end": 16893,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16474,
											"end": 16893,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16474,
											"end": 16893,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16899,
											"end": 17318,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 16899,
											"end": 17318,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17065,
											"end": 17069,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17103,
											"end": 17105,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17092,
											"end": 17101,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17088,
											"end": 17106,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17080,
											"end": 17106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17080,
											"end": 17106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17152,
											"end": 17161,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17146,
											"end": 17150,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17142,
											"end": 17162,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17138,
											"end": 17139,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17127,
											"end": 17136,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17123,
											"end": 17140,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17116,
											"end": 17163,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17180,
											"end": 17311,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "561"
										},
										{
											"begin": 17306,
											"end": 17310,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17180,
											"end": 17311,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 17180,
											"end": 17311,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17180,
											"end": 17311,
											"name": "tag",
											"source": 8,
											"value": "561"
										},
										{
											"begin": 17180,
											"end": 17311,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17172,
											"end": 17311,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17172,
											"end": 17311,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16899,
											"end": 17318,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16899,
											"end": 17318,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16899,
											"end": 17318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16899,
											"end": 17318,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17324,
											"end": 17743,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 17324,
											"end": 17743,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17490,
											"end": 17494,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17528,
											"end": 17530,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17517,
											"end": 17526,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17513,
											"end": 17531,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17505,
											"end": 17531,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17505,
											"end": 17531,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17577,
											"end": 17586,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17571,
											"end": 17575,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17567,
											"end": 17587,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17563,
											"end": 17564,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17552,
											"end": 17561,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17548,
											"end": 17565,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17605,
											"end": 17736,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "563"
										},
										{
											"begin": 17731,
											"end": 17735,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17605,
											"end": 17736,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 17605,
											"end": 17736,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 17605,
											"end": 17736,
											"name": "tag",
											"source": 8,
											"value": "563"
										},
										{
											"begin": 17605,
											"end": 17736,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17597,
											"end": 17736,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17597,
											"end": 17736,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17324,
											"end": 17743,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17324,
											"end": 17743,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17324,
											"end": 17743,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17324,
											"end": 17743,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17749,
											"end": 18168,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 17749,
											"end": 18168,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17915,
											"end": 17919,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17953,
											"end": 17955,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17942,
											"end": 17951,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17938,
											"end": 17956,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17930,
											"end": 17956,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17930,
											"end": 17956,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18002,
											"end": 18011,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17996,
											"end": 18000,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17992,
											"end": 18012,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17988,
											"end": 17989,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17977,
											"end": 17986,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17973,
											"end": 17990,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17966,
											"end": 18013,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18030,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "565"
										},
										{
											"begin": 18156,
											"end": 18160,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18030,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 18030,
											"end": 18161,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18030,
											"end": 18161,
											"name": "tag",
											"source": 8,
											"value": "565"
										},
										{
											"begin": 18030,
											"end": 18161,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18022,
											"end": 18161,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18022,
											"end": 18161,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17749,
											"end": 18168,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17749,
											"end": 18168,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17749,
											"end": 18168,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17749,
											"end": 18168,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18174,
											"end": 18593,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 18174,
											"end": 18593,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18340,
											"end": 18344,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18378,
											"end": 18380,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18367,
											"end": 18376,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18363,
											"end": 18381,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18355,
											"end": 18381,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18355,
											"end": 18381,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18427,
											"end": 18436,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18421,
											"end": 18425,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18417,
											"end": 18437,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18413,
											"end": 18414,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18402,
											"end": 18411,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18398,
											"end": 18415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18391,
											"end": 18438,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18455,
											"end": 18586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 18581,
											"end": 18585,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18455,
											"end": 18586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 18455,
											"end": 18586,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18455,
											"end": 18586,
											"name": "tag",
											"source": 8,
											"value": "567"
										},
										{
											"begin": 18455,
											"end": 18586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18447,
											"end": 18586,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18447,
											"end": 18586,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18174,
											"end": 18593,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18174,
											"end": 18593,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18174,
											"end": 18593,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18174,
											"end": 18593,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18599,
											"end": 19018,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 18599,
											"end": 19018,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18765,
											"end": 18769,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18803,
											"end": 18805,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18792,
											"end": 18801,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18788,
											"end": 18806,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18780,
											"end": 18806,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18780,
											"end": 18806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18852,
											"end": 18861,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18846,
											"end": 18850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18842,
											"end": 18862,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18838,
											"end": 18839,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18827,
											"end": 18836,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18823,
											"end": 18840,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18816,
											"end": 18863,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18880,
											"end": 19011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 19006,
											"end": 19010,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18880,
											"end": 19011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 18880,
											"end": 19011,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 18880,
											"end": 19011,
											"name": "tag",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 18880,
											"end": 19011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18872,
											"end": 19011,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18872,
											"end": 19011,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18599,
											"end": 19018,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18599,
											"end": 19018,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18599,
											"end": 19018,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18599,
											"end": 19018,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19024,
											"end": 19246,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 19024,
											"end": 19246,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19117,
											"end": 19121,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19155,
											"end": 19157,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19144,
											"end": 19153,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19140,
											"end": 19158,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19132,
											"end": 19158,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19132,
											"end": 19158,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19168,
											"end": 19239,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 19236,
											"end": 19237,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19225,
											"end": 19234,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19221,
											"end": 19238,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19212,
											"end": 19218,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 19168,
											"end": 19239,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 19168,
											"end": 19239,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19168,
											"end": 19239,
											"name": "tag",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 19168,
											"end": 19239,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19024,
											"end": 19246,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19024,
											"end": 19246,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19024,
											"end": 19246,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19024,
											"end": 19246,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19024,
											"end": 19246,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19333,
											"end": 19431,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 19333,
											"end": 19431,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19384,
											"end": 19390,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19418,
											"end": 19423,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19412,
											"end": 19424,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 19402,
											"end": 19424,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19402,
											"end": 19424,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19333,
											"end": 19431,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19333,
											"end": 19431,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19333,
											"end": 19431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19333,
											"end": 19431,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19437,
											"end": 19536,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 19437,
											"end": 19536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19489,
											"end": 19495,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19523,
											"end": 19528,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19517,
											"end": 19529,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 19507,
											"end": 19529,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19507,
											"end": 19529,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19437,
											"end": 19536,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19437,
											"end": 19536,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19437,
											"end": 19536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19437,
											"end": 19536,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19542,
											"end": 19689,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 19542,
											"end": 19689,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19643,
											"end": 19654,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19680,
											"end": 19683,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19665,
											"end": 19683,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19665,
											"end": 19683,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19542,
											"end": 19689,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19542,
											"end": 19689,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19542,
											"end": 19689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19542,
											"end": 19689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19542,
											"end": 19689,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19695,
											"end": 19864,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 19695,
											"end": 19864,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19779,
											"end": 19790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19813,
											"end": 19819,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19808,
											"end": 19811,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19801,
											"end": 19820,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19853,
											"end": 19857,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19848,
											"end": 19851,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19844,
											"end": 19858,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19829,
											"end": 19858,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19829,
											"end": 19858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19695,
											"end": 19864,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19695,
											"end": 19864,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19695,
											"end": 19864,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19695,
											"end": 19864,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19695,
											"end": 19864,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19870,
											"end": 20175,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 19870,
											"end": 20175,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19910,
											"end": 19913,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19929,
											"end": 19949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "579"
										},
										{
											"begin": 19947,
											"end": 19948,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19929,
											"end": 19949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 19929,
											"end": 19949,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19929,
											"end": 19949,
											"name": "tag",
											"source": 8,
											"value": "579"
										},
										{
											"begin": 19929,
											"end": 19949,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19924,
											"end": 19949,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19924,
											"end": 19949,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19963,
											"end": 19983,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "580"
										},
										{
											"begin": 19981,
											"end": 19982,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19963,
											"end": 19983,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 19963,
											"end": 19983,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 19963,
											"end": 19983,
											"name": "tag",
											"source": 8,
											"value": "580"
										},
										{
											"begin": 19963,
											"end": 19983,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19958,
											"end": 19983,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19958,
											"end": 19983,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20117,
											"end": 20118,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20049,
											"end": 20115,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20045,
											"end": 20119,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 20042,
											"end": 20043,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20039,
											"end": 20120,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 20036,
											"end": 20143,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20036,
											"end": 20143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "581"
										},
										{
											"begin": 20036,
											"end": 20143,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20123,
											"end": 20141,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "582"
										},
										{
											"begin": 20123,
											"end": 20141,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 20123,
											"end": 20141,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20123,
											"end": 20141,
											"name": "tag",
											"source": 8,
											"value": "582"
										},
										{
											"begin": 20123,
											"end": 20141,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20036,
											"end": 20143,
											"name": "tag",
											"source": 8,
											"value": "581"
										},
										{
											"begin": 20036,
											"end": 20143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20167,
											"end": 20168,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20164,
											"end": 20165,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20160,
											"end": 20169,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20153,
											"end": 20169,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20153,
											"end": 20169,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19870,
											"end": 20175,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 19870,
											"end": 20175,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19870,
											"end": 20175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19870,
											"end": 20175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19870,
											"end": 20175,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20181,
											"end": 20366,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 20181,
											"end": 20366,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20221,
											"end": 20222,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20238,
											"end": 20258,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "585"
										},
										{
											"begin": 20256,
											"end": 20257,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20238,
											"end": 20258,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 20238,
											"end": 20258,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20238,
											"end": 20258,
											"name": "tag",
											"source": 8,
											"value": "585"
										},
										{
											"begin": 20238,
											"end": 20258,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20233,
											"end": 20258,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20233,
											"end": 20258,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20272,
											"end": 20292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "586"
										},
										{
											"begin": 20290,
											"end": 20291,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20272,
											"end": 20292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 20272,
											"end": 20292,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20272,
											"end": 20292,
											"name": "tag",
											"source": 8,
											"value": "586"
										},
										{
											"begin": 20272,
											"end": 20292,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20267,
											"end": 20292,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20267,
											"end": 20292,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20311,
											"end": 20312,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20301,
											"end": 20336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "587"
										},
										{
											"begin": 20301,
											"end": 20336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20316,
											"end": 20334,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "588"
										},
										{
											"begin": 20316,
											"end": 20334,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "589"
										},
										{
											"begin": 20316,
											"end": 20334,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20316,
											"end": 20334,
											"name": "tag",
											"source": 8,
											"value": "588"
										},
										{
											"begin": 20316,
											"end": 20334,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20301,
											"end": 20336,
											"name": "tag",
											"source": 8,
											"value": "587"
										},
										{
											"begin": 20301,
											"end": 20336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20358,
											"end": 20359,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20355,
											"end": 20356,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20351,
											"end": 20360,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 20346,
											"end": 20360,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20346,
											"end": 20360,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20181,
											"end": 20366,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20181,
											"end": 20366,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20181,
											"end": 20366,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20181,
											"end": 20366,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20181,
											"end": 20366,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20372,
											"end": 20720,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 20372,
											"end": 20720,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20412,
											"end": 20419,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20435,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "591"
										},
										{
											"begin": 20453,
											"end": 20454,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20435,
											"end": 20455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 20435,
											"end": 20455,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20435,
											"end": 20455,
											"name": "tag",
											"source": 8,
											"value": "591"
										},
										{
											"begin": 20435,
											"end": 20455,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20430,
											"end": 20455,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20430,
											"end": 20455,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20469,
											"end": 20489,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 20487,
											"end": 20488,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20469,
											"end": 20489,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 20469,
											"end": 20489,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20469,
											"end": 20489,
											"name": "tag",
											"source": 8,
											"value": "592"
										},
										{
											"begin": 20469,
											"end": 20489,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20464,
											"end": 20489,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20464,
											"end": 20489,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20657,
											"end": 20658,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20589,
											"end": 20655,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20585,
											"end": 20659,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 20582,
											"end": 20583,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20579,
											"end": 20660,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 20574,
											"end": 20575,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20567,
											"end": 20576,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20560,
											"end": 20577,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20556,
											"end": 20661,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 20553,
											"end": 20684,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20553,
											"end": 20684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "593"
										},
										{
											"begin": 20553,
											"end": 20684,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20664,
											"end": 20682,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "594"
										},
										{
											"begin": 20664,
											"end": 20682,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 20664,
											"end": 20682,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20664,
											"end": 20682,
											"name": "tag",
											"source": 8,
											"value": "594"
										},
										{
											"begin": 20664,
											"end": 20682,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20553,
											"end": 20684,
											"name": "tag",
											"source": 8,
											"value": "593"
										},
										{
											"begin": 20553,
											"end": 20684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20712,
											"end": 20713,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20709,
											"end": 20710,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20705,
											"end": 20714,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 20694,
											"end": 20714,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20694,
											"end": 20714,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20372,
											"end": 20720,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20372,
											"end": 20720,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20372,
											"end": 20720,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20372,
											"end": 20720,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20372,
											"end": 20720,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20726,
											"end": 20917,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 20726,
											"end": 20917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20766,
											"end": 20770,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20786,
											"end": 20806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 20804,
											"end": 20805,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20786,
											"end": 20806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 20786,
											"end": 20806,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20786,
											"end": 20806,
											"name": "tag",
											"source": 8,
											"value": "596"
										},
										{
											"begin": 20786,
											"end": 20806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20781,
											"end": 20806,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20781,
											"end": 20806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20820,
											"end": 20840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "597"
										},
										{
											"begin": 20838,
											"end": 20839,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20820,
											"end": 20840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 20820,
											"end": 20840,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20820,
											"end": 20840,
											"name": "tag",
											"source": 8,
											"value": "597"
										},
										{
											"begin": 20820,
											"end": 20840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20815,
											"end": 20840,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20815,
											"end": 20840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20859,
											"end": 20860,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20856,
											"end": 20857,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20853,
											"end": 20861,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 20850,
											"end": 20884,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 20850,
											"end": 20884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "598"
										},
										{
											"begin": 20850,
											"end": 20884,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20864,
											"end": 20882,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "599"
										},
										{
											"begin": 20864,
											"end": 20882,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 20864,
											"end": 20882,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20864,
											"end": 20882,
											"name": "tag",
											"source": 8,
											"value": "599"
										},
										{
											"begin": 20864,
											"end": 20882,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20850,
											"end": 20884,
											"name": "tag",
											"source": 8,
											"value": "598"
										},
										{
											"begin": 20850,
											"end": 20884,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20909,
											"end": 20910,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20906,
											"end": 20907,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20902,
											"end": 20911,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 20894,
											"end": 20911,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20894,
											"end": 20911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20726,
											"end": 20917,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 20726,
											"end": 20917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20726,
											"end": 20917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20726,
											"end": 20917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20726,
											"end": 20917,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20923,
											"end": 21019,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 20923,
											"end": 21019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20960,
											"end": 20967,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20989,
											"end": 21013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "601"
										},
										{
											"begin": 21007,
											"end": 21012,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20989,
											"end": 21013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "602"
										},
										{
											"begin": 20989,
											"end": 21013,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20989,
											"end": 21013,
											"name": "tag",
											"source": 8,
											"value": "601"
										},
										{
											"begin": 20989,
											"end": 21013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20978,
											"end": 21013,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20978,
											"end": 21013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20923,
											"end": 21019,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20923,
											"end": 21019,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20923,
											"end": 21019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20923,
											"end": 21019,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21025,
											"end": 21115,
											"name": "tag",
											"source": 8,
											"value": "603"
										},
										{
											"begin": 21025,
											"end": 21115,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21059,
											"end": 21066,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21102,
											"end": 21107,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21095,
											"end": 21108,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21088,
											"end": 21109,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21077,
											"end": 21109,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21077,
											"end": 21109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21025,
											"end": 21115,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21025,
											"end": 21115,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21025,
											"end": 21115,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21025,
											"end": 21115,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21121,
											"end": 21247,
											"name": "tag",
											"source": 8,
											"value": "602"
										},
										{
											"begin": 21121,
											"end": 21247,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21158,
											"end": 21165,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21198,
											"end": 21240,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21191,
											"end": 21196,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21187,
											"end": 21241,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 21176,
											"end": 21241,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21176,
											"end": 21241,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21121,
											"end": 21247,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21121,
											"end": 21247,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21121,
											"end": 21247,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21121,
											"end": 21247,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21253,
											"end": 21330,
											"name": "tag",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 21253,
											"end": 21330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21290,
											"end": 21297,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21319,
											"end": 21324,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21308,
											"end": 21324,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21308,
											"end": 21324,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21253,
											"end": 21330,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21253,
											"end": 21330,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21253,
											"end": 21330,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21253,
											"end": 21330,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21336,
											"end": 21476,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 21336,
											"end": 21476,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21400,
											"end": 21409,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21433,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "608"
										},
										{
											"begin": 21464,
											"end": 21469,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21433,
											"end": 21470,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "609"
										},
										{
											"begin": 21433,
											"end": 21470,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21433,
											"end": 21470,
											"name": "tag",
											"source": 8,
											"value": "608"
										},
										{
											"begin": 21433,
											"end": 21470,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21420,
											"end": 21470,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21420,
											"end": 21470,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21336,
											"end": 21476,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21336,
											"end": 21476,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21336,
											"end": 21476,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21336,
											"end": 21476,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21482,
											"end": 21608,
											"name": "tag",
											"source": 8,
											"value": "609"
										},
										{
											"begin": 21482,
											"end": 21608,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21532,
											"end": 21541,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21565,
											"end": 21602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "611"
										},
										{
											"begin": 21596,
											"end": 21601,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21565,
											"end": 21602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "612"
										},
										{
											"begin": 21565,
											"end": 21602,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21565,
											"end": 21602,
											"name": "tag",
											"source": 8,
											"value": "611"
										},
										{
											"begin": 21565,
											"end": 21602,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21552,
											"end": 21602,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21552,
											"end": 21602,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21482,
											"end": 21608,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21482,
											"end": 21608,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21482,
											"end": 21608,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21482,
											"end": 21608,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21614,
											"end": 21727,
											"name": "tag",
											"source": 8,
											"value": "612"
										},
										{
											"begin": 21614,
											"end": 21727,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21664,
											"end": 21673,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21697,
											"end": 21721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "614"
										},
										{
											"begin": 21715,
											"end": 21720,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21697,
											"end": 21721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "602"
										},
										{
											"begin": 21697,
											"end": 21721,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 21697,
											"end": 21721,
											"name": "tag",
											"source": 8,
											"value": "614"
										},
										{
											"begin": 21697,
											"end": 21721,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21684,
											"end": 21721,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21684,
											"end": 21721,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21614,
											"end": 21727,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21614,
											"end": 21727,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21614,
											"end": 21727,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21614,
											"end": 21727,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 21733,
											"end": 22040,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 21733,
											"end": 22040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21801,
											"end": 21802,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21811,
											"end": 21924,
											"name": "tag",
											"source": 8,
											"value": "616"
										},
										{
											"begin": 21811,
											"end": 21924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21825,
											"end": 21831,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21822,
											"end": 21823,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21819,
											"end": 21832,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 21811,
											"end": 21924,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21811,
											"end": 21924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "618"
										},
										{
											"begin": 21811,
											"end": 21924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 21910,
											"end": 21911,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 21905,
											"end": 21908,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21901,
											"end": 21912,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21895,
											"end": 21913,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 21891,
											"end": 21892,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21886,
											"end": 21889,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 21882,
											"end": 21893,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21875,
											"end": 21914,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21847,
											"end": 21849,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21844,
											"end": 21845,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21840,
											"end": 21850,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21835,
											"end": 21850,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21835,
											"end": 21850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21811,
											"end": 21924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "616"
										},
										{
											"begin": 21811,
											"end": 21924,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21811,
											"end": 21924,
											"name": "tag",
											"source": 8,
											"value": "618"
										},
										{
											"begin": 21811,
											"end": 21924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21942,
											"end": 21948,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21939,
											"end": 21940,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21936,
											"end": 21949,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 21933,
											"end": 22034,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 21933,
											"end": 22034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "619"
										},
										{
											"begin": 21933,
											"end": 22034,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 22022,
											"end": 22023,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22013,
											"end": 22019,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 22008,
											"end": 22011,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 22004,
											"end": 22020,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21997,
											"end": 22024,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21933,
											"end": 22034,
											"name": "tag",
											"source": 8,
											"value": "619"
										},
										{
											"begin": 21933,
											"end": 22034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21782,
											"end": 22040,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21733,
											"end": 22040,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21733,
											"end": 22040,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21733,
											"end": 22040,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21733,
											"end": 22040,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22046,
											"end": 22222,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 22046,
											"end": 22222,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22078,
											"end": 22079,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22095,
											"end": 22115,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "621"
										},
										{
											"begin": 22113,
											"end": 22114,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22095,
											"end": 22115,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 22095,
											"end": 22115,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22095,
											"end": 22115,
											"name": "tag",
											"source": 8,
											"value": "621"
										},
										{
											"begin": 22095,
											"end": 22115,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22090,
											"end": 22115,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22090,
											"end": 22115,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22129,
											"end": 22149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "622"
										},
										{
											"begin": 22147,
											"end": 22148,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22129,
											"end": 22149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 22129,
											"end": 22149,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22129,
											"end": 22149,
											"name": "tag",
											"source": 8,
											"value": "622"
										},
										{
											"begin": 22129,
											"end": 22149,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22124,
											"end": 22149,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 22124,
											"end": 22149,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22168,
											"end": 22169,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22158,
											"end": 22193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "623"
										},
										{
											"begin": 22158,
											"end": 22193,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 22173,
											"end": 22191,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "624"
										},
										{
											"begin": 22173,
											"end": 22191,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "589"
										},
										{
											"begin": 22173,
											"end": 22191,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 22173,
											"end": 22191,
											"name": "tag",
											"source": 8,
											"value": "624"
										},
										{
											"begin": 22173,
											"end": 22191,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22158,
											"end": 22193,
											"name": "tag",
											"source": 8,
											"value": "623"
										},
										{
											"begin": 22158,
											"end": 22193,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22214,
											"end": 22215,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22211,
											"end": 22212,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22207,
											"end": 22216,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 22202,
											"end": 22216,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22202,
											"end": 22216,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22046,
											"end": 22222,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 22046,
											"end": 22222,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22046,
											"end": 22222,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22046,
											"end": 22222,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22046,
											"end": 22222,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22228,
											"end": 22408,
											"name": "tag",
											"source": 8,
											"value": "583"
										},
										{
											"begin": 22228,
											"end": 22408,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22276,
											"end": 22353,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22273,
											"end": 22274,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22266,
											"end": 22354,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22373,
											"end": 22377,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 22370,
											"end": 22371,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 22363,
											"end": 22378,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22397,
											"end": 22401,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 22394,
											"end": 22395,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22387,
											"end": 22402,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 22414,
											"end": 22594,
											"name": "tag",
											"source": 8,
											"value": "589"
										},
										{
											"begin": 22414,
											"end": 22594,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22462,
											"end": 22539,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22459,
											"end": 22460,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22452,
											"end": 22540,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22559,
											"end": 22563,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 22556,
											"end": 22557,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 22549,
											"end": 22564,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22583,
											"end": 22587,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 22580,
											"end": 22581,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22573,
											"end": 22588,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 22723,
											"end": 22840,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 22723,
											"end": 22840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22832,
											"end": 22833,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22829,
											"end": 22830,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22822,
											"end": 22834,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 22846,
											"end": 22948,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 22846,
											"end": 22948,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22887,
											"end": 22893,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22938,
											"end": 22940,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 22934,
											"end": 22941,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 22929,
											"end": 22931,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 22922,
											"end": 22927,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22918,
											"end": 22932,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 22914,
											"end": 22942,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 22904,
											"end": 22942,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22904,
											"end": 22942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22846,
											"end": 22948,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22846,
											"end": 22948,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22846,
											"end": 22948,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22846,
											"end": 22948,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 22954,
											"end": 23116,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 22954,
											"end": 23116,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23094,
											"end": 23108,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E740000000000000000000000000000000000000000"
										},
										{
											"begin": 23090,
											"end": 23091,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23082,
											"end": 23088,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23078,
											"end": 23092,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23071,
											"end": 23109,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 22954,
											"end": 23116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22954,
											"end": 23116,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23122,
											"end": 23288,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 23122,
											"end": 23288,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23262,
											"end": 23280,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F7468696E6720746F20636C61696D00000000000000000000000000000000"
										},
										{
											"begin": 23258,
											"end": 23259,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23250,
											"end": 23256,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23246,
											"end": 23260,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23239,
											"end": 23281,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23122,
											"end": 23288,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23122,
											"end": 23288,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23294,
											"end": 23465,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 23294,
											"end": 23465,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23434,
											"end": 23457,
											"name": "PUSH",
											"source": 8,
											"value": "4572726F723A20696E76616C6964207374616B65720000000000000000000000"
										},
										{
											"begin": 23430,
											"end": 23431,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23422,
											"end": 23428,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23418,
											"end": 23432,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23411,
											"end": 23458,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23294,
											"end": 23465,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23294,
											"end": 23465,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23471,
											"end": 23700,
											"name": "tag",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 23471,
											"end": 23700,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23611,
											"end": 23645,
											"name": "PUSH",
											"source": 8,
											"value": "5361666542455032303A204245503230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 23607,
											"end": 23608,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23599,
											"end": 23605,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23595,
											"end": 23609,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23588,
											"end": 23646,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23680,
											"end": 23692,
											"name": "PUSH",
											"source": 8,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 23675,
											"end": 23677,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23667,
											"end": 23673,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23663,
											"end": 23678,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23656,
											"end": 23693,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23471,
											"end": 23700,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23471,
											"end": 23700,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23706,
											"end": 23931,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 23706,
											"end": 23931,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23846,
											"end": 23880,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 23842,
											"end": 23843,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23834,
											"end": 23840,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23830,
											"end": 23844,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23823,
											"end": 23881,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23915,
											"end": 23923,
											"name": "PUSH",
											"source": 8,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23910,
											"end": 23912,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23902,
											"end": 23908,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23898,
											"end": 23913,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23891,
											"end": 23924,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23706,
											"end": 23931,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23706,
											"end": 23931,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 23937,
											"end": 24101,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 23937,
											"end": 24101,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24077,
											"end": 24093,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420616D6F756E74000000000000000000000000000000000000"
										},
										{
											"begin": 24073,
											"end": 24074,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24065,
											"end": 24071,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24061,
											"end": 24075,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24054,
											"end": 24094,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 23937,
											"end": 24101,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23937,
											"end": 24101,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24107,
											"end": 24272,
											"name": "tag",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 24107,
											"end": 24272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24247,
											"end": 24264,
											"name": "PUSH",
											"source": 8,
											"value": "416C726561647920737461727465640000000000000000000000000000000000"
										},
										{
											"begin": 24243,
											"end": 24244,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24235,
											"end": 24241,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24231,
											"end": 24245,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24224,
											"end": 24265,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24107,
											"end": 24272,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24107,
											"end": 24272,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24278,
											"end": 24503,
											"name": "tag",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 24278,
											"end": 24503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24418,
											"end": 24452,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 24414,
											"end": 24415,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24406,
											"end": 24412,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24402,
											"end": 24416,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24395,
											"end": 24453,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24487,
											"end": 24495,
											"name": "PUSH",
											"source": 8,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24482,
											"end": 24484,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 24474,
											"end": 24480,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24470,
											"end": 24485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24463,
											"end": 24496,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24278,
											"end": 24503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24278,
											"end": 24503,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24509,
											"end": 24690,
											"name": "tag",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 24509,
											"end": 24690,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24649,
											"end": 24682,
											"name": "PUSH",
											"source": 8,
											"value": "416D6F756E742073686F756C642062652067726561746572207468616E203000"
										},
										{
											"begin": 24645,
											"end": 24646,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24637,
											"end": 24643,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24633,
											"end": 24647,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24626,
											"end": 24683,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24509,
											"end": 24690,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24509,
											"end": 24690,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24696,
											"end": 24878,
											"name": "tag",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 24696,
											"end": 24878,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24836,
											"end": 24870,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 24832,
											"end": 24833,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24824,
											"end": 24830,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24820,
											"end": 24834,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 24813,
											"end": 24871,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24696,
											"end": 24878,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24696,
											"end": 24878,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 24884,
											"end": 25047,
											"name": "tag",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 24884,
											"end": 25047,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25024,
											"end": 25039,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C69642076616C756500000000000000000000000000000000000000"
										},
										{
											"begin": 25020,
											"end": 25021,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25012,
											"end": 25018,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25008,
											"end": 25022,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25001,
											"end": 25040,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 24884,
											"end": 25047,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24884,
											"end": 25047,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25053,
											"end": 25232,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 25053,
											"end": 25232,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25193,
											"end": 25224,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 25189,
											"end": 25190,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25181,
											"end": 25187,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25177,
											"end": 25191,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25170,
											"end": 25225,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25053,
											"end": 25232,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25053,
											"end": 25232,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25238,
											"end": 25414,
											"name": "tag",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 25238,
											"end": 25414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25378,
											"end": 25406,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420556E7374616B696E67204665652052617465000000000000"
										},
										{
											"begin": 25374,
											"end": 25375,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25366,
											"end": 25372,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25362,
											"end": 25376,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25355,
											"end": 25407,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25238,
											"end": 25414,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25238,
											"end": 25414,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25420,
											"end": 25593,
											"name": "tag",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 25420,
											"end": 25593,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25560,
											"end": 25585,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C6964204C6F636B7570204475726174696F6E000000000000000000"
										},
										{
											"begin": 25556,
											"end": 25557,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25548,
											"end": 25554,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25544,
											"end": 25558,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25537,
											"end": 25586,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25420,
											"end": 25593,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25420,
											"end": 25593,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25599,
											"end": 25762,
											"name": "tag",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 25599,
											"end": 25762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25739,
											"end": 25754,
											"name": "PUSH",
											"source": 8,
											"value": "43616E2774206265207A65726F00000000000000000000000000000000000000"
										},
										{
											"begin": 25735,
											"end": 25736,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25727,
											"end": 25733,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25723,
											"end": 25737,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25716,
											"end": 25755,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25599,
											"end": 25762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25599,
											"end": 25762,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25768,
											"end": 25930,
											"name": "tag",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 25768,
											"end": 25930,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25908,
											"end": 25922,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C6964204D6F64650000000000000000000000000000000000000000"
										},
										{
											"begin": 25904,
											"end": 25905,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25896,
											"end": 25902,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25892,
											"end": 25906,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25885,
											"end": 25923,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25768,
											"end": 25930,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25768,
											"end": 25930,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 25936,
											"end": 26099,
											"name": "tag",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 25936,
											"end": 26099,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26076,
											"end": 26091,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E742100000000000000000000000000000000000000"
										},
										{
											"begin": 26072,
											"end": 26073,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26064,
											"end": 26070,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 26060,
											"end": 26074,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 26053,
											"end": 26092,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 25936,
											"end": 26099,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25936,
											"end": 26099,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 26105,
											"end": 26227,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 26105,
											"end": 26227,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26178,
											"end": 26202,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "649"
										},
										{
											"begin": 26196,
											"end": 26201,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26178,
											"end": 26202,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 26178,
											"end": 26202,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26178,
											"end": 26202,
											"name": "tag",
											"source": 8,
											"value": "649"
										},
										{
											"begin": 26178,
											"end": 26202,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26171,
											"end": 26176,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26168,
											"end": 26203,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 26158,
											"end": 26221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "650"
										},
										{
											"begin": 26158,
											"end": 26221,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 26217,
											"end": 26218,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26214,
											"end": 26215,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 26207,
											"end": 26219,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 26158,
											"end": 26221,
											"name": "tag",
											"source": 8,
											"value": "650"
										},
										{
											"begin": 26158,
											"end": 26221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26105,
											"end": 26227,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26105,
											"end": 26227,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 26233,
											"end": 26349,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 26233,
											"end": 26349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26303,
											"end": 26324,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "652"
										},
										{
											"begin": 26318,
											"end": 26323,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26303,
											"end": 26324,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "603"
										},
										{
											"begin": 26303,
											"end": 26324,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26303,
											"end": 26324,
											"name": "tag",
											"source": 8,
											"value": "652"
										},
										{
											"begin": 26303,
											"end": 26324,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26296,
											"end": 26301,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26293,
											"end": 26325,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 26283,
											"end": 26343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "653"
										},
										{
											"begin": 26283,
											"end": 26343,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 26339,
											"end": 26340,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26336,
											"end": 26337,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 26329,
											"end": 26341,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 26283,
											"end": 26343,
											"name": "tag",
											"source": 8,
											"value": "653"
										},
										{
											"begin": 26283,
											"end": 26343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26233,
											"end": 26349,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26233,
											"end": 26349,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 26355,
											"end": 26477,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 26355,
											"end": 26477,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26428,
											"end": 26452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "655"
										},
										{
											"begin": 26446,
											"end": 26451,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26428,
											"end": 26452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 26428,
											"end": 26452,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 26428,
											"end": 26452,
											"name": "tag",
											"source": 8,
											"value": "655"
										},
										{
											"begin": 26428,
											"end": 26452,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26421,
											"end": 26426,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 26418,
											"end": 26453,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 26408,
											"end": 26471,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "656"
										},
										{
											"begin": 26408,
											"end": 26471,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 26467,
											"end": 26468,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26464,
											"end": 26465,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 26457,
											"end": 26469,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 26408,
											"end": 26471,
											"name": "tag",
											"source": 8,
											"value": "656"
										},
										{
											"begin": 26408,
											"end": 26471,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 26355,
											"end": 26477,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 26355,
											"end": 26477,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getNumberofStakers()": "5715ec11",
							"getRewardRate()": "7e1a3786",
							"getStakerMode(address)": "aedf562b",
							"getTotalStaked()": "0917e776",
							"harvest()": "4641257d",
							"isLocked(address)": "4a4fbeec",
							"isStartStaking(address)": "fe600f84",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardAmount(address)": "645a8a56",
							"rewardToHarvest()": "5d2ec65d",
							"setEventPeriod(uint256)": "692642e7",
							"setLockupTime(uint256)": "4b62b70b",
							"setRewardRate(uint256)": "9e447fc6",
							"setUnstakingFeeRate(uint256)": "91e07e7a",
							"stake(uint256)": "a694fc3a",
							"stakedAmount(address)": "f9931855",
							"startStaking(uint256,uint256)": "4b77dd9e",
							"token()": "fc0c546a",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardToClaim\",\"type\":\"uint256\"}],\"name\":\"Harvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockupDuration\",\"type\":\"uint256\"}],\"name\":\"SetEventPeriod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"}],\"name\":\"SetRewardRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakingFeeRate\",\"type\":\"uint256\"}],\"name\":\"SetUnstakingFeeRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getNumberofStakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getStakerMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isLocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isStartStaking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"rewardAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToHarvest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__eventPeriod\",\"type\":\"uint256\"}],\"name\":\"setEventPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lockupTime\",\"type\":\"uint256\"}],\"name\":\"setLockupTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__rewardRate\",\"type\":\"uint256\"}],\"name\":\"setRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__unstakingFeeRate\",\"type\":\"uint256\"}],\"name\":\"setUnstakingFeeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"stakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mode\",\"type\":\"uint256\"}],\"name\":\"startStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking.sol\":\"StakingPlatform\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"contracts/IBEP20.sol\":{\"keccak256\":\"0xe10557d770e08d0867c7d7f45f4ecc3aa71fab37aec10f03deac873774d83958\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29c5d9f242fe719f9c99293f895de2c62b11990dcb76b0c5fe29d4bb20debd36\",\"dweb:/ipfs/QmcxmgSN37RwVYQ6uVyyksA7q9rbs7ZfAGxLg9ZAqetzVc\"]},\"contracts/SafeBEP20.sol\":{\"keccak256\":\"0x6ddb1e1687ec39379d8d51c1dd37f9fc5bdbcf76d13b12bb2ef97218f17af728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c317daa7645bea9fb8926f04a64e9dda06454035d35dd618fb8865bead0b343\",\"dweb:/ipfs/QmcGbnJ9k7RVUBh5HyHxzV7u52hykYsHKqi7VRWSLvEjrG\"]},\"contracts/Staking.sol\":{\"keccak256\":\"0x8719861780fecda982c2000399268b9ec69467595444ffaf481627458fb06aef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://641fae9d8944da3868879688ad7f7d5b9449a99e236137258bdeb64400e77024\",\"dweb:/ipfs/QmWpCknzFMyPiRwkYwkyiAELU6FHxaXbxY9AqFTzsFButr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1160,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_unstakingFeeRate",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1162,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_eventPeriod",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1164,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_rewardRate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1166,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_rewardFeeRate",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1168,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_lockupPeriod",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1170,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_minStakeAmount_g",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1172,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_minStakeAmount_s",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1174,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_minStakeAmount_c",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1177,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_stakers",
								"offset": 0,
								"slot": "9",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1182,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "_staker",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_struct(Staker)1158_storage)"
							},
							{
								"astId": 1184,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "totalStaked",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1187,
								"contract": "contracts/Staking.sol:StakingPlatform",
								"label": "token",
								"offset": 0,
								"slot": "12",
								"type": "t_contract(IBEP20)912"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_contract(IBEP20)912": {
								"encoding": "inplace",
								"label": "contract IBEP20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Staker)1158_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StakingPlatform.Staker)",
								"numberOfBytes": "32",
								"value": "t_struct(Staker)1158_storage"
							},
							"t_struct(Staker)1158_storage": {
								"encoding": "inplace",
								"label": "struct StakingPlatform.Staker",
								"members": [
									{
										"astId": 1147,
										"contract": "contracts/Staking.sol:StakingPlatform",
										"label": "stakerCurrentReward",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1149,
										"contract": "contracts/Staking.sol:StakingPlatform",
										"label": "stakedAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1151,
										"contract": "contracts/Staking.sol:StakingPlatform",
										"label": "mode",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1153,
										"contract": "contracts/Staking.sol:StakingPlatform",
										"label": "stakeStartTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1155,
										"contract": "contracts/Staking.sol:StakingPlatform",
										"label": "lastUpdatedBlockNumber",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1157,
										"contract": "contracts/Staking.sol:StakingPlatform",
										"label": "staked",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							499
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 500,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 499,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								499
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							182
						]
					},
					"id": 183,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 182,
							"linearizedBaseContracts": [
								182
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:1"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "342:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:1"
									},
									"scope": 182,
									"src": "296:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "453:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "493:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:1"
									},
									"scope": 182,
									"src": "434:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "733:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "745:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "779:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 128,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:1"
									},
									"scope": 182,
									"src": "715:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1079:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1094:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1134:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:1"
									},
									"scope": 182,
									"src": "1060:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1813:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1830:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:1"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "1864:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 148,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:1"
									},
									"scope": 182,
									"src": "1796:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2199:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2241:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:1"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2280:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 160,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:1"
									},
									"scope": 182,
									"src": "2168:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 172,
									"name": "Transfer",
									"nameLocation": "2461:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2470:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2492:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2512:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:1"
									},
									"src": "2455:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 181,
									"name": "Approval",
									"nameLocation": "2692:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2701:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2724:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2749:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:1"
									},
									"src": "2686:78:1"
								}
							],
							"scope": 183,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							477
						]
					},
					"id": 478,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 184,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 185,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 477,
							"linearizedBaseContracts": [
								477
							],
							"name": "Address",
							"nameLocation": "202:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "1241:254:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 193,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 188,
																"src": "1465:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 192,
												"id": 198,
												"nodeType": "Return",
												"src": "1458:30:2"
											}
										]
									},
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1195:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:2"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1235:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 190,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:2"
									},
									"scope": 477,
									"src": "1175:320:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "2483:241:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 211,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		],
																		"id": 210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 209,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 214,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "2526:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 208,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:2"
											},
											{
												"assignments": [
													220,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 220,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 233,
														"src": "2578:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 219,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 227,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 221,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "2596:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 223,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "2618:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 229,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "2647:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 228,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:2"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2431:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2458:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:2"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:2"
									},
									"scope": 477,
									"src": "2412:312:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "3555:84:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 245,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "3585:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 246,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "3593:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 244,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															251,
															271
														],
														"referencedDeclaration": 271,
														"src": "3572:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 243,
												"id": 249,
												"nodeType": "Return",
												"src": "3565:67:2"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3488:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3504:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:2"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3541:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 241,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:2"
									},
									"scope": 477,
									"src": "3466:173:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "4008:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 264,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "4047:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 265,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "4055:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 267,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "4064:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 263,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															291,
															341
														],
														"referencedDeclaration": 341,
														"src": "4025:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 262,
												"id": 269,
												"nodeType": "Return",
												"src": "4018:59:2"
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3892:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3916:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3943:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 257,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:2"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3994:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:2"
									},
									"scope": 477,
									"src": "3861:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "4589:111:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 284,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "4628:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 285,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "4636:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 286,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "4642:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 283,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															291,
															341
														],
														"referencedDeclaration": 341,
														"src": "4606:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 282,
												"id": 289,
												"nodeType": "Return",
												"src": "4599:94:2"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4486:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4510:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 275,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4537:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:2"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4575:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 280,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:2"
									},
									"scope": 477,
									"src": "4446:254:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "5127:320:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 308,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$477",
																				"typeString": "library Address"
																			}
																		],
																		"id": 307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 306,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 311,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "5170:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 318,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "5247:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 317,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "5236:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:2"
											},
											{
												"assignments": [
													324,
													326
												],
												"declarations": [
													{
														"constant": false,
														"id": 324,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "5300:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 323,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 326,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "5314:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 325,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 333,
												"initialValue": {
													"arguments": [
														{
															"id": 331,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "5367:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 327,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "5341:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 329,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "5360:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 335,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "5406:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 336,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "5415:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 337,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "5427:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 334,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "5389:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 304,
												"id": 339,
												"nodeType": "Return",
												"src": "5382:58:2"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "4988:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5012:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 295,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5062:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 299,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:2"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5113:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:2"
									},
									"scope": 477,
									"src": "4948:499:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "5724:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 352,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "5760:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 353,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "5768:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 351,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															358,
															393
														],
														"referencedDeclaration": 393,
														"src": "5741:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 350,
												"id": 356,
												"nodeType": "Return",
												"src": "5734:80:2"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5668:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5710:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 348,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:2"
									},
									"scope": 477,
									"src": "5624:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "6163:228:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 372,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "6192:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 371,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "6181:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:2"
											},
											{
												"assignments": [
													378,
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 378,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "6252:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 377,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "6266:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 379,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 385,
												"initialValue": {
													"arguments": [
														{
															"id": 383,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "6311:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 381,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "6293:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 387,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "6350:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 388,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "6359:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 389,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "6371:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 386,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "6333:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 369,
												"id": 391,
												"nodeType": "Return",
												"src": "6326:58:2"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6042:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6066:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 362,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6093:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 364,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:2"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "6149:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:2"
									},
									"scope": 477,
									"src": "6005:386:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "6667:101:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 404,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "6705:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 405,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "6713:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 403,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															410,
															445
														],
														"referencedDeclaration": 445,
														"src": "6684:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 402,
												"id": 408,
												"nodeType": "Return",
												"src": "6677:84:2"
											}
										]
									},
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6600:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6616:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:2"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6653:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 400,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:2"
									},
									"scope": 477,
									"src": "6570:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "7109:232:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 424,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "7138:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 423,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "7127:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 422,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:2"
											},
											{
												"assignments": [
													430,
													432
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "7200:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 429,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 444,
														"src": "7214:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 431,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 437,
												"initialValue": {
													"arguments": [
														{
															"id": 435,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "7261:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 433,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "7241:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "7300:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 440,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "7309:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 441,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "7321:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 438,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "7283:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 421,
												"id": 443,
												"nodeType": "Return",
												"src": "7276:58:2"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "6993:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7017:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 414,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7044:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 416,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:2"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7095:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 419,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:2"
									},
									"scope": 477,
									"src": "6954:387:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "7721:532:2",
										"statements": [
											{
												"condition": {
													"id": 457,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 448,
													"src": "7735:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 473,
													"nodeType": "Block",
													"src": "7792:455:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 461,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "7876:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 471,
																"nodeType": "Block",
																"src": "8184:53:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 468,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 452,
																					"src": "8209:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 467,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 470,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:2"
																	}
																]
															},
															"id": 472,
															"nodeType": "IfStatement",
															"src": "7872:365:2",
															"trueBody": {
																"id": 466,
																"nodeType": "Block",
																"src": "7899:279:2",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:2",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:2"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:2"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:2",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:2",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:2"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:2"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:2"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:2"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 450,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:2",
																				"valueSize": 1
																			},
																			{
																				"declaration": 450,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:2",
																				"valueSize": 1
																			}
																		],
																		"id": 465,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:2"
																	}
																]
															}
														}
													]
												},
												"id": 474,
												"nodeType": "IfStatement",
												"src": "7731:516:2",
												"trueBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "7744:42:2",
													"statements": [
														{
															"expression": {
																"id": 458,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "7765:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 456,
															"id": 459,
															"nodeType": "Return",
															"src": "7758:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:2",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7596:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7618:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7651:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:2"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7707:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:2"
									},
									"scope": 477,
									"src": "7561:692:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 478,
							"src": "194:8061:2",
							"usedErrors": []
						}
					],
					"src": "101:8155:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							499
						]
					},
					"id": 500,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 479,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 480,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 499,
							"linearizedBaseContracts": [
								499
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 485,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 484,
												"id": 487,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 499,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 494,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 493,
												"id": 496,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 491,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 499,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 500,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							811
						]
					},
					"id": 812,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 501,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 502,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 811,
							"linearizedBaseContracts": [
								811
							],
							"name": "SafeMath",
							"nameLocation": "475:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "702:140:4",
										"statements": [
											{
												"id": 532,
												"nodeType": "UncheckedBlock",
												"src": "712:124:4",
												"statements": [
													{
														"assignments": [
															515
														],
														"declarations": [
															{
																"constant": false,
																"id": 515,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 532,
																"src": "736:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 514,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 519,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 516,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "748:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 517,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "752:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 520,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "771:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 521,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "775:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 527,
														"nodeType": "IfStatement",
														"src": "767:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 525,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 513,
															"id": 526,
															"nodeType": "Return",
															"src": "778:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 529,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "823:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 530,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 513,
														"id": 531,
														"nodeType": "Return",
														"src": "809:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "642:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "653:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:4"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "687:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:4"
									},
									"scope": 811,
									"src": "626:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "1064:113:4",
										"statements": [
											{
												"id": 560,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 546,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "1102:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 547,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "1106:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 553,
														"nodeType": "IfStatement",
														"src": "1098:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 551,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 545,
															"id": 552,
															"nodeType": "Return",
															"src": "1109:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 555,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 537,
																		"src": "1154:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 556,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 539,
																		"src": "1158:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 558,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 545,
														"id": 559,
														"nodeType": "Return",
														"src": "1140:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:4",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1004:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1015:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:4"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1049:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 541,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1055:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:4"
									},
									"scope": 811,
									"src": "988:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "1401:417:4",
										"statements": [
											{
												"id": 602,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 574,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "1669:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 581,
														"nodeType": "IfStatement",
														"src": "1665:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 579,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 573,
															"id": 580,
															"nodeType": "Return",
															"src": "1677:16:4"
														}
													},
													{
														"assignments": [
															583
														],
														"declarations": [
															{
																"constant": false,
																"id": 583,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 602,
																"src": "1707:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 582,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 587,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 584,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "1719:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 585,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "1723:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 588,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "1742:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 589,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "1746:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 591,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "1751:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 597,
														"nodeType": "IfStatement",
														"src": "1738:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 595,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 573,
															"id": 596,
															"nodeType": "Return",
															"src": "1754:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 599,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "1799:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 600,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 573,
														"id": 601,
														"nodeType": "Return",
														"src": "1785:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1341:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1352:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:4"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1386:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1392:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:4"
									},
									"scope": 811,
									"src": "1325:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "2043:114:4",
										"statements": [
											{
												"id": 630,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 616,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "2081:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 623,
														"nodeType": "IfStatement",
														"src": "2077:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 621,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 615,
															"id": 622,
															"nodeType": "Return",
															"src": "2089:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 625,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 607,
																		"src": "2134:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 626,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 609,
																		"src": "2138:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 628,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 615,
														"id": 629,
														"nodeType": "Return",
														"src": "2120:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1983:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1994:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:4"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "2028:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "2034:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:4"
									},
									"scope": 811,
									"src": "1967:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "2392:114:4",
										"statements": [
											{
												"id": 658,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 644,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "2430:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 651,
														"nodeType": "IfStatement",
														"src": "2426:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 649,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 643,
															"id": 650,
															"nodeType": "Return",
															"src": "2438:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 653,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "2483:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 654,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 637,
																		"src": "2487:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 656,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 643,
														"id": 657,
														"nodeType": "Return",
														"src": "2469:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2332:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2343:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:4"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2383:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:4"
									},
									"scope": 811,
									"src": "2316:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "2808:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 670,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "2825:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 671,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "2829:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 669,
												"id": 673,
												"nodeType": "Return",
												"src": "2818:12:4"
											}
										]
									},
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2754:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2765:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:4"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2799:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:4"
									},
									"scope": 811,
									"src": "2741:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "3175:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 685,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "3192:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 686,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "3196:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 684,
												"id": 688,
												"nodeType": "Return",
												"src": "3185:12:4"
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3121:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3132:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:4"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3166:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:4"
									},
									"scope": 811,
									"src": "3108:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "3518:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 700,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "3535:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 701,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "3539:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 699,
												"id": 703,
												"nodeType": "Return",
												"src": "3528:12:4"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3464:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3475:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:4"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3509:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:4"
									},
									"scope": 811,
									"src": "3451:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "3903:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 715,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "3920:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 716,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "3924:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 714,
												"id": 718,
												"nodeType": "Return",
												"src": "3913:12:4"
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3849:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3860:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:4"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "3894:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:4"
									},
									"scope": 811,
									"src": "3836:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "4452:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 730,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "4469:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 731,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "4473:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 729,
												"id": 733,
												"nodeType": "Return",
												"src": "4462:12:4"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4398:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4409:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:4"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4443:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:4"
									},
									"scope": 811,
									"src": "4385:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "5070:106:4",
										"statements": [
											{
												"id": 758,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 748,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "5112:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 749,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 738,
																		"src": "5117:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 751,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "5120:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 747,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 753,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 754,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "5154:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 755,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "5158:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 746,
														"id": 757,
														"nodeType": "Return",
														"src": "5147:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "4967:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "4986:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5005:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 741,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:4"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5061:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:4"
									},
									"scope": 811,
									"src": "4945:231:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "5785:105:4",
										"statements": [
											{
												"id": 783,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 773,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "5827:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 776,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "5834:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 772,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 778,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 779,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "5868:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 780,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "5872:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 771,
														"id": 782,
														"nodeType": "Return",
														"src": "5861:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5682:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5701:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5720:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 766,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5776:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:4"
									},
									"scope": 811,
									"src": "5660:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "6661:105:4",
										"statements": [
											{
												"id": 808,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 798,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 790,
																		"src": "6703:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 801,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "6710:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 797,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 803,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 804,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "6744:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 805,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "6748:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 796,
														"id": 807,
														"nodeType": "Return",
														"src": "6737:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6558:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6577:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6596:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 791,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:4"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "6652:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:4"
									},
									"scope": 811,
									"src": "6536:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 812,
							"src": "467:6301:4",
							"usedErrors": []
						}
					],
					"src": "92:6677:4"
				},
				"id": 4
			},
			"contracts/IBEP20.sol": {
				"ast": {
					"absolutePath": "contracts/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							912
						]
					},
					"id": 913,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 813,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 912,
							"linearizedBaseContracts": [
								912
							],
							"name": "IBEP20",
							"nameLocation": "72:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "86:68:5",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 819,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "169:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "180:2:5"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "206:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "205:9:5"
									},
									"scope": 912,
									"src": "160:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "223:53:5",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 825,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "291:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "299:2:5"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "325:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 822,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "325:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:7:5"
									},
									"scope": 912,
									"src": "282:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "340:51:5",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 831,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "406:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "412:2:5"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "438:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 828,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "438:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:15:5"
									},
									"scope": 912,
									"src": "397:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "461:49:5",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 837,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "525:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "529:2:5"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "555:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 834,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "555:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:15:5"
									},
									"scope": 912,
									"src": "516:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "578:54:5",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "647:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "655:2:5"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "681:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "680:9:5"
									},
									"scope": 912,
									"src": "638:52:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "698:74:5",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 851,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "787:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "805:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "797:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "796:17:5"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "837:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "836:9:5"
									},
									"scope": 912,
									"src": "778:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "854:215:5",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 861,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1084:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1101:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1093:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1120:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1112:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:35:5"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "1146:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1146:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1145:6:5"
									},
									"scope": 912,
									"src": "1075:77:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 862,
										"nodeType": "StructuredDocumentation",
										"src": "1160:270:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 871,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1445:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1463:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1455:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1479:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1471:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1454:33:5"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1511:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:9:5"
									},
									"scope": 912,
									"src": "1436:84:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "1528:655:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT:  Beware that changingan allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2198:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2214:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2206:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2231:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2223:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2223:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2205:33:5"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2257:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 878,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2257:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2256:6:5"
									},
									"scope": 912,
									"src": "2189:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "2271:304:5",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 893,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2590:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2611:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2603:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2627:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2619:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2646:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2638:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2602:51:5"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "2672:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 890,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2672:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2671:6:5"
									},
									"scope": 912,
									"src": "2581:97:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "2686:163:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 902,
									"name": "Transfer",
									"nameLocation": "2861:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2886:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2870:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2870:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2908:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2892:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2920:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2912:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2869:57:5"
									},
									"src": "2855:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "2935:151:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 911,
									"name": "Approval",
									"nameLocation": "3098:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3123:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3107:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3107:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3146:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3130:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3130:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3163:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3155:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3106:63:5"
									},
									"src": "3092:78:5"
								}
							],
							"scope": 913,
							"src": "62:3111:5",
							"usedErrors": []
						}
					],
					"src": "35:3138:5"
				},
				"id": 5
			},
			"contracts/SafeBEP20.sol": {
				"ast": {
					"absolutePath": "contracts/SafeBEP20.sol",
					"exportedSymbols": {
						"Address": [
							477
						],
						"IBEP20": [
							912
						],
						"SafeBEP20": [
							1130
						],
						"SafeMath": [
							811
						]
					},
					"id": 1131,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 914,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 915,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 812,
							"src": "60:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 916,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 478,
							"src": "119:51:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 917,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1131,
							"sourceUnit": 913,
							"src": "172:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1130,
							"linearizedBaseContracts": [
								1130
							],
							"name": "SafeBEP20",
							"nameLocation": "206:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 920,
									"libraryName": {
										"id": 918,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 811,
										"src": "229:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "223:27:6",
									"typeName": {
										"id": 919,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 923,
									"libraryName": {
										"id": 921,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 477,
										"src": "262:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "256:26:6",
									"typeName": {
										"id": 922,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "274:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "362:105:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 934,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "393:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 937,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 926,
																			"src": "423:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 861,
																		"src": "423:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "423:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 940,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 928,
																	"src": "448:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 941,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "452:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 935,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "400:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "400:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "400:58:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 933,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "373:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "373:86:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "373:86:6"
											}
										]
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "299:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "319:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "312:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 925,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 924,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "312:6:6"
													},
													"referencedDeclaration": 912,
													"src": "312:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "334:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "326:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "346:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "338:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:41:6"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "362:0:6"
									},
									"scope": 1130,
									"src": "290:177:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "565:115:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 959,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "596:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 962,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "626:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 893,
																		"src": "626:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "626:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 965,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 951,
																	"src": "655:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 966,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "661:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 967,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "665:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 960,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "603:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "603:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "603:68:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 958,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "576:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "576:96:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "576:96:6"
											}
										]
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "484:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "508:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "501:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 948,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 947,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "501:6:6"
													},
													"referencedDeclaration": 912,
													"src": "501:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "523:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "515:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "515:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "537:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "529:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "549:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "541:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "541:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:55:6"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "565:0:6"
									},
									"scope": 1130,
									"src": "475:205:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "1025:546:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 984,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 980,
																			"src": "1319:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1328:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1319:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 987,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1318:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 992,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1359:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																								"typeString": "library SafeBEP20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																								"typeString": "library SafeBEP20"
																							}
																						],
																						"id": 991,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1351:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 990,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1351:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 993,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1351:13:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 994,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 978,
																					"src": "1366:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 988,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 976,
																					"src": "1335:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IBEP20_$912",
																						"typeString": "contract IBEP20"
																					}
																				},
																				"id": 989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 871,
																				"src": "1335:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1335:39:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1378:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1335:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 998,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1334:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1318:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666542455032303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1395:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeBEP20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
																"typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 983,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1310:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1310:152:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1002,
												"nodeType": "ExpressionStatement",
												"src": "1310:152:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1004,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "1493:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1007,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 976,
																			"src": "1523:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "1523:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1523:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1010,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "1547:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1011,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "1556:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1005,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1500:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1500:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:62:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1003,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "1473:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1473:90:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "1473:90:6"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "688:255:6",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IBEP20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "958:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "977:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "970:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 975,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 974,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "970:6:6"
													},
													"referencedDeclaration": 912,
													"src": "970:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "992:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "984:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "984:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1009:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "1001:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1001:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:46:6"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1025:0:6"
									},
									"scope": 1130,
									"src": "949:622:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "1665:200:6",
										"statements": [
											{
												"assignments": [
													1027
												],
												"declarations": [
													{
														"constant": false,
														"id": 1027,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "1684:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1052,
														"src": "1676:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1026,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1676:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1039,
												"initialValue": {
													"arguments": [
														{
															"id": 1037,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "1743:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1032,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1723:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1030,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1715:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1034,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "1730:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1028,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "1699:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 871,
																"src": "1699:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1699:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 675,
														"src": "1699:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1699:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1676:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1041,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "1780:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1044,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1019,
																			"src": "1810:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "1810:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1810:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1047,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "1834:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1048,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1027,
																	"src": "1843:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1042,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1787:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1787:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1787:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1040,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "1760:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1760:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "1760:97:6"
											}
										]
									},
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "1588:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1617:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1610:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1018,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1017,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "1610:6:6"
													},
													"referencedDeclaration": 912,
													"src": "1610:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1632:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1624:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1649:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "1641:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1609:46:6"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1665:0:6"
									},
									"scope": 1130,
									"src": "1579:286:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1090,
										"nodeType": "Block",
										"src": "1959:245:6",
										"statements": [
											{
												"assignments": [
													1064
												],
												"declarations": [
													{
														"constant": false,
														"id": 1064,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "1978:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1090,
														"src": "1970:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1063,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1970:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1077,
												"initialValue": {
													"arguments": [
														{
															"id": 1074,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "2037:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2044:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															},
															"value": "SafeBEP20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
																"typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1069,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2017:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeBEP20_$1130",
																				"typeString": "library SafeBEP20"
																			}
																		],
																		"id": 1068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2009:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1067,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2009:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2009:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1071,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "2024:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1065,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "1993:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 871,
																"src": "1993:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1993:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 760,
														"src": "1993:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1993:95:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1970:118:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1079,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "2119:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1082,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1056,
																			"src": "2149:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBEP20_$912",
																				"typeString": "contract IBEP20"
																			}
																		},
																		"id": 1083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 881,
																		"src": "2149:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2149:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1085,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "2173:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1086,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "2182:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1080,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2126:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2126:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2126:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1078,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "2099:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IBEP20,bytes memory)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2099:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "2099:97:6"
											}
										]
									},
									"id": 1091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "1882:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1911:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1904:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1055,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1054,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "1904:6:6"
													},
													"referencedDeclaration": 912,
													"src": "1904:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1926:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1918:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1918:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1943:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1935:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1935:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1903:46:6"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1959:0:6"
									},
									"scope": 1130,
									"src": "1873:331:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "2669:699:6",
										"statements": [
											{
												"assignments": [
													1101
												],
												"declarations": [
													{
														"constant": false,
														"id": 1101,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3044:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1128,
														"src": "3031:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1100,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3031:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1110,
												"initialValue": {
													"arguments": [
														{
															"id": 1107,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "3085:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3091:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															},
															"value": "SafeBEP20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
																"typeString": "literal_string \"SafeBEP20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1104,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "3065:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																],
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3057:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1102,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3057:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3057:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 271,
														"src": "3057:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3057:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3031:95:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1111,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "3141:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3141:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3161:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3141:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1127,
												"nodeType": "IfStatement",
												"src": "3137:224:6",
												"trueBody": {
													"id": 1126,
													"nodeType": "Block",
													"src": "3164:197:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1118,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1101,
																				"src": "3283:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1120,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3296:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1119,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3296:4:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1121,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3295:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1116,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3272:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3272:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3272:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3304:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		},
																		"value": "SafeBEP20: BEP20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
																			"typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
																		}
																	],
																	"id": 1115,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3264:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3264:85:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1125,
															"nodeType": "ExpressionStatement",
															"src": "3264:85:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "2216:377:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "2608:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2635:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "2628:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBEP20_$912",
													"typeString": "contract IBEP20"
												},
												"typeName": {
													"id": 1094,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1093,
														"name": "IBEP20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 912,
														"src": "2628:6:6"
													},
													"referencedDeclaration": 912,
													"src": "2628:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2655:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "2642:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1096,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2642:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2627:33:6"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2669:0:6"
									},
									"scope": 1130,
									"src": "2599:769:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1131,
							"src": "198:3173:6",
							"usedErrors": []
						}
					],
					"src": "33:3338:6"
				},
				"id": 6
			},
			"contracts/Staking.sol": {
				"ast": {
					"absolutePath": "contracts/Staking.sol",
					"exportedSymbols": {
						"Address": [
							477
						],
						"Context": [
							499
						],
						"IBEP20": [
							912
						],
						"IERC20": [
							182
						],
						"Ownable": [
							104
						],
						"SafeBEP20": [
							1130
						],
						"SafeMath": [
							811
						],
						"StakingPlatform": [
							2010
						]
					},
					"id": 2011,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1132,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1133,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2011,
							"sourceUnit": 105,
							"src": "60:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2011,
							"sourceUnit": 183,
							"src": "114:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1135,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2011,
							"sourceUnit": 812,
							"src": "172:57:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SafeBEP20.sol",
							"file": "./SafeBEP20.sol",
							"id": 1136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2011,
							"sourceUnit": 1131,
							"src": "231:25:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1137,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "288:7:7"
									},
									"id": 1138,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:7"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2010,
							"linearizedBaseContracts": [
								2010,
								104,
								499
							],
							"name": "StakingPlatform",
							"nameLocation": "269:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1141,
									"libraryName": {
										"id": 1139,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 811,
										"src": "315:8:7"
									},
									"nodeType": "UsingForDirective",
									"src": "309:27:7",
									"typeName": {
										"id": 1140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "328:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1145,
									"libraryName": {
										"id": 1142,
										"name": "SafeBEP20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1130,
										"src": "348:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "342:27:7",
									"typeName": {
										"id": 1144,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1143,
											"name": "IBEP20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 912,
											"src": "362:6:7"
										},
										"referencedDeclaration": 912,
										"src": "362:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$912",
											"typeString": "contract IBEP20"
										}
									}
								},
								{
									"canonicalName": "StakingPlatform.Staker",
									"id": 1158,
									"members": [
										{
											"constant": false,
											"id": 1147,
											"mutability": "mutable",
											"name": "stakerCurrentReward",
											"nameLocation": "436:19:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "428:27:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1146,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "428:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1149,
											"mutability": "mutable",
											"name": "stakedAmount",
											"nameLocation": "474:12:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "466:20:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1148,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "466:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1151,
											"mutability": "mutable",
											"name": "mode",
											"nameLocation": "505:4:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "497:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1150,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "497:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1153,
											"mutability": "mutable",
											"name": "stakeStartTime",
											"nameLocation": "528:14:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "520:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1152,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "520:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1155,
											"mutability": "mutable",
											"name": "lastUpdatedBlockNumber",
											"nameLocation": "561:22:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "553:30:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1154,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "553:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1157,
											"mutability": "mutable",
											"name": "staked",
											"nameLocation": "602:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "594:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1156,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "594:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Staker",
									"nameLocation": "410:6:7",
									"nodeType": "StructDefinition",
									"scope": 2010,
									"src": "403:213:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1160,
									"mutability": "mutable",
									"name": "_unstakingFeeRate",
									"nameLocation": "737:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 2010,
									"src": "721:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1159,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "721:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1162,
									"mutability": "mutable",
									"name": "_eventPeriod",
									"nameLocation": "777:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 2010,
									"src": "761:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1161,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "761:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1164,
									"mutability": "mutable",
									"name": "_rewardRate",
									"nameLocation": "812:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 2010,
									"src": "796:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1163,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "796:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1166,
									"mutability": "mutable",
									"name": "_rewardFeeRate",
									"nameLocation": "846:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 2010,
									"src": "830:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1165,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "830:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1168,
									"mutability": "mutable",
									"name": "_lockupPeriod",
									"nameLocation": "883:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 2010,
									"src": "867:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1167,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "867:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1170,
									"mutability": "mutable",
									"name": "_minStakeAmount_g",
									"nameLocation": "919:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 2010,
									"src": "903:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1169,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "903:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1172,
									"mutability": "mutable",
									"name": "_minStakeAmount_s",
									"nameLocation": "959:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 2010,
									"src": "943:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1171,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "943:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1174,
									"mutability": "mutable",
									"name": "_minStakeAmount_c",
									"nameLocation": "999:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 2010,
									"src": "983:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1173,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "983:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1177,
									"mutability": "mutable",
									"name": "_stakers",
									"nameLocation": "1047:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 2010,
									"src": "1029:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1175,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1029:7:7",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1176,
										"nodeType": "ArrayTypeName",
										"src": "1029:9:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1182,
									"mutability": "mutable",
									"name": "_staker",
									"nameLocation": "1099:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 2010,
									"src": "1064:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
										"typeString": "mapping(address => struct StakingPlatform.Staker)"
									},
									"typeName": {
										"id": 1181,
										"keyType": {
											"id": 1178,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1072:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1064:26:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
											"typeString": "mapping(address => struct StakingPlatform.Staker)"
										},
										"valueType": {
											"id": 1180,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1179,
												"name": "Staker",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1158,
												"src": "1083:6:7"
											},
											"referencedDeclaration": 1158,
											"src": "1083:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
												"typeString": "struct StakingPlatform.Staker"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 1184,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "1184:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 2010,
									"src": "1169:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1183,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1169:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1187,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "1216:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 2010,
									"src": "1202:19:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$912",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"id": 1186,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1185,
											"name": "IBEP20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 912,
											"src": "1202:6:7"
										},
										"referencedDeclaration": 912,
										"src": "1202:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$912",
											"typeString": "contract IBEP20"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1193,
									"name": "Staked",
									"nameLocation": "1315:6:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1330:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "1322:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1322:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1346:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "1338:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1338:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1321:32:7"
									},
									"src": "1309:45:7"
								},
								{
									"anonymous": false,
									"id": 1199,
									"name": "Harvest",
									"nameLocation": "1366:7:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1382:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "1374:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1374:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardToClaim",
												"nameLocation": "1398:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "1390:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1390:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1373:39:7"
									},
									"src": "1360:53:7"
								},
								{
									"anonymous": false,
									"id": 1205,
									"name": "Withdraw",
									"nameLocation": "1425:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"indexed": false,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1442:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "1434:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1434:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1458:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "1450:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1450:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:32:7"
									},
									"src": "1419:47:7"
								},
								{
									"anonymous": false,
									"id": 1209,
									"name": "SetRewardRate",
									"nameLocation": "1478:13:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "1500:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "1492:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1492:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:20:7"
									},
									"src": "1472:40:7"
								},
								{
									"anonymous": false,
									"id": 1213,
									"name": "SetEventPeriod",
									"nameLocation": "1524:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockupDuration",
												"nameLocation": "1547:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "1539:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1539:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1538:24:7"
									},
									"src": "1518:45:7"
								},
								{
									"anonymous": false,
									"id": 1217,
									"name": "SetUnstakingFeeRate",
									"nameLocation": "1575:19:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"indexed": false,
												"mutability": "mutable",
												"name": "unstakingFeeRate",
												"nameLocation": "1603:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "1595:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1595:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1594:26:7"
									},
									"src": "1569:52:7"
								},
								{
									"body": {
										"id": 1231,
										"nodeType": "Block",
										"src": "1657:68:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1222,
														"name": "Init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "1678:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1678:6:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1224,
												"nodeType": "ExpressionStatement",
												"src": "1678:6:7"
											},
											{
												"expression": {
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1225,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "1695:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$912",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1227,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1219,
																"src": "1710:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1226,
															"name": "IBEP20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "1703:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IBEP20_$912_$",
																"typeString": "type(contract IBEP20)"
															}
														},
														"id": 1228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1703:14:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$912",
															"typeString": "contract IBEP20"
														}
													},
													"src": "1695:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$912",
														"typeString": "contract IBEP20"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "1695:22:7"
											}
										]
									},
									"id": 1232,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1649:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "1641:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1640:16:7"
									},
									"returnParameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:7"
									},
									"scope": 2010,
									"src": "1629:96:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1271,
										"nodeType": "Block",
										"src": "1758:298:7",
										"statements": [
											{
												"expression": {
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1235,
														"name": "_rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "1779:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323030",
														"id": 1236,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1793:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200_by_1",
															"typeString": "int_const 200"
														},
														"value": "200"
													},
													"src": "1779:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "1779:17:7"
											},
											{
												"expression": {
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1239,
														"name": "_unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "1818:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31353030",
														"id": 1240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1838:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1500_by_1",
															"typeString": "int_const 1500"
														},
														"value": "1500"
													},
													"src": "1818:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1242,
												"nodeType": "ExpressionStatement",
												"src": "1818:24:7"
											},
											{
												"expression": {
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1243,
														"name": "_rewardFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "1853:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313030",
														"id": 1244,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1870:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1853:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1246,
												"nodeType": "ExpressionStatement",
												"src": "1853:20:7"
											},
											{
												"expression": {
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1247,
														"name": "_eventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "1884:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "37",
														"id": 1248,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1899:6:7",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_604800_by_1",
															"typeString": "int_const 604800"
														},
														"value": "7"
													},
													"src": "1884:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1250,
												"nodeType": "ExpressionStatement",
												"src": "1884:21:7"
											},
											{
												"expression": {
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1251,
														"name": "_lockupPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "1916:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3930",
														"id": 1252,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1932:7:7",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7776000_by_1",
															"typeString": "int_const 7776000"
														},
														"value": "90"
													},
													"src": "1916:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1254,
												"nodeType": "ExpressionStatement",
												"src": "1916:23:7"
											},
											{
												"expression": {
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1255,
														"name": "_minStakeAmount_c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "1950:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31653234",
														"id": 1256,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1970:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000000000"
														},
														"value": "1e24"
													},
													"src": "1950:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1258,
												"nodeType": "ExpressionStatement",
												"src": "1950:24:7"
											},
											{
												"expression": {
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1259,
														"name": "_minStakeAmount_s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "1985:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_3000000000000000000000000_by_1",
															"typeString": "int_const 3000000000000000000000000"
														},
														"id": 1262,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "33",
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2005:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31653234",
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															},
															"value": "1e24"
														},
														"src": "2005:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3000000000000000000000000_by_1",
															"typeString": "int_const 3000000000000000000000000"
														}
													},
													"src": "1985:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "1985:26:7"
											},
											{
												"expression": {
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1265,
														"name": "_minStakeAmount_g",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "2022:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_7000000000000000000000000_by_1",
															"typeString": "int_const 7000000000000000000000000"
														},
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "37",
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2042:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31653234",
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2044:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															},
															"value": "1e24"
														},
														"src": "2042:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7000000000000000000000000_by_1",
															"typeString": "int_const 7000000000000000000000000"
														}
													},
													"src": "2022:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1270,
												"nodeType": "ExpressionStatement",
												"src": "2022:26:7"
											}
										]
									},
									"id": 1272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Init",
									"nameLocation": "1742:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1746:2:7"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1758:0:7"
									},
									"scope": 2010,
									"src": "1733:323:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1284,
										"nodeType": "Block",
										"src": "2143:55:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2183:6:7",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															}
														],
														"expression": {
															"id": 1279,
															"name": "timedur",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "2171:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "2171:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2171:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1278,
												"id": 1283,
												"nodeType": "Return",
												"src": "2164:26:7"
											}
										]
									},
									"id": 1285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calDaysFromTimestamp",
									"nameLocation": "2073:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "timedur",
												"nameLocation": "2102:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "2094:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2093:17:7"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "2134:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2134:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2133:9:7"
									},
									"scope": 2010,
									"src": "2064:134:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1344,
										"nodeType": "Block",
										"src": "2304:426:7",
										"statements": [
											{
												"assignments": [
													1289
												],
												"declarations": [
													{
														"constant": false,
														"id": 1289,
														"mutability": "mutable",
														"name": "stakerStakedAmount",
														"nameLocation": "2333:18:7",
														"nodeType": "VariableDeclaration",
														"scope": 1344,
														"src": "2325:26:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1288,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2325:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1295,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1290,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "2354:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1293,
														"indexExpression": {
															"expression": {
																"id": 1291,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2362:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2362:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2354:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakedAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1149,
													"src": "2354:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2325:61:7"
											},
											{
												"assignments": [
													1297
												],
												"declarations": [
													{
														"constant": false,
														"id": 1297,
														"mutability": "mutable",
														"name": "newReward",
														"nameLocation": "2415:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1344,
														"src": "2407:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1296,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2407:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1319,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "316534",
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2543:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "1e4"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1314,
																	"name": "_rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1164,
																	"src": "2526:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "38363430",
																					"id": 1310,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2515:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_8640_by_1",
																						"typeString": "int_const 8640"
																					},
																					"value": "8640"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_8640_by_1",
																						"typeString": "int_const 8640"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"baseExpression": {
																									"id": 1303,
																									"name": "_staker",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1182,
																									"src": "2467:7:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																										"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																									}
																								},
																								"id": 1306,
																								"indexExpression": {
																									"expression": {
																										"id": 1304,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "2475:3:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 1305,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "2475:10:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "2467:19:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Staker_$1158_storage",
																									"typeString": "struct StakingPlatform.Staker storage ref"
																								}
																							},
																							"id": 1307,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "lastUpdatedBlockNumber",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1155,
																							"src": "2467:42:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"id": 1300,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "2450:5:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 1301,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "number",
																							"nodeType": "MemberAccess",
																							"src": "2450:12:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1302,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 690,
																						"src": "2450:16:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1308,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2450:60:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1309,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 720,
																				"src": "2450:64:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1311,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2450:70:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1298,
																			"name": "stakerStakedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1289,
																			"src": "2427:18:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 705,
																		"src": "2427:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2427:94:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 705,
																"src": "2427:98:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2427:111:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "2427:115:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2427:120:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2407:140:7"
											},
											{
												"expression": {
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1320,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "2558:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1323,
															"indexExpression": {
																"expression": {
																	"id": 1321,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2566:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2566:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2558:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1324,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakerCurrentReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1147,
														"src": "2558:39:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1331,
																"name": "newReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1297,
																"src": "2644:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"baseExpression": {
																		"id": 1325,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1182,
																		"src": "2600:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1328,
																	"indexExpression": {
																		"expression": {
																			"id": 1326,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2608:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2608:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2600:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1329,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakerCurrentReward",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1147,
																"src": "2600:39:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "2600:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2600:54:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2558:96:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1334,
												"nodeType": "ExpressionStatement",
												"src": "2558:96:7"
											},
											{
												"expression": {
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1335,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "2665:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1338,
															"indexExpression": {
																"expression": {
																	"id": 1336,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2673:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2673:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2665:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1339,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastUpdatedBlockNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1155,
														"src": "2665:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1340,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2710:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "2710:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2665:57:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1343,
												"nodeType": "ExpressionStatement",
												"src": "2665:57:7"
											}
										]
									},
									"id": 1345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateReward",
									"nameLocation": "2282:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2294:2:7"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2304:0:7"
									},
									"scope": 2010,
									"src": "2273:457:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1467,
										"nodeType": "Block",
										"src": "2805:816:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1353,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1347,
																"src": "2834:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2844:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2834:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2826:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2826:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1358,
												"nodeType": "ExpressionStatement",
												"src": "2826:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1362,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2916:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2916:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1360,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1187,
																		"src": "2900:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$912",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 851,
																	"src": "2900:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2900:27:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1365,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1347,
																"src": "2930:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2900:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7421",
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2939:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															},
															"value": "Insufficient!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															}
														],
														"id": 1359,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2892:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2892:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1369,
												"nodeType": "ExpressionStatement",
												"src": "2892:63:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1371,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1182,
																		"src": "2974:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1374,
																	"indexExpression": {
																		"expression": {
																			"id": 1372,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2982:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2982:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2974:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1375,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "staked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1157,
																"src": "2974:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30783535",
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3004:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_85_by_1",
																	"typeString": "int_const 85"
																},
																"value": "0x55"
															},
															"src": "2974:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c72656164792073746172746564",
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3010:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
																"typeString": "literal_string \"Already started\""
															},
															"value": "Already started"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55ab3174a5323a5cf1c9a30c7e43cc6ccd65bdd10d3571758b8ba8dbb82736a6",
																"typeString": "literal_string \"Already started\""
															}
														],
														"id": 1370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2966:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2966:62:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1380,
												"nodeType": "ExpressionStatement",
												"src": "2966:62:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1381,
														"name": "_mode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "3053:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3062:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3053:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1390,
															"name": "_mode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1349,
															"src": "3105:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3114:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3105:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1400,
																"name": "_mode",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1349,
																"src": "3190:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "32",
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3199:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "3190:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1410,
																	"name": "_mode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1349,
																	"src": "3275:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 1411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3284:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "3275:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1423,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1421,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1347,
																				"src": "3364:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1422,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3374:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "3364:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "496e76616c6964204d6f6465",
																			"id": 1424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3377:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062",
																				"typeString": "literal_string \"Invalid Mode\""
																			},
																			"value": "Invalid Mode"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_deac108a7d54cf66b12f6e883ab8551f52667d7b9815f115365cc11ce5c44062",
																				"typeString": "literal_string \"Invalid Mode\""
																			}
																		],
																		"id": 1420,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "3356:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3356:36:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1426,
																"nodeType": "ExpressionStatement",
																"src": "3356:36:7"
															},
															"id": 1427,
															"nodeType": "IfStatement",
															"src": "3271:121:7",
															"trueBody": {
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1414,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1347,
																				"src": "3295:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 1415,
																				"name": "_minStakeAmount_g",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "3306:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3295:28:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "496e73756666696369656e74",
																			"id": 1417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3325:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																				"typeString": "literal_string \"Insufficient\""
																			},
																			"value": "Insufficient"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																				"typeString": "literal_string \"Insufficient\""
																			}
																		],
																		"id": 1413,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "3287:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3287:53:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1419,
																"nodeType": "ExpressionStatement",
																"src": "3287:53:7"
															}
														},
														"id": 1428,
														"nodeType": "IfStatement",
														"src": "3186:206:7",
														"trueBody": {
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1404,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1347,
																			"src": "3210:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1405,
																			"name": "_minStakeAmount_s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "3221:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3210:28:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e73756666696369656e74",
																		"id": 1407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3240:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																			"typeString": "literal_string \"Insufficient\""
																		},
																		"value": "Insufficient"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																			"typeString": "literal_string \"Insufficient\""
																		}
																	],
																	"id": 1403,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3202:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3202:53:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1409,
															"nodeType": "ExpressionStatement",
															"src": "3202:53:7"
														}
													},
													"id": 1429,
													"nodeType": "IfStatement",
													"src": "3101:291:7",
													"trueBody": {
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1394,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1347,
																		"src": "3125:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1395,
																		"name": "_minStakeAmount_c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1174,
																		"src": "3136:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3125:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "496e73756666696369656e74",
																	"id": 1397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3155:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																		"typeString": "literal_string \"Insufficient\""
																	},
																	"value": "Insufficient"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_0d617be88096c346284999e0c326580edf46a27365999d8d83893f396c546e11",
																		"typeString": "literal_string \"Insufficient\""
																	}
																],
																"id": 1393,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3117:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3117:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1399,
														"nodeType": "ExpressionStatement",
														"src": "3117:53:7"
													}
												},
												"id": 1430,
												"nodeType": "IfStatement",
												"src": "3049:343:7",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1385,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1347,
																	"src": "3073:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3083:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3073:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 1384,
															"name": "require",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967278,
																4294967278
															],
															"referencedDeclaration": 4294967278,
															"src": "3065:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																"typeString": "function (bool) pure"
															}
														},
														"id": 1388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3065:20:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1389,
													"nodeType": "ExpressionStatement",
													"src": "3065:20:7"
												}
											},
											{
												"expression": {
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1431,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "3413:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1434,
															"indexExpression": {
																"expression": {
																	"id": 1432,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3421:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3421:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3413:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1435,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "mode",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1151,
														"src": "3413:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1436,
														"name": "_mode",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "3440:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3413:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1438,
												"nodeType": "ExpressionStatement",
												"src": "3413:32:7"
											},
											{
												"expression": {
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1439,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "3456:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1442,
															"indexExpression": {
																"expression": {
																	"id": 1440,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3464:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3464:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3456:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1443,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakeStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1153,
														"src": "3456:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1444,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3493:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3493:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3456:52:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1447,
												"nodeType": "ExpressionStatement",
												"src": "3456:52:7"
											},
											{
												"expression": {
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1448,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "3519:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1451,
															"indexExpression": {
																"expression": {
																	"id": 1449,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3527:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3527:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3519:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1452,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "staked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1157,
														"src": "3519:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30783535",
														"id": 1453,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3548:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_85_by_1",
															"typeString": "int_const 85"
														},
														"value": "0x55"
													},
													"src": "3519:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1455,
												"nodeType": "ExpressionStatement",
												"src": "3519:33:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1459,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3577:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3577:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1456,
															"name": "_stakers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "3563:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3563:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3563:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1462,
												"nodeType": "ExpressionStatement",
												"src": "3563:25:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1464,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "3605:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1463,
														"name": "stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1546,
														"src": "3599:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3599:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1466,
												"nodeType": "ExpressionStatement",
												"src": "3599:14:7"
											}
										]
									},
									"functionSelector": "4b77dd9e",
									"id": 1468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startStaking",
									"nameLocation": "2751:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2772:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "2764:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2764:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "_mode",
												"nameLocation": "2789:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "2781:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2781:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2763:32:7"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2805:0:7"
									},
									"scope": 2010,
									"src": "2742:879:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1545,
										"nodeType": "Block",
										"src": "3727:544:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1474,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "3756:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3766:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3756:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3769:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3748:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3748:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1479,
												"nodeType": "ExpressionStatement",
												"src": "3748:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1483,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3838:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3838:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1481,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1187,
																		"src": "3822:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBEP20_$912",
																			"typeString": "contract IBEP20"
																		}
																	},
																	"id": 1482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 851,
																	"src": "3822:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3822:27:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1486,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "3852:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3822:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7421",
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3861:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															},
															"value": "Insufficient!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1b26b34cec23caedf9bfbc24701695bd89e84a1a9dbb3dfae96886e8db4f811",
																"typeString": "literal_string \"Insufficient!\""
															}
														],
														"id": 1480,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3814:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3814:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1490,
												"nodeType": "ExpressionStatement",
												"src": "3814:63:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1492,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1182,
																		"src": "3896:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1495,
																	"indexExpression": {
																		"expression": {
																			"id": 1493,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3904:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3904:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3896:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1496,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "staked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1157,
																"src": "3896:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783535",
																"id": 1497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3926:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_85_by_1",
																	"typeString": "int_const 85"
																},
																"value": "0x55"
															},
															"src": "3896:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f723a20696e76616c6964207374616b6572",
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3932:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
																"typeString": "literal_string \"Error: invalid staker\""
															},
															"value": "Error: invalid staker"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ffad9177c2b9a93cc0727fc667610be5ce1e08cb1795e983b645a2122660684",
																"typeString": "literal_string \"Error: invalid staker\""
															}
														],
														"id": 1491,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3888:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3888:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1501,
												"nodeType": "ExpressionStatement",
												"src": "3888:68:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1502,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1345,
														"src": "3977:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3977:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1504,
												"nodeType": "ExpressionStatement",
												"src": "3977:14:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1508,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4035:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4035:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1512,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4055:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingPlatform_$2010",
																		"typeString": "contract StakingPlatform"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingPlatform_$2010",
																		"typeString": "contract StakingPlatform"
																	}
																],
																"id": 1511,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4047:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1510,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4047:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4047:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1514,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "4062:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1505,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "4012:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 972,
														"src": "4012:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,address,uint256)"
														}
													},
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4012:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1516,
												"nodeType": "ExpressionStatement",
												"src": "4012:58:7"
											},
											{
												"expression": {
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1517,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "4081:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1520,
															"indexExpression": {
																"expression": {
																	"id": 1518,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4089:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4089:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4081:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1521,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1149,
														"src": "4081:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1528,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "4153:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"baseExpression": {
																		"id": 1522,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1182,
																		"src": "4116:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																			"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																		}
																	},
																	"id": 1525,
																	"indexExpression": {
																		"expression": {
																			"id": 1523,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4124:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4124:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4116:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage",
																		"typeString": "struct StakingPlatform.Staker storage ref"
																	}
																},
																"id": 1526,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1149,
																"src": "4116:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "4116:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4116:45:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4081:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1531,
												"nodeType": "ExpressionStatement",
												"src": "4081:80:7"
											},
											{
												"expression": {
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1532,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "4172:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1535,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "4202:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1533,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "4186:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "4186:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4186:24:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4172:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1538,
												"nodeType": "ExpressionStatement",
												"src": "4172:38:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1540,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4243:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4243:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1542,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "4255:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1539,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "4236:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4236:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1544,
												"nodeType": "EmitStatement",
												"src": "4231:32:7"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "3698:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3712:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "3704:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3704:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3703:17:7"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3727:0:7"
									},
									"scope": 2010,
									"src": "3689:582:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1553,
										"nodeType": "Block",
										"src": "4335:39:7",
										"statements": [
											{
												"expression": {
													"id": 1551,
													"name": "totalStaked",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1184,
													"src": "4355:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1550,
												"id": 1552,
												"nodeType": "Return",
												"src": "4348:18:7"
											}
										]
									},
									"functionSelector": "0917e776",
									"id": 1554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalStaked",
									"nameLocation": "4288:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4302:2:7"
									},
									"returnParameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "4326:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4326:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4325:9:7"
									},
									"scope": 2010,
									"src": "4279:95:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "4442:43:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1559,
														"name": "_stakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "4462:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4462:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1558,
												"id": 1561,
												"nodeType": "Return",
												"src": "4455:22:7"
											}
										]
									},
									"functionSelector": "5715ec11",
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNumberofStakers",
									"nameLocation": "4391:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4409:2:7"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "4433:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4433:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4432:9:7"
									},
									"scope": 2010,
									"src": "4382:103:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1580,
										"nodeType": "Block",
										"src": "4564:63:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1570,
																	"name": "_staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1182,
																	"src": "4584:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																		"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																	}
																},
																"id": 1572,
																"indexExpression": {
																	"id": 1571,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1565,
																	"src": "4592:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4584:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1158_storage",
																	"typeString": "struct StakingPlatform.Staker storage ref"
																}
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mode",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1151,
															"src": "4584:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4610:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4584:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "31",
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4618:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4584:35:7",
													"trueExpression": {
														"hexValue": "30",
														"id": 1576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4614:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1569,
												"id": 1579,
												"nodeType": "Return",
												"src": "4577:42:7"
											}
										]
									},
									"functionSelector": "aedf562b",
									"id": 1581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakerMode",
									"nameLocation": "4502:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "4524:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "4516:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4516:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4515:18:7"
									},
									"returnParameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "4555:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4555:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4554:9:7"
									},
									"scope": 2010,
									"src": "4493:134:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1593,
										"nodeType": "Block",
										"src": "4707:52:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1588,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "4727:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1590,
														"indexExpression": {
															"id": 1589,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "4735:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4727:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "staked",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1157,
													"src": "4727:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1587,
												"id": 1592,
												"nodeType": "Return",
												"src": "4720:31:7"
											}
										]
									},
									"functionSelector": "fe600f84",
									"id": 1594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isStartStaking",
									"nameLocation": "4644:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "4667:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "4659:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4659:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4658:18:7"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "4698:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4697:9:7"
									},
									"scope": 2010,
									"src": "4635:124:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1648,
										"nodeType": "Block",
										"src": "4833:336:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1601,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "4850:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1603,
															"indexExpression": {
																"id": 1602,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "4858:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4850:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1604,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1157,
														"src": "4850:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30783535",
														"id": 1605,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4878:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_85_by_1",
															"typeString": "int_const 85"
														},
														"value": "0x55"
													},
													"src": "4850:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1609,
												"nodeType": "IfStatement",
												"src": "4846:59:7",
												"trueBody": {
													"expression": {
														"hexValue": "31",
														"id": 1607,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4904:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"functionReturnParameters": 1600,
													"id": 1608,
													"nodeType": "Return",
													"src": "4897:8:7"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1610,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "4920:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																}
															},
															"id": 1612,
															"indexExpression": {
																"id": 1611,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "4928:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4920:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct StakingPlatform.Staker storage ref"
															}
														},
														"id": 1613,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mode",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1151,
														"src": "4920:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1614,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4946:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4920:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1636,
																				"name": "_staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1182,
																				"src": "5103:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																					"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																				}
																			},
																			"id": 1638,
																			"indexExpression": {
																				"id": 1637,
																				"name": "_address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1596,
																				"src": "5111:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5103:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Staker_$1158_storage",
																				"typeString": "struct StakingPlatform.Staker storage ref"
																			}
																		},
																		"id": 1639,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "stakeStartTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1153,
																		"src": "5103:32:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1633,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "5083:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "5083:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 690,
																	"src": "5083:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5083:53:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1641,
																"name": "_lockupPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "5140:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5083:70:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"hexValue": "31",
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5160:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"id": 1645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "5083:78:7",
														"trueExpression": {
															"hexValue": "30",
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5156:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"functionReturnParameters": 1600,
													"id": 1646,
													"nodeType": "Return",
													"src": "5076:85:7"
												},
												"id": 1647,
												"nodeType": "IfStatement",
												"src": "4916:245:7",
												"trueBody": {
													"expression": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"baseExpression": {
																					"id": 1619,
																					"name": "_staker",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1182,
																					"src": "4989:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																						"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
																					}
																				},
																				"id": 1621,
																				"indexExpression": {
																					"id": 1620,
																					"name": "_address",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1596,
																					"src": "4997:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4989:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Staker_$1158_storage",
																					"typeString": "struct StakingPlatform.Staker storage ref"
																				}
																			},
																			"id": 1622,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakeStartTime",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1153,
																			"src": "4989:32:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1616,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "4969:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "4969:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 690,
																		"src": "4969:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4969:53:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"components": [
																		{
																			"hexValue": "37",
																			"id": 1624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5026:6:7",
																			"subdenomination": "days",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_604800_by_1",
																				"typeString": "int_const 604800"
																			},
																			"value": "7"
																		}
																	],
																	"id": 1625,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5025:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_604800_by_1",
																		"typeString": "int_const 604800"
																	}
																},
																"src": "4969:64:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5037:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4969:69:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"hexValue": "31",
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5045:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"id": 1631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "4969:77:7",
														"trueExpression": {
															"hexValue": "30",
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5041:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"functionReturnParameters": 1600,
													"id": 1632,
													"nodeType": "Return",
													"src": "4962:84:7"
												}
											}
										]
									},
									"functionSelector": "4a4fbeec",
									"id": 1649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isLocked",
									"nameLocation": "4776:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "4793:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "4785:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4785:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4784:18:7"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "4824:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4823:9:7"
									},
									"scope": 2010,
									"src": "4767:402:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1661,
										"nodeType": "Block",
										"src": "5251:66:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1656,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "5279:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1658,
														"indexExpression": {
															"id": 1657,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1651,
															"src": "5287:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5279:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1659,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakedAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1149,
													"src": "5279:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1655,
												"id": 1660,
												"nodeType": "Return",
												"src": "5272:37:7"
											}
										]
									},
									"functionSelector": "f9931855",
									"id": 1662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakedAmount",
									"nameLocation": "5190:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "5211:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "5203:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5203:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5202:18:7"
									},
									"returnParameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "5242:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5242:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5241:9:7"
									},
									"scope": 2010,
									"src": "5181:136:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1674,
										"nodeType": "Block",
										"src": "5399:65:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1669,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "5419:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1671,
														"indexExpression": {
															"id": 1670,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "5427:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5419:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakerCurrentReward",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1147,
													"src": "5419:37:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1668,
												"id": 1673,
												"nodeType": "Return",
												"src": "5412:44:7"
											}
										]
									},
									"functionSelector": "645a8a56",
									"id": 1675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardAmount",
									"nameLocation": "5338:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "5359:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "5351:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5351:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5350:18:7"
									},
									"returnParameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "5390:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5389:9:7"
									},
									"scope": 2010,
									"src": "5329:135:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1682,
										"nodeType": "Block",
										"src": "5527:39:7",
										"statements": [
											{
												"expression": {
													"id": 1680,
													"name": "_rewardRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1164,
													"src": "5547:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1679,
												"id": 1681,
												"nodeType": "Return",
												"src": "5540:18:7"
											}
										]
									},
									"functionSelector": "7e1a3786",
									"id": 1683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardRate",
									"nameLocation": "5481:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5494:2:7"
									},
									"returnParameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "5518:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5517:9:7"
									},
									"scope": 2010,
									"src": "5472:94:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1828,
										"nodeType": "Block",
										"src": "5655:1138:7",
										"statements": [
											{
												"assignments": [
													1690
												],
												"declarations": [
													{
														"constant": false,
														"id": 1690,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "5691:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1828,
														"src": "5676:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1689,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1688,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1158,
																"src": "5676:6:7"
															},
															"referencedDeclaration": 1158,
															"src": "5676:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1695,
												"initialValue": {
													"baseExpression": {
														"id": 1691,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "5700:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1694,
													"indexExpression": {
														"expression": {
															"id": 1692,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5708:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5708:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5700:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1158_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5676:43:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1697,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1685,
																"src": "5744:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1698,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5753:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5744:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5756:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															},
															"value": "Amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
																"typeString": "literal_string \"Amount should be greater than 0\""
															}
														],
														"id": 1696,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5736:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5736:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1702,
												"nodeType": "ExpressionStatement",
												"src": "5736:54:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1704,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1685,
																"src": "5809:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1705,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1690,
																	"src": "5819:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1706,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1149,
																"src": "5819:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5809:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74",
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5840:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															},
															"value": "Invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															}
														],
														"id": 1703,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5801:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5801:56:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1710,
												"nodeType": "ExpressionStatement",
												"src": "5801:56:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1711,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1345,
														"src": "5870:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5870:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1713,
												"nodeType": "ExpressionStatement",
												"src": "5870:14:7"
											},
											{
												"assignments": [
													1715
												],
												"declarations": [
													{
														"constant": false,
														"id": 1715,
														"mutability": "mutable",
														"name": "amountTobeWithdrawn",
														"nameLocation": "5903:19:7",
														"nodeType": "VariableDeclaration",
														"scope": 1828,
														"src": "5895:27:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1714,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5895:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1734,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1724,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1716,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "5925:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1721,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5958:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_StakingPlatform_$2010",
																				"typeString": "contract StakingPlatform"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_StakingPlatform_$2010",
																				"typeString": "contract StakingPlatform"
																			}
																		],
																		"id": 1720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5950:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1719,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5950:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5950:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1717,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "5934:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 851,
																"src": "5934:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5934:30:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5925:39:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1730,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "6000:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StakingPlatform_$2010",
																			"typeString": "contract StakingPlatform"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_StakingPlatform_$2010",
																			"typeString": "contract StakingPlatform"
																		}
																	],
																	"id": 1729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5992:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1728,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5992:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5992:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1726,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "5976:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$912",
																	"typeString": "contract IBEP20"
																}
															},
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 851,
															"src": "5976:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5976:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5925:81:7",
													"trueExpression": {
														"id": 1725,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1685,
														"src": "5967:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5895:111:7"
											},
											{
												"assignments": [
													1736
												],
												"declarations": [
													{
														"constant": false,
														"id": 1736,
														"mutability": "mutable",
														"name": "during",
														"nameLocation": "6025:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1828,
														"src": "6017:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1735,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6017:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1746,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6081:6:7",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_86400_by_1",
																"typeString": "int_const 86400"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1740,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1690,
																		"src": "6054:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																			"typeString": "struct StakingPlatform.Staker storage pointer"
																		}
																	},
																	"id": 1741,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stakeStartTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1153,
																	"src": "6054:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 1737,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "6034:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "6034:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 690,
																"src": "6034:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6034:42:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "6034:46:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6034:54:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6017:71:7"
											},
											{
												"assignments": [
													1748
												],
												"declarations": [
													{
														"constant": false,
														"id": 1748,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "6107:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1828,
														"src": "6099:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1747,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6099:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1750,
												"initialValue": {
													"hexValue": "313030",
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6113:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_100_by_1",
														"typeString": "int_const 100"
													},
													"value": "100"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6099:17:7"
											},
											{
												"assignments": [
													1752
												],
												"declarations": [
													{
														"constant": false,
														"id": 1752,
														"mutability": "mutable",
														"name": "isLockupTimeOver",
														"nameLocation": "6132:16:7",
														"nodeType": "VariableDeclaration",
														"scope": 1828,
														"src": "6127:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1751,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6127:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1775,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1756,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1753,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1690,
																"src": "6151:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																	"typeString": "struct StakingPlatform.Staker storage pointer"
																}
															},
															"id": 1754,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mode",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1151,
															"src": "6151:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1755,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6166:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6151:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1766,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6226:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6226:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1771,
																	"name": "_lockupPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1168,
																	"src": "6271:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 1768,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1690,
																		"src": "6245:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																			"typeString": "struct StakingPlatform.Staker storage pointer"
																		}
																	},
																	"id": 1769,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stakeStartTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1153,
																	"src": "6245:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 675,
																"src": "6245:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6245:40:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6226:59:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "6151:134:7",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1765,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1757,
																	"name": "during",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1736,
																	"src": "6170:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"id": 1758,
																	"name": "_eventPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1162,
																	"src": "6179:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6170:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6195:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6170:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1762,
																"name": "during",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1736,
																"src": "6200:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6209:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6200:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6170:40:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6127:158:7"
											},
											{
												"condition": {
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6300:17:7",
													"subExpression": {
														"id": 1776,
														"name": "isLockupTimeOver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1752,
														"src": "6301:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1783,
												"nodeType": "IfStatement",
												"src": "6296:73:7",
												"trueBody": {
													"id": 1782,
													"nodeType": "Block",
													"src": "6319:50:7",
													"statements": [
														{
															"expression": {
																"id": 1780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1778,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1748,
																	"src": "6334:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1779,
																	"name": "_unstakingFeeRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1160,
																	"src": "6340:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6334:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1781,
															"nodeType": "ExpressionStatement",
															"src": "6334:23:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1784,
														"name": "amountTobeWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1715,
														"src": "6379:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "316534",
																		"id": 1792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6458:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "1e4"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1789,
																				"name": "fee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1748,
																				"src": "6449:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1787,
																				"name": "amountTobeWithdrawn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1715,
																				"src": "6425:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 705,
																			"src": "6425:23:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6425:28:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 720,
																	"src": "6425:32:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6425:37:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1785,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1715,
																"src": "6401:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "6401:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6401:62:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6379:84:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1796,
												"nodeType": "ExpressionStatement",
												"src": "6379:84:7"
											},
											{
												"expression": {
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1797,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "6474:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1800,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1715,
																"src": "6504:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1798,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1184,
																"src": "6488:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "6488:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6488:36:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6474:50:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1803,
												"nodeType": "ExpressionStatement",
												"src": "6474:50:7"
											},
											{
												"expression": {
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1804,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1690,
															"src": "6535:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1806,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1149,
														"src": "6535:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1810,
																"name": "amountTobeWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1715,
																"src": "6581:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1807,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1690,
																	"src": "6557:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																		"typeString": "struct StakingPlatform.Staker storage pointer"
																	}
																},
																"id": 1808,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1149,
																"src": "6557:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 690,
															"src": "6557:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1811,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6557:44:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6535:66:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1813,
												"nodeType": "ExpressionStatement",
												"src": "6535:66:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1817,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6631:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6631:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1819,
															"name": "amountTobeWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "6643:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1814,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "6612:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1816,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "6612:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6612:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1821,
												"nodeType": "ExpressionStatement",
												"src": "6612:51:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1823,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6690:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6690:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1825,
															"name": "amountTobeWithdrawn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "6702:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1822,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "6681:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6681:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1827,
												"nodeType": "EmitStatement",
												"src": "6676:46:7"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "5622:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5639:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "5631:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5631:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5630:16:7"
									},
									"returnParameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5655:0:7"
									},
									"scope": 2010,
									"src": "5613:1180:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1851,
										"nodeType": "Block",
										"src": "6869:163:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1837,
																"name": "__rewardRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1831,
																"src": "6898:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6913:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6898:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642076616c7565",
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6916:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
																"typeString": "literal_string \"Invalid value\""
															},
															"value": "Invalid value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a06538b932a313089ae566efd0e7e26dd4e72c52e77044e966d0526f069591e6",
																"typeString": "literal_string \"Invalid value\""
															}
														],
														"id": 1836,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6890:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6890:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1842,
												"nodeType": "ExpressionStatement",
												"src": "6890:42:7"
											},
											{
												"expression": {
													"id": 1845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1843,
														"name": "_rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "6953:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1844,
														"name": "__rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "6967:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6953:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1846,
												"nodeType": "ExpressionStatement",
												"src": "6953:26:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1848,
															"name": "__rewardRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "7011:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1847,
														"name": "SetRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "6997:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6997:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1850,
												"nodeType": "EmitStatement",
												"src": "6992:32:7"
											}
										]
									},
									"functionSelector": "9e447fc6",
									"id": 1852,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1834,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1833,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "6859:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6859:9:7"
										}
									],
									"name": "setRewardRate",
									"nameLocation": "6814:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "__rewardRate",
												"nameLocation": "6836:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "6828:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6828:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6827:22:7"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6869:0:7"
									},
									"scope": 2010,
									"src": "6805:227:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1877,
										"nodeType": "Block",
										"src": "7106:182:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1860,
																"name": "__eventPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1854,
																"src": "7135:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7151:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7135:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964204c6f636b7570204475726174696f6e",
															"id": 1863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7154:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																"typeString": "literal_string \"Invalid Lockup Duration\""
															},
															"value": "Invalid Lockup Duration"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d64707e330e6424e6e6f66a7e5abad36ecb90edb9f7aea28569fcf70689cd561",
																"typeString": "literal_string \"Invalid Lockup Duration\""
															}
														],
														"id": 1859,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7127:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7127:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1865,
												"nodeType": "ExpressionStatement",
												"src": "7127:53:7"
											},
											{
												"expression": {
													"id": 1871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1866,
														"name": "_eventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "7193:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 1869,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7226:6:7",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																}
															],
															"expression": {
																"id": 1867,
																"name": "__eventPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1854,
																"src": "7208:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 705,
															"src": "7208:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7208:25:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7193:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1872,
												"nodeType": "ExpressionStatement",
												"src": "7193:40:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1874,
															"name": "__eventPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1854,
															"src": "7266:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1873,
														"name": "SetEventPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "7251:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7251:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1876,
												"nodeType": "EmitStatement",
												"src": "7246:34:7"
											}
										]
									},
									"functionSelector": "692642e7",
									"id": 1878,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1857,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1856,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "7096:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7096:9:7"
										}
									],
									"name": "setEventPeriod",
									"nameLocation": "7049:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "__eventPeriod",
												"nameLocation": "7072:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "7064:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7064:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7063:23:7"
									},
									"returnParameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7106:0:7"
									},
									"scope": 2010,
									"src": "7040:248:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1900,
										"nodeType": "Block",
										"src": "7372:198:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1886,
																"name": "__unstakingFeeRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1880,
																"src": "7401:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7422:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7401:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420556e7374616b696e67204665652052617465",
															"id": 1889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7425:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																"typeString": "literal_string \"Invalid Unstaking Fee Rate\""
															},
															"value": "Invalid Unstaking Fee Rate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2ad737b4a96ed1ff5e0f3b628534810740dec708535e3a6d1e3e1863fe1ebe3",
																"typeString": "literal_string \"Invalid Unstaking Fee Rate\""
															}
														],
														"id": 1885,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7393:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7393:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1891,
												"nodeType": "ExpressionStatement",
												"src": "7393:61:7"
											},
											{
												"expression": {
													"id": 1894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1892,
														"name": "_unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "7467:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1893,
														"name": "__unstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1880,
														"src": "7487:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7467:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1895,
												"nodeType": "ExpressionStatement",
												"src": "7467:38:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1897,
															"name": "__unstakingFeeRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1880,
															"src": "7543:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1896,
														"name": "SetUnstakingFeeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "7523:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7523:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1899,
												"nodeType": "EmitStatement",
												"src": "7518:44:7"
											}
										]
									},
									"functionSelector": "91e07e7a",
									"id": 1901,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1883,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1882,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "7362:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7362:9:7"
										}
									],
									"name": "setUnstakingFeeRate",
									"nameLocation": "7305:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "__unstakingFeeRate",
												"nameLocation": "7333:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "7325:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7325:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7324:28:7"
									},
									"returnParameters": {
										"id": 1884,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7372:0:7"
									},
									"scope": 2010,
									"src": "7296:274:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1919,
										"nodeType": "Block",
										"src": "7640:100:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1909,
																"name": "lockupTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1903,
																"src": "7661:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1910,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7674:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7661:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e2774206265207a65726f",
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7677:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															},
															"value": "Can't be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6a222940c508e6f31ae9970d54669ff14f4ed7b20e75fe235ec7996fff78ce2",
																"typeString": "literal_string \"Can't be zero\""
															}
														],
														"id": 1908,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7653:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7653:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1914,
												"nodeType": "ExpressionStatement",
												"src": "7653:40:7"
											},
											{
												"expression": {
													"id": 1917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1915,
														"name": "_lockupPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "7706:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1916,
														"name": "lockupTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1903,
														"src": "7722:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7706:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1918,
												"nodeType": "ExpressionStatement",
												"src": "7706:26:7"
											}
										]
									},
									"functionSelector": "4b62b70b",
									"id": 1920,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1906,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1905,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "7630:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7630:9:7"
										}
									],
									"name": "setLockupTime",
									"nameLocation": "7587:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "lockupTime",
												"nameLocation": "7609:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1920,
												"src": "7601:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7601:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7600:20:7"
									},
									"returnParameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7640:0:7"
									},
									"scope": 2010,
									"src": "7578:162:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1931,
										"nodeType": "Block",
										"src": "7859:103:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1925,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "7915:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
															}
														},
														"id": 1928,
														"indexExpression": {
															"expression": {
																"id": 1926,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7923:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7923:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7915:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage",
															"typeString": "struct StakingPlatform.Staker storage ref"
														}
													},
													"id": 1929,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakerCurrentReward",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1147,
													"src": "7915:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1924,
												"id": 1930,
												"nodeType": "Return",
												"src": "7908:46:7"
											}
										]
									},
									"functionSelector": "5d2ec65d",
									"id": 1932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardToHarvest",
									"nameLocation": "7812:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7827:2:7"
									},
									"returnParameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "7851:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7851:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:9:7"
									},
									"scope": 2010,
									"src": "7803:159:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2008,
										"nodeType": "Block",
										"src": "8028:557:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1935,
														"name": "updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1345,
														"src": "8049:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8049:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1937,
												"nodeType": "ExpressionStatement",
												"src": "8049:14:7"
											},
											{
												"assignments": [
													1940
												],
												"declarations": [
													{
														"constant": false,
														"id": 1940,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "8089:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 2008,
														"src": "8074:21:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
															"typeString": "struct StakingPlatform.Staker"
														},
														"typeName": {
															"id": 1939,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1938,
																"name": "Staker",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1158,
																"src": "8074:6:7"
															},
															"referencedDeclaration": 1158,
															"src": "8074:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																"typeString": "struct StakingPlatform.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1945,
												"initialValue": {
													"baseExpression": {
														"id": 1941,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "8098:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
															"typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
														}
													},
													"id": 1944,
													"indexExpression": {
														"expression": {
															"id": 1942,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "8106:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "8106:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8098:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1158_storage",
														"typeString": "struct StakingPlatform.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8074:43:7"
											},
											{
												"assignments": [
													1947
												],
												"declarations": [
													{
														"constant": false,
														"id": 1947,
														"mutability": "mutable",
														"name": "rewardToClaim",
														"nameLocation": "8136:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 2008,
														"src": "8128:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1946,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8128:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1960,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "316534",
																	"id": 1957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8234:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "1e4"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1954,
																			"name": "_rewardFeeRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "8214:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1951,
																				"name": "staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1940,
																				"src": "8183:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																					"typeString": "struct StakingPlatform.Staker storage pointer"
																				}
																			},
																			"id": 1952,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakerCurrentReward",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1147,
																			"src": "8183:26:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 705,
																		"src": "8183:30:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8183:46:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 720,
																"src": "8183:50:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8183:55:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1948,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1940,
																"src": "8152:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																	"typeString": "struct StakingPlatform.Staker storage pointer"
																}
															},
															"id": 1949,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakerCurrentReward",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1147,
															"src": "8152:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 690,
														"src": "8152:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8152:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8128:111:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1962,
																"name": "rewardToClaim",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1947,
																"src": "8268:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8284:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8268:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f20636c61696d",
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8287:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																"typeString": "literal_string \"Nothing to claim\""
															},
															"value": "Nothing to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b72ba14eb1a8a9d546abe036e42fec8df7f04acf2220edbbc427b6b1c2eb1d3",
																"typeString": "literal_string \"Nothing to claim\""
															}
														],
														"id": 1961,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8260:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8260:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1967,
												"nodeType": "ExpressionStatement",
												"src": "8260:46:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1968,
														"name": "rewardToClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1947,
														"src": "8321:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1973,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "8361:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StakingPlatform_$2010",
																			"typeString": "contract StakingPlatform"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_StakingPlatform_$2010",
																			"typeString": "contract StakingPlatform"
																		}
																	],
																	"id": 1972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8353:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1971,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8353:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8353:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1969,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "8337:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IBEP20_$912",
																	"typeString": "contract IBEP20"
																}
															},
															"id": 1970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 851,
															"src": "8337:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8337:30:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8321:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1987,
												"nodeType": "IfStatement",
												"src": "8317:111:7",
												"trueBody": {
													"expression": {
														"id": 1985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1977,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1947,
															"src": "8382:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1982,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "8422:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_StakingPlatform_$2010",
																				"typeString": "contract StakingPlatform"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_StakingPlatform_$2010",
																				"typeString": "contract StakingPlatform"
																			}
																		],
																		"id": 1981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8414:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1980,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8414:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8414:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1978,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "8398:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBEP20_$912",
																		"typeString": "contract IBEP20"
																	}
																},
																"id": 1979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 851,
																"src": "8398:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8398:30:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8382:46:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1986,
													"nodeType": "ExpressionStatement",
													"src": "8382:46:7"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1991,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8458:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8458:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1993,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1947,
															"src": "8470:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1988,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "8439:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$912",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "8439:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$912_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$912_$",
															"typeString": "function (contract IBEP20,address,uint256)"
														}
													},
													"id": 1994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8439:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1995,
												"nodeType": "ExpressionStatement",
												"src": "8439:45:7"
											},
											{
												"expression": {
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1996,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1940,
															"src": "8495:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
																"typeString": "struct StakingPlatform.Staker storage pointer"
															}
														},
														"id": 1998,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakerCurrentReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1147,
														"src": "8495:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1999,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8524:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8495:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2001,
												"nodeType": "ExpressionStatement",
												"src": "8495:30:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2003,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8551:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8551:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2005,
															"name": "rewardToClaim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1947,
															"src": "8563:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2002,
														"name": "Harvest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "8543:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8543:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2007,
												"nodeType": "EmitStatement",
												"src": "8538:39:7"
											}
										]
									},
									"functionSelector": "4641257d",
									"id": 2009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "harvest",
									"nameLocation": "8012:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8019:2:7"
									},
									"returnParameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8028:0:7"
									},
									"scope": 2010,
									"src": "8003:582:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2011,
							"src": "260:8328:7",
							"usedErrors": []
						}
					],
					"src": "33:8557:7"
				},
				"id": 7
			}
		}
	}
}